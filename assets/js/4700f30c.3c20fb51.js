"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6519],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return t?a.createElement(f,i(i({ref:n},d),{},{components:t})):a.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6219:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:1},i="Column Level Lineage Dataset Facet",l={unversionedId:"spec/facets/dataset-facets/column_lineage_facet",id:"spec/facets/dataset-facets/column_lineage_facet",title:"Column Level Lineage Dataset Facet",description:"Column level lineage provides fine grained information on datasets' dependencies. Not only we know the dependency exist, but we are also able to understand which input columns are used to produce output columns. This allows answering questions like Which root input columns are used to construct column x?",source:"@site/docs/spec/facets/dataset-facets/column_lineage_facet.md",sourceDirName:"spec/facets/dataset-facets",slug:"/spec/facets/dataset-facets/column_lineage_facet",permalink:"/docs/spec/facets/dataset-facets/column_lineage_facet",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/spec/facets/dataset-facets/column_lineage_facet.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Dataset Facets",permalink:"/docs/spec/facets/dataset-facets/"},next:{title:"Datasource Facet",permalink:"/docs/spec/facets/dataset-facets/data_source"}},s={},c=[],d={toc:c};function p(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"column-level-lineage-dataset-facet"},"Column Level Lineage Dataset Facet"),(0,r.kt)("p",null,"Column level lineage provides fine grained information on datasets' dependencies. Not only we know the dependency exist, but we are also able to understand which input columns are used to produce output columns. This allows answering questions like ",(0,r.kt)("em",{parentName:"p"},"Which root input columns are used to construct column x?")," "),(0,r.kt)("p",null,"For example, a Job might executes the following query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO top_delivery_times (\n    order_id,\n    order_placed_on,\n    order_delivered_on,\n    order_delivery_time\n)\nSELECT\n    order_id,\n    order_placed_on,\n    order_delivered_on,\n    DATEDIFF(minute, order_placed_on, order_delivered_on) AS order_delivery_time,\nFROM delivery_7_days\nORDER BY order_delivery_time DESC\nLIMIT 1;\n")),(0,r.kt)("p",null,"This would establish the following relationships between the ",(0,r.kt)("inlineCode",{parentName:"p"},"delivery_7_days")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"top_delivery_times")," tables:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:t(389).Z,width:"716",height:"287"})),(0,r.kt)("p",null,"An OpenLinage run state update that represent this query using column-level lineage facets might look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "eventType": "START",\n    "eventTime": "2020-02-22T22:42:42.000Z",\n    "run": ...,\n    "job": ...,\n    "inputs": [\n        {\n          "namespace": "food_delivery",\n          "name": "public.delivery_7_days"\n        }\n    ],\n    "outputs": [\n        {\n            "namespace": "food_delivery",\n            "name": "public.top_delivery_times",\n            "facets": {\n                "columnLineage": {\n                    "_producer": "https://github.com/MarquezProject/marquez/blob/main/docker/metadata.json",\n                    "_schemaURL": "https://openlineage.io/spec/facets/1-0-1/ColumnLineageDatasetFacet.json",\n                    "fields": {\n                        "order_id": {\n                            "inputFields": [\n                                {\n                                    "namespace": "food_delivery",\n                                    "name": "public.delivery_7_days",\n                                    "field": "order_id"\n                                }\n                            ]\n                        },\n                        "order_placed_on": {\n                            "inputFields": [\n                                {\n                                    "namespace": "food_delivery",\n                                    "name": "public.delivery_7_days",\n                                    "field": "order_placed_on"\n                                }\n                            ]\n                        },\n                        "order_delivered_on": {\n                            "inputFields": [\n                                {\n                                    "namespace": "food_delivery",\n                                    "name": "public.delivery_7_days",\n                                    "field": "order_delivered_on"\n                                }\n                            ]\n                        },\n                        "order_delivery_time": {\n                            "inputFields": [\n                                {\n                                    "namespace": "food_delivery",\n                                    "name": "public.delivery_7_days",\n                                    "field": "order_placed_on"\n                                },\n                                {\n                                    "namespace": "food_delivery",\n                                    "name": "public.delivery_7_days",\n                                    "field": "order_delivered_on"\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        }\n    ],\n    ...\n}\n')),(0,r.kt)("p",null,"The facet specification can be found ",(0,r.kt)("a",{parentName:"p",href:"https://openlineage.io/spec/facets/1-0-1/ColumnLineageDatasetFacet.json"},"here"),"."))}p.isMDXComponent=!0},389:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/column_lineage_facet-76961a507e1d14d6972995d33283d7f5.svg"}}]);