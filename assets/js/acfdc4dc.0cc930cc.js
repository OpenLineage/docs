"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[908],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(a),k=r,g=m["".concat(s,".").concat(k)]||m[k]||u[k]||i;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},44909:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:2,title:"Quickstart with AWS Glue"},o=void 0,p={unversionedId:"integrations/spark/quickstart/quickstart_glue",id:"integrations/spark/quickstart/quickstart_glue",title:"Quickstart with AWS Glue",description:"The DynamicFrames API is currently not supported. Use DataFrames, DataSets or RDD instead.",source:"@site/docs/integrations/spark/quickstart/quickstart_glue.md",sourceDirName:"integrations/spark/quickstart",slug:"/integrations/spark/quickstart/quickstart_glue",permalink:"/docs/integrations/spark/quickstart/quickstart_glue",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/integrations/spark/quickstart/quickstart_glue.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Quickstart with AWS Glue"},sidebar:"tutorialSidebar",previous:{title:"Quickstart with Databricks",permalink:"/docs/integrations/spark/quickstart/quickstart_databricks"},next:{title:"Job Hierarchy",permalink:"/docs/integrations/spark/job-hierarchy"}},s={},l=[{value:"Enable OpenLineage",id:"enable-openlineage",level:2},{value:"Verification",id:"verification",level:2}],c={toc:l};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DynamicFrames")," API is currently not supported. Use ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrames"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"DataSets")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RDD")," instead.")),(0,r.kt)("h2",{id:"enable-openlineage"},"Enable OpenLineage"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The configuration must be specified in the ",(0,r.kt)("strong",{parentName:"p"},"Job details")," tab. AWS Glue may ignore the properties if they are specified in the application source code.")),(0,r.kt)("p",null,"Follow these steps to enable OpenLineage on AWS Glue:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Specify the OpenLineage JAR URL")),(0,r.kt)("p",{parentName:"li"},"In the ",(0,r.kt)("strong",{parentName:"p"},"Job details")," tab, navigate to ",(0,r.kt)("strong",{parentName:"p"},"Advanced properties")," \u2192 ",(0,r.kt)("strong",{parentName:"p"},"Libraries")," \u2192 ",(0,r.kt)("strong",{parentName:"p"},"Dependent Jars path")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use the URL directly from ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://mvnrepository.com/artifact/io.openlineage/openlineage-spark"},"Maven Central openlineage-spark"))),(0,r.kt)("li",{parentName:"ul"},"Ensure you select the version for ",(0,r.kt)("strong",{parentName:"li"},"Scala 2.12"),", as Glue Spark is compiled with Scala 2.12 and version 2.13 won't be compatible."),(0,r.kt)("li",{parentName:"ul"},"On the page for the specific OpenLineage version for Scala 2.12, copy the URL of the jar file from the Files row and use it in Glue."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Alternatively"),", upload the jar to an ",(0,r.kt)("strong",{parentName:"li"},"S3 bucket")," and use its URL. The URL should use the ",(0,r.kt)("inlineCode",{parentName:"li"},"s3")," scheme: ",(0,r.kt)("inlineCode",{parentName:"li"},"s3://<your bucket>/path/to/openlineage-spark_2.12-<version>.jar")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add OpenLineage configuration in Job Parameters")),(0,r.kt)("p",{parentName:"li"},"In the same ",(0,r.kt)("strong",{parentName:"p"},"Job details")," tab, add a new property under ",(0,r.kt)("strong",{parentName:"p"},"Job parameters"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use the format ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"param1=value1 --conf param2=value2 ... --conf paramN=valueN")),"."),(0,r.kt)("li",{parentName:"ul"},"Make sure every parameter except the first has an extra ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"--conf"))," in front of it."),(0,r.kt)("li",{parentName:"ul"},"Example: ",(0,r.kt)("inlineCode",{parentName:"li"},"spark.extraListeners=io.openlineage.spark.agent.OpenLineageSparkListener --conf spark.openlineage.transport.type=http --conf spark.openlineage.transport.url=http://example.com --conf spark.openlineage.transport.endpoint=/api/v1/lineage --conf  spark.openlineage.transport.auth.type=api_key --conf spark.openlineage.transport.auth.apiKey=aaaaa-bbbbb-ccccc-ddddd")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Set User Jars First Parameter")),(0,r.kt)("p",{parentName:"li"},"Add the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"--user-jars-first"))," parameter and set its value to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"true"))))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"glue_settings.png",src:a(37014).Z,width:"1236",height:"1043"})),(0,r.kt)("h2",{id:"verification"},"Verification"),(0,r.kt)("p",null,"To confirm that OpenLineage registration has been successful, check the logs for the following entry:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"INFO SparkContext: Registered listener io.openlineage.spark.agent.OpenLineageSparkListener\n")),(0,r.kt)("p",null,"If you see this log message, it indicates that OpenLineage has been correctly registered with your AWS Glue job."))}u.isMDXComponent=!0},37014:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/glue_settings-e838a349d858a7b37f02b5237703401d.png"}}]);