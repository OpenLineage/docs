"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5529],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},c=Object.keys(t);for(a=0;a<c.length;a++)n=c[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(a=0;a<c.length;a++)n=c[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),u=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(o.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},f=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,c=t.originalType,o=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),f=u(n),d=r,m=f["".concat(o,".").concat(d)]||f[d]||l[d]||c;return n?a.createElement(m,s(s({ref:e},p),{},{components:n})):a.createElement(m,s({ref:e},p))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var c=n.length,s=new Array(c);s[0]=f;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i.mdxType="string"==typeof t?t:r,s[1]=i;for(var u=2;u<c;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},65351:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const c={sidebar_position:1},s="Data Quality Metrics Facet",i={unversionedId:"spec/facets/dataset-facets/input-dataset-facets/data_quality_metrics",id:"spec/facets/dataset-facets/input-dataset-facets/data_quality_metrics",title:"Data Quality Metrics Facet",description:"Example:",source:"@site/docs/spec/facets/dataset-facets/input-dataset-facets/data_quality_metrics.md",sourceDirName:"spec/facets/dataset-facets/input-dataset-facets",slug:"/spec/facets/dataset-facets/input-dataset-facets/data_quality_metrics",permalink:"/docs/spec/facets/dataset-facets/input-dataset-facets/data_quality_metrics",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/spec/facets/dataset-facets/input-dataset-facets/data_quality_metrics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Version Facet",permalink:"/docs/spec/facets/dataset-facets/version_facet"},next:{title:"Output Statistics Facet",permalink:"/docs/spec/facets/dataset-facets/output-dataset-facets/output_statistics"}},o={},u=[],p={toc:u};function l(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-quality-metrics-facet"},"Data Quality Metrics Facet"),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    ...\n    "inputs": {\n        "inputFacets": {\n            "dataQualityMetrics": {\n                "_producer": "https://some.producer.com/version/1.0",\n                "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/DataQualityMetricsInputDatasetFacet.json",\n                "rowCount": 123,\n                "bytes": 35602,\n                "columnMetrics": {\n                    "column_one": {\n                        "nullCount": 132,\n                        "distincCount": 11,\n                        "sum": 500,\n                        "count": 234,\n                        "min": 111,\n                        "max": 3234,\n                        "quantiles": {\n                            "0.1": 12,\n                            "0.5": 22,\n                            "1": 123,\n                            "2": 11\n                        }\n                    },\n                    "column_two": {\n                        "nullCount": 132,\n                        "distinctCount": 11,\n                        "sum": 500,\n                        "count": 234,\n                        "min": 111,\n                        "max": 3234,\n                        "quantiles": {\n                            "0.1": 12,\n                            "0.5": 22,\n                            "1": 123,\n                            "2": 11\n                        }\n                    },\n                    "column_three": {\n                        "nullCount": 132,\n                        "distincCount": 11,\n                        "sum": 500,\n                        "count": 234,\n                        "min": 111,\n                        "max": 3234,\n                        "quantiles": {\n                            "0.1": 12,\n                            "0.5": 22,\n                            "1": 123,\n                            "2": 11\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ...\n}\n')),(0,r.kt)("p",null,"The facet specification can be found ",(0,r.kt)("a",{parentName:"p",href:"https://openlineage.io/spec/facets/1-0-0/DataQualityMetricsInputDatasetFacet.json"},"here"),"."))}l.isMDXComponent=!0}}]);