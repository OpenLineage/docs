"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4856],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(a),k=r,c=d["".concat(p,".").concat(k)]||d[k]||m[k]||l;return a?n.createElement(c,i(i({ref:t},u),{},{components:a})):n.createElement(c,i({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>x});var n=a(87462),r=a(67294),l=a(86010),i=a(76775),o=a(91980),p=a(67392),s=a(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??u(a);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function c(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[p,u]=k({queryString:a,groupId:n}),[c,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,s.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=p??c;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,l]),tabValues:l}}var g=a(12466),h=a(72389);const b="tabList__CuJ",f="tabItem_LNqP";function N(e){let{className:t,block:a,selectedValue:i,selectValue:o,tabValues:p}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,g.o5)(),m=e=>{const t=e.currentTarget,a=s.indexOf(t),n=p[a].value;n!==i&&(u(t),o(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>s.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",f,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=c(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(N,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function x(e){const t=(0,h.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},55154:(e,t,a)=>{a.d(t,{ZP:()=>p});var n=a(87462),r=(a(67294),a(3905)),l=a(74866),i=a(85162);const o={toc:[{value:"HTTP",id:"http",level:3},{value:"Overriden default configuration of the <code>HttpTransport</code>",id:"overriden-default-configuration-of-the-httptransport",level:4},{value:"URL parsing within Spark integration",id:"url-parsing-within-spark-integration",level:4},{value:"Kafka",id:"kafka",level:3},{value:"Kinesis",id:"kinesis",level:3},{value:"Console",id:"console",level:3},{value:"File",id:"file",level:3}]};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tip:")," See current list of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenLineage/OpenLineage/tree/main/client/java/src/main/java/io/openlineage/client/transports"},"all supported transports"),"."),(0,r.kt)("h3",{id:"http"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/OpenLineage/OpenLineage/tree/main/client/java/src/main/java/io/openlineage/client/transports/HttpTransport.java"},"HTTP")),(0,r.kt)("p",null,"Allows sending events to HTTP endpoint (with optional authorization headers)."),(0,r.kt)(l.Z,{groupId:"spark",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"Yaml Config",label:"Yaml Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"transport:\n  type: http\n  url: http://localhost:5000\n")),(0,r.kt)("p",null,"With authorization:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"transport:\n  type: http\n  url: http://localhost:5000\n  endpoint: api/v1/lineage\n  auth:\n    type: api_key\n    api_key: f38d2189-c603-4b46-bdea-e573a3b5a7d5\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Override the default configuration of the HttpTransport within Java client"),(0,r.kt)("p",null,(0,r.kt)("h4",{id:"overriden-default-configuration-of-the-httptransport"},"Overriden default configuration of the ",(0,r.kt)("inlineCode",{parentName:"h4"},"HttpTransport")),(0,r.kt)("p",null,"You can override the default configuration of the ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpTransport")," by specifying the URL and API key when\ncreating a new client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'OpenLineageClient client = OpenLineageClient.builder()\n  .transport(\n    HttpTransport.builder()\n      .url("http://localhost:5000")\n      .apiKey("f38d2189-c603-4b46-bdea-e573a3b5a7d5")\n      .build())\n  .build();\n')),(0,r.kt)("p",null,"To configure the client with query params appended on each HTTP request, use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Map<String, String> queryParamsToAppend = Map.of(\n  "param0","value0",\n  "param1", "value1"\n);\n\n// Connect to http://localhost:5000\nOpenLineageClient client = OpenLineageClient.builder()\n  .transport(\n    HttpTransport.builder()\n      .url("http://localhost:5000", queryParamsToAppend)\n      .apiKey("f38d2189-c603-4b46-bdea-e573a3b5a7d5")\n      .build())\n  .build();\n\n// Define a simple OpenLineage START or COMPLETE event\nOpenLineage.RunEvent startOrCompleteRun = ...\n\n// Emit OpenLineage event to http://localhost:5000/api/v1/lineage?param0=value0&param1=value1\nclient.emit(startOrCompleteRun);\n'))))),(0,r.kt)(i.Z,{value:"Spark Config",label:"Spark Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to resource"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/v1/lineage")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.auth.type"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of authentication method to use"),(0,r.kt)("td",{parentName:"tr",align:null},"api_key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.auth.apiKey"),(0,r.kt)("td",{parentName:"tr",align:null},"An API key to be used when sending events to the OpenLineage server"),(0,r.kt)("td",{parentName:"tr",align:null},"abcdefghijk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.timeoutInMillis"),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout for sending OpenLineage info in milliseconds"),(0,r.kt)("td",{parentName:"tr",align:null},"5000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.urlParams.xyz"),(0,r.kt)("td",{parentName:"tr",align:null},"A URL parameter (replace xyz) and value to be included in requests to the OpenLineage API server"),(0,r.kt)("td",{parentName:"tr",align:null},"abcdefghijk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.url"),(0,r.kt)("td",{parentName:"tr",align:null},"The hostname of the OpenLineage API server where events should be reported, it can have other properties embeded"),(0,r.kt)("td",{parentName:"tr",align:null},"http://localhost:5000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.headers.xyz"),(0,r.kt)("td",{parentName:"tr",align:null},"Request headers (replace xyz) and value to be included in requests to the OpenLineage API server"),(0,r.kt)("td",{parentName:"tr",align:null},"abcdefghijk")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"URL parsing within Spark integration"),(0,r.kt)("p",null,(0,r.kt)("h4",{id:"url-parsing-within-spark-integration"},"URL parsing within Spark integration"),(0,r.kt)("p",null,"You can supply http parameters using values in url, the parsed ",(0,r.kt)("inlineCode",{parentName:"p"},"spark.openlineage.*")," properties are located in url as follows:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"{transport.url}/{transport.endpoint}/namespaces/{namespace}/jobs/{parentJobName}/runs/{parentRunId}?app_name={appName}&api_key={transport.apiKey}&timeout={transport.timeout}&xxx={transport.urlParams.xxx}")),(0,r.kt)("p",null,"example:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:5000/api/v1/namespaces/ns_name/jobs/job_name/runs/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx?app_name=app&api_key=abc&timeout=5000&xxx=xxx"))))),(0,r.kt)(i.Z,{value:"Flink Config",label:"Flink Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to resource"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/v1/lineage")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.auth.type"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of authentication method to use"),(0,r.kt)("td",{parentName:"tr",align:null},"api_key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.auth.apiKey"),(0,r.kt)("td",{parentName:"tr",align:null},"An API key to be used when sending events to the OpenLineage server"),(0,r.kt)("td",{parentName:"tr",align:null},"abcdefghijk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"Timeout for sending OpenLineage info in milliseconds"),(0,r.kt)("td",{parentName:"tr",align:null},"5000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.urlParams.xyz"),(0,r.kt)("td",{parentName:"tr",align:null},"A URL parameter (replace xyz) and value to be included in requests to the OpenLineage API server"),(0,r.kt)("td",{parentName:"tr",align:null},"abcdefghijk")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.url"),(0,r.kt)("td",{parentName:"tr",align:null},"The hostname of the OpenLineage API server where events should be reported, it can have other properties embeded"),(0,r.kt)("td",{parentName:"tr",align:null},"http://localhost:5000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.headers.xyz"),(0,r.kt)("td",{parentName:"tr",align:null},"Request headers (replace xyz) and value to be included in requests to the OpenLineage API server"),(0,r.kt)("td",{parentName:"tr",align:null},"abcdefghijk")))))),(0,r.kt)("h3",{id:"kafka"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/OpenLineage/OpenLineage/tree/main/client/java/src/main/java/io/openlineage/client/transports/KafkaTransport.java"},"Kafka")),(0,r.kt)("p",null,"If a transport type is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka"),", then the below parameters would be read and used when building KafkaProducer.\nThis transport requires the artifact ",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.kafka:kafka-clients:3.1.0")," (or compatible) on your classpath."),(0,r.kt)(l.Z,{groupId:"integrations",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"yaml",label:"Yaml Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"transport:\n  type: kafka\n  topicName: openlineage.events\n  # Kafka properties (see: http://kafka.apache.org/0100/documentation.html#producerconfigs)\n  properties:\n    bootstrap.servers: localhost:9092,another.host:9092\n    acks: all\n    retries: 3\n    key.serializer: org.apache.kafka.common.serialization.StringSerializer\n    value.serializer: org.apache.kafka.common.serialization.StringSerializer\n"))),(0,r.kt)(i.Z,{value:"spark",label:"Spark Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.topicName"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, name of the topic"),(0,r.kt)("td",{parentName:"tr",align:null},"topic-name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.localServerId"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, id of local server"),(0,r.kt)("td",{parentName:"tr",align:null},"xxxxxxxx")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.properties.","[xxx]"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, the ","[xxx]"," is property of Kafka client"),(0,r.kt)("td",{parentName:"tr",align:null},"1"))))),(0,r.kt)(i.Z,{value:"flink",label:"Flink Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.topicName"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, name of the topic"),(0,r.kt)("td",{parentName:"tr",align:null},"topic-name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.localServerId"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, id of local server"),(0,r.kt)("td",{parentName:"tr",align:null},"xxxxxxxx")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.properties.","[xxx]"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, the ","[xxx]"," is property of Kafka client"),(0,r.kt)("td",{parentName:"tr",align:null},"1")))))),(0,r.kt)("h3",{id:"kinesis"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/OpenLineage/OpenLineage/blob/main/client/java/src/main/java/io/openlineage/client/transports/KinesisTransport.java"},"Kinesis")),(0,r.kt)("p",null,"If a transport type is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"kinesis"),", then the below parameters would be read and used when building KinesisProducer.\nAlso, KinesisTransport depends on you to provide artifact ",(0,r.kt)("inlineCode",{parentName:"p"},"com.amazonaws:amazon-kinesis-producer:0.14.0")," or compatible on your classpath."),(0,r.kt)(l.Z,{groupId:"integrations",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"yaml",label:"Yaml Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"transport:\n  type: kinesis\n  streamName: your_kinesis_stream_name\n  topicName: openlineage.events\n  region: your_aws_region\n  roleArn: arn:aws:iam::account-id:role/role-name   # optional\n  properties:  # Refer to amazon-kinesis-producer's default configuration.md for the available properties\n    property_name_1: value_1\n    property_name_2: value_2\n"))),(0,r.kt)(i.Z,{value:"spark",label:"Spark Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.streamName"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, the streamName of the Kinesis Stream"),(0,r.kt)("td",{parentName:"tr",align:null},"some-stream-name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.region"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, the region of the stream"),(0,r.kt)("td",{parentName:"tr",align:null},"us-east-2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.roleArn"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, the roleArn which is allowed to read/write to Kinesis stream"),(0,r.kt)("td",{parentName:"tr",align:null},"some-role-arn")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.properties.","[xxx]"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, the ","[xxx]"," is property of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/awslabs/amazon-kinesis-producer/blob/master/java/amazon-kinesis-producer-sample/default_config.properties"},"Kinesis allowd properties")),(0,r.kt)("td",{parentName:"tr",align:null},"1"))))),(0,r.kt)(i.Z,{value:"flink",label:"Flink Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.streamName"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, the streamName of the Kinesis Stream"),(0,r.kt)("td",{parentName:"tr",align:null},"some-stream-name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.region"),(0,r.kt)("td",{parentName:"tr",align:null},"Required, the region of the stream"),(0,r.kt)("td",{parentName:"tr",align:null},"us-east-2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.roleArn"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, the roleArn which is allowed to read/write to Kinesis stream"),(0,r.kt)("td",{parentName:"tr",align:null},"some-role-arn")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.properties.","[xxx]"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, the ","[xxx]"," is property of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/awslabs/amazon-kinesis-producer/blob/master/java/amazon-kinesis-producer-sample/default_config.properties"},"Kinesis allowd properties")),(0,r.kt)("td",{parentName:"tr",align:null},"1")))))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Behavior"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Events are serialized to JSON upon the ",(0,r.kt)("inlineCode",{parentName:"li"},"emit()")," call and dispatched to the Kinesis stream."),(0,r.kt)("li",{parentName:"ul"},"The partition key is generated by combining the job's namespace and name."),(0,r.kt)("li",{parentName:"ul"},"Two constructors are available: one accepting both ",(0,r.kt)("inlineCode",{parentName:"li"},"KinesisProducer")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"KinesisConfig")," and another solely accepting ",(0,r.kt)("inlineCode",{parentName:"li"},"KinesisConfig"),".")),(0,r.kt)("h3",{id:"console"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/OpenLineage/OpenLineage/tree/main/client/java/src/main/java/io/openlineage/client/transports/ConsoleTransport.java"},"Console")),(0,r.kt)("p",null,"This straightforward transport emits OpenLineage events directly to the console through a logger.\nBe cautious when using the DEBUG log level, as it might result in double-logging due to the ",(0,r.kt)("inlineCode",{parentName:"p"},"OpenLineageClient")," also logging.\nNo additional configuration is required."),(0,r.kt)(l.Z,{groupId:"integrations",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"yaml",label:"Yaml Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"transport:\n  type: console\n"))),(0,r.kt)(i.Z,{value:"spark",label:"Spark Config",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"flink",label:"Flink Config",mdxType:"TabItem"})),(0,r.kt)("h3",{id:"file"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/OpenLineage/OpenLineage/tree/main/client/java/src/main/java/io/openlineage/client/transports/FileTransport.java"},"File")),(0,r.kt)("p",null,"Designed mainly for integration testing, the ",(0,r.kt)("inlineCode",{parentName:"p"},"FileTransport")," appends OpenLineage events to a given file.\nEvents are newline-separated, with all pre-existing newline characters within the event JSON removed."),(0,r.kt)(l.Z,{groupId:"integrations",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"yaml",label:"Yaml Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"transport:\n  type: file\n  location: /path/to/your/file.txt\n"))),(0,r.kt)(i.Z,{value:"spark",label:"Spark Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spark.openlineage.transport.location"),(0,r.kt)("td",{parentName:"tr",align:null},"File path"),(0,r.kt)("td",{parentName:"tr",align:null},"/path/to/your/file.txt"))))),(0,r.kt)(i.Z,{value:"flink",label:"Flink Config",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Definition"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openlineage.transport.location"),(0,r.kt)("td",{parentName:"tr",align:null},"File path"),(0,r.kt)("td",{parentName:"tr",align:null},"/path/to/your/file.txt")))))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Notes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the target file is absent, it's created."),(0,r.kt)("li",{parentName:"ul"},"Events are added to the file, separated by newlines."),(0,r.kt)("li",{parentName:"ul"},"Intrinsic newline characters within the event JSON are eliminated to ensure one-line events.")))}p.isMDXComponent=!0},87019:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=a(87462),r=(a(67294),a(3905)),l=a(55154);const i={sidebar_position:2,title:"Transport"},o=void 0,p={unversionedId:"integrations/spark/configuration/transport",id:"integrations/spark/configuration/transport",title:"Transport",description:"",source:"@site/docs/integrations/spark/configuration/transport.md",sourceDirName:"integrations/spark/configuration",slug:"/integrations/spark/configuration/transport",permalink:"/docs/integrations/spark/configuration/transport",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/integrations/spark/configuration/transport.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Transport"},sidebar:"tutorialSidebar",previous:{title:"Spark Config Parameters",permalink:"/docs/integrations/spark/configuration/spark_conf"},next:{title:"Circuit Breaker",permalink:"/docs/integrations/spark/configuration/circuit_breaker"}},s={},u=[],m={toc:u};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.ZP,{mdxType:"Transports"}))}d.isMDXComponent=!0}}]);