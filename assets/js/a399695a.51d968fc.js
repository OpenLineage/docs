"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4873],{3905:(e,t,a)=>{a.d(t,{Zo:()=>f,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},f=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,u=d["".concat(i,".").concat(m)]||d[m]||l[m]||c;return a?n.createElement(u,s(s({ref:t},f),{},{components:a})):n.createElement(u,s({ref:t},f))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,s=new Array(c);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<c;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},56296:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const c={sidebar_position:6},s="Schema Dataset Facet",o={unversionedId:"spec/facets/dataset-facets/schema",id:"spec/facets/dataset-facets/schema",title:"Schema Dataset Facet",description:"The schema dataset facet contains the schema of a particular dataset.",source:"@site/docs/spec/facets/dataset-facets/schema.md",sourceDirName:"spec/facets/dataset-facets",slug:"/spec/facets/dataset-facets/schema",permalink:"/docs/spec/facets/dataset-facets/schema",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/spec/facets/dataset-facets/schema.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Ownership Dataset Facet",permalink:"/docs/spec/facets/dataset-facets/ownership"},next:{title:"Storage Facet",permalink:"/docs/spec/facets/dataset-facets/storage"}},i={},p=[],f={toc:p};function l(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"schema-dataset-facet"},"Schema Dataset Facet"),(0,r.kt)("p",null,"The schema dataset facet contains the schema of a particular dataset.\nBesides a name, it provides an optional type and description of each field."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  ...\n  "inputs": {\n    "facets": {\n      "schema": {\n        "_producer": "https://some.producer.com/version/1.0",\n        "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/SchemaDatasetFacet.json",\n        "fields": [\n          {\n            "name": "id",\n            "type": "int",\n            "description": "Customer\'s identifier"\n          },\n          {\n            "name": "name",\n            "type": "string",\n            "description": "Customer\'s name"\n          },\n          {\n            "name": "is_active",\n            "type": "boolean",\n            "description": "Has customer completed activation process"\n          }\n        ]\n      }\n    }\n  }\n  ...\n}\n')),(0,r.kt)("p",null,"The facet specification can be found ",(0,r.kt)("a",{parentName:"p",href:"https://openlineage.io/spec/facets/1-0-0/SchemaDatasetFacet.json"},"here"),"."))}l.isMDXComponent=!0}}]);