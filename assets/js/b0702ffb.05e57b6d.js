"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5301],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||i;return n?a.createElement(g,o(o({ref:t},m),{},{components:n})):a.createElement(g,o({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},71668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={title:"1.6.2",sidebar_position:9951},o="1.6.2 - 2023-12-07",l={unversionedId:"releases/1_6_2",id:"releases/1_6_2",title:"1.6.2",description:"Added",source:"@site/docs/releases/1_6_2.md",sourceDirName:"releases",slug:"/releases/1_6_2",permalink:"/docs/releases/1_6_2",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/releases/1_6_2.md",tags:[],version:"current",sidebarPosition:9951,frontMatter:{title:"1.6.2",sidebar_position:9951},sidebar:"tutorialSidebar",previous:{title:"OpenLineage Proxy",permalink:"/docs/development/ol-proxy"},next:{title:"1.5.0",permalink:"/docs/releases/1_5_0"}},p={},s=[{value:"Added",id:"added",level:3},{value:"Fixed",id:"fixed",level:3}],m={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"162---2023-12-07"},"1.6.2 - 2023-12-07"),(0,r.kt)("h3",{id:"added"},"Added"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Dagster: support Dagster 1.5.x")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2220"},(0,r.kt)("inlineCode",{parentName:"a"},"#2220"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/tsungchih"},"@tsungchih"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Gets event records for each target Dagster event type to support Dagster version 0.15.0+.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Dbt: add a new command ",(0,r.kt)("inlineCode",{parentName:"strong"},"dbt-ol send-events")," to send metadata of the last run without running the job")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2285"},(0,r.kt)("inlineCode",{parentName:"a"},"#2285"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sophiely"},"@sophiely"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds a new command to send events to OpenLineage according to the latest metadata generated without running any dbt command.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Flink: add option for Flink job listener to read from Flink conf")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2229"},(0,r.kt)("inlineCode",{parentName:"a"},"#2229"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ensctom"},"@ensctom"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds option for the Flink job listener to read jobnames and namespaces from Flink conf.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spark: get column-level lineage from JDBC dbtable option")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2284"},(0,r.kt)("inlineCode",{parentName:"a"},"#2284"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/mobuchowski"},"@mobuchowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds support for dbtable, enables lineage in the case of single input columns, and improves dataset naming.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spec: introduce ",(0,r.kt)("inlineCode",{parentName:"strong"},"JobTypeJobFacet")," to contain additional job related information"),(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2241"},(0,r.kt)("inlineCode",{parentName:"a"},"#2241"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/pawel-big-lebowski"},"@pawel-big-lebowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"New ",(0,r.kt)("inlineCode",{parentName:"em"},"JobTypeJobFacet")," contains the processing type such as ",(0,r.kt)("inlineCode",{parentName:"em"},"BATCH|STREAMING"),", integration via ",(0,r.kt)("inlineCode",{parentName:"em"},"SPARK|FLINK|...")," and job type in ",(0,r.kt)("inlineCode",{parentName:"em"},"QUERY|COMMAND|DAG|..."),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SQL: add quote information from sqlparser-rs")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2259"},(0,r.kt)("inlineCode",{parentName:"a"},"#2259"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/JDarDagran"},"@JDarDagran"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds quote information from sqlparser-rs."))),(0,r.kt)("h3",{id:"fixed"},"Fixed"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spark: update Jackson dependency to resolve ",(0,r.kt)("inlineCode",{parentName:"strong"},"CVE-2022-1471"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2185"},(0,r.kt)("inlineCode",{parentName:"a"},"#2185"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/pawel-big-lebowski"},"@pawel-big-lebowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Updates Gradle for Spark and Flink to 8.1.1. Upgrade Jackson ",(0,r.kt)("inlineCode",{parentName:"em"},"2.15.3"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Flink: avoid relying on Guava which can be missing during production runtime")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2296"},(0,r.kt)("inlineCode",{parentName:"a"},"#2296"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/pawel-big-lebowski"},"@pawel-big-lebowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Removes usage of Guava ImmutableList.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spark: exclude ",(0,r.kt)("inlineCode",{parentName:"strong"},"commons-logging")," transitive dependency from published jar")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/2297"},(0,r.kt)("inlineCode",{parentName:"a"},"#2297"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/pawel-big-lebowski"},"@pawel-big-lebowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Ensures ",(0,r.kt)("inlineCode",{parentName:"em"},"commons-logging")," is not shipped as this can lead to a version mismatch on the user's side."))))}d.isMDXComponent=!0}}]);