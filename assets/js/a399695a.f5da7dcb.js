"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4873],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},l=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),l=p(n),f=r,u=l["".concat(i,".").concat(f)]||l[f]||d[f]||s;return n?a.createElement(u,c(c({ref:t},m),{},{components:n})):a.createElement(u,c({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,c=new Array(s);c[0]=l;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var p=2;p<s;p++)c[p]=n[p];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}l.displayName="MDXCreateElement"},56296:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const s={sidebar_position:6},c="Schema Dataset Facet",o={unversionedId:"spec/facets/dataset-facets/schema",id:"spec/facets/dataset-facets/schema",title:"Schema Dataset Facet",description:"The schema dataset facet contains the schema of a particular dataset.",source:"@site/docs/spec/facets/dataset-facets/schema.md",sourceDirName:"spec/facets/dataset-facets",slug:"/spec/facets/dataset-facets/schema",permalink:"/docs/spec/facets/dataset-facets/schema",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/spec/facets/dataset-facets/schema.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Ownership Dataset Facet",permalink:"/docs/spec/facets/dataset-facets/ownership"},next:{title:"Storage Facet",permalink:"/docs/spec/facets/dataset-facets/storage"}},i={},p=[],m={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"schema-dataset-facet"},"Schema Dataset Facet"),(0,r.kt)("p",null,"The schema dataset facet contains the schema of a particular dataset.\nBesides a name, it provides an optional type and description of each field."),(0,r.kt)("p",null,"Nested fields are supported as well."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  ...\n  "inputs": {\n    "facets": {\n      "schema": {\n        "_producer": "https://some.producer.com/version/1.0",\n        "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/SchemaDatasetFacet.json",\n        "fields": [\n          {\n            "name": "id",\n            "type": "int",\n            "description": "Customer\'s identifier"\n          },\n          {\n            "name": "name",\n            "type": "string",\n            "description": "Customer\'s name"\n          },\n          {\n            "name": "is_active",\n            "type": "boolean",\n            "description": "Has customer completed activation process"\n          },\n          {\n            "name": "phones",\n            "type": "array",\n            "description": "List of phone numbers",\n            "fields": [\n              {\n                "name": "_element",\n                "type": "string",\n                "description": "Phone number"\n              }\n            ]\n          },\n          {\n            "name": "address",\n            "type": "struct",\n            "description": "Customer address",\n            "fields": [\n              {\n                "name": "type",\n                "type": "string",\n                "description": "Address type, g.e. home, work, etc."\n              },\n              {\n                "name": "country",\n                "type": "string",\n                "description": "Country name"\n              },\n              {\n                "name": "zip",\n                "type": "string",\n                "description": "Zip code"\n              },\n              {\n                "name": "state",\n                "type": "string",\n                "description": "State name"\n              },\n              {\n                "name": "street",\n                "type": "string",\n                "description": "Street name"\n              }\n            ]\n          },\n          {\n            "name": "custom_properties",\n            "type": "map",\n            "fields": [\n              {\n                "name": "key",\n                "type": "string"\n              },\n              {\n                "name": "value",\n                "type": "union",\n                "fields": [\n                  {\n                    "name": "_0",\n                    "type": "string"\n                  },\n                  {\n                    "name": "_1",\n                    "type": "int64"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n  ...\n}\n')),(0,r.kt)("p",null,"The facet specification can be found ",(0,r.kt)("a",{parentName:"p",href:"https://openlineage.io/spec/facets/1-1-1/SchemaDatasetFacet.json"},"here"),"."))}d.isMDXComponent=!0}}]);