"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7482],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,h=d["".concat(p,".").concat(u)]||d[u]||c[u]||i;return a?n.createElement(h,o(o({ref:t},s),{},{components:a})):n.createElement(h,o({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},69006:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const i={title:"0.18.0",sidebar_position:9973},o="0.18.0 - 2022-12-08",l={unversionedId:"releases/0_18_0",id:"releases/0_18_0",title:"0.18.0",description:"Added",source:"@site/docs/releases/0_18_0.md",sourceDirName:"releases",slug:"/releases/0_18_0",permalink:"/docs/releases/0_18_0",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/releases/0_18_0.md",tags:[],version:"current",sidebarPosition:9973,frontMatter:{title:"0.18.0",sidebar_position:9973},sidebar:"tutorialSidebar",previous:{title:"0.19.2",permalink:"/docs/releases/0_19_2"},next:{title:"0.17.0",permalink:"/docs/releases/0_17_0"}},p={},m=[{value:"Added",id:"added",level:3},{value:"Fixed",id:"fixed",level:3}],s={toc:m};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"0180---2022-12-08"},"0.18.0 - 2022-12-08"),(0,r.kt)("h3",{id:"added"},"Added"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Airflow: support ",(0,r.kt)("inlineCode",{parentName:"li"},"SQLExecuteQueryOperator")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1379"},(0,r.kt)("inlineCode",{parentName:"a"},"#1379"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/JDarDagran"},"@JDarDagran"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Changes the ",(0,r.kt)("inlineCode",{parentName:"em"},"SQLExtractor")," and adds support for the dynamic assignment of extractors based on ",(0,r.kt)("inlineCode",{parentName:"em"},"conn_type"),".")),(0,r.kt)("li",{parentName:"ul"},"Airflow: introduce a new extractor for ",(0,r.kt)("inlineCode",{parentName:"li"},"SFTPOperator")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1263"},(0,r.kt)("inlineCode",{parentName:"a"},"#1263"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sekikn"},"@sekikn"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds an extractor for tracing file transfers between local file systems.")),(0,r.kt)("li",{parentName:"ul"},"Airflow: add Sagemaker extractors ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1136"},(0,r.kt)("inlineCode",{parentName:"a"},"#1136"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/fhoda"},"@fhoda"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Creates extractors for ",(0,r.kt)("inlineCode",{parentName:"em"},"SagemakeProcessingOperator")," and ",(0,r.kt)("inlineCode",{parentName:"em"},"SagemakerTransformOperator"),".")),(0,r.kt)("li",{parentName:"ul"},"Airflow: add S3 extractor for Airflow operators ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1166"},(0,r.kt)("inlineCode",{parentName:"a"},"#1166"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/fhoda"},"@fhoda"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Creates an extractor for the ",(0,r.kt)("inlineCode",{parentName:"em"},"S3CopyObject")," in the Airflow integration.")),(0,r.kt)("li",{parentName:"ul"},"Spec: add spec file for ",(0,r.kt)("inlineCode",{parentName:"li"},"ExternalQueryRunFacet")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1262"},(0,r.kt)("inlineCode",{parentName:"a"},"#1262"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/howardyoo"},"@howardyoo"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds a spec file to make this facet available for the Java client. Includes a README.")),(0,r.kt)("li",{parentName:"ul"},"Docs: add a TSC doc ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1303"},(0,r.kt)("inlineCode",{parentName:"a"},"#1303"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/merobi-hub"},"@merobi-hub"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Adds a document listing the members of the Technical Steering Committee."))),(0,r.kt)("h3",{id:"fixed"},"Fixed"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Spark: improve Databricks to send better events ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1330"},(0,r.kt)("inlineCode",{parentName:"a"},"#1330"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/@pawel-big-lebowski"},"@pawel-big-lebowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Filters unwanted events and provides a meaningful job name.")),(0,r.kt)("li",{parentName:"ul"},"Spark-Bigquery: fix a few of the common errors ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1377"},(0,r.kt)("inlineCode",{parentName:"a"},"#1377"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/mobuchowski"},"@mobuchowski"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Fixes a few of the common issues with the Spark-Bigquery integration and adds an integration test and configures CI.")),(0,r.kt)("li",{parentName:"ul"},"Python: validate ",(0,r.kt)("inlineCode",{parentName:"li"},"eventTime")," field in Python client ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1355"},(0,r.kt)("inlineCode",{parentName:"a"},"#1355"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/@pawel-big-lebowski"},"@pawel-big-lebowski"),(0,r.kt)("em",{parentName:"li"},"Validates the ",(0,r.kt)("inlineCode",{parentName:"em"},"eventTime")," of a ",(0,r.kt)("inlineCode",{parentName:"em"},"RunEvent")," within the client library.")),(0,r.kt)("li",{parentName:"ul"},"Databricks: Handle Databricks Runtime 11.3 changes to ",(0,r.kt)("inlineCode",{parentName:"li"},"DbFsUtils")," constructor ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenLineage/OpenLineage/pull/1351"},(0,r.kt)("inlineCode",{parentName:"a"},"#1351"))," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/@wjohnson"},"@wjohnson"),(0,r.kt)("br",{parentName:"li"}),"",(0,r.kt)("em",{parentName:"li"},"Recaptures lost mount point information from the ",(0,r.kt)("inlineCode",{parentName:"em"},"DatabricksEnvironmentFacetBuilder")," and environment-properties facet by looking at the number of parameters in the ",(0,r.kt)("inlineCode",{parentName:"em"},"DbFsUtils")," constructor to determine the runtime version."))))}c.isMDXComponent=!0}}]);