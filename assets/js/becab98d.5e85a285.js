"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5625],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),g=i,f=m["".concat(p,".").concat(g)]||m[g]||u[g]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},95017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const o={title:"The OpenLineage Airflow Provider is Here",date:new Date("2023-08-23T00:00:00.000Z"),authors:["Robinson","Obuchowski","Le Dem"],banner:"./banner.svg",description:"Built-in OpenLineage support in Airflow means big improvements in reliability, lineage output, and custom operator implementation."},a=void 0,l={permalink:"/blog/airflow-provider",source:"@site/blog/airflow-provider/index.mdx",title:"The OpenLineage Airflow Provider is Here",description:"Built-in OpenLineage support in Airflow means big improvements in reliability, lineage output, and custom operator implementation.",date:"2023-08-23T00:00:00.000Z",formattedDate:"August 23, 2023",tags:[],readingTime:4.365,hasTruncateMarker:!0,authors:[{name:"Michael Robinson",title:"OpenLineage Community Manager",url:"https://github.com/merobi-hub",imageURL:"https://github.com/merobi-hub.png",key:"Robinson"},{name:"Maciej Obuchowski",title:"OpenLineage Committer",url:"https://github.com/mobuchowski",imageURL:"https://github.com/mobuchowski.png",key:"Obuchowski"},{name:"Julien Le Dem",title:"OpenLineage Project Lead",url:"https://www.github.com/julienledem/",imageURL:"https://avatars.githubusercontent.com/u/367841?v=4",key:"Le Dem"}],frontMatter:{title:"The OpenLineage Airflow Provider is Here",date:"2023-08-23T00:00:00.000Z",authors:["Robinson","Obuchowski","Le Dem"],banner:"./banner.svg",description:"Built-in OpenLineage support in Airflow means big improvements in reliability, lineage output, and custom operator implementation."},prevItem:{title:"Metaphor's Integration with OpenLineage Enhances Data Governance and Collaboration",permalink:"/blog/metaphor-integration"},nextItem:{title:"Meet Us in Toronto on September 18th!",permalink:"/blog/airflow-summit-meetup"}},p={authorsImageUrls:[void 0,void 0,void 0]},s=[],c={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This one is big. With the release of Airflow 2.7.0, the Airflow integration is now officially an Airflow Provider. This means the ",(0,i.kt)("inlineCode",{parentName:"p"},"openlineage-airflow")," package is now ",(0,i.kt)("inlineCode",{parentName:"p"},"apache-airflow-providers-openlineage")," in Airflow itself \u2013 a built-in feature of Airflow rather than an externally managed integration. Why does it matter where the integration \u201clives\u201d? The short answer: as an Airflow Provider, the integration will offer ",(0,i.kt)("em",{parentName:"p"},"improved reliability, broader support for operators, enhanced lineage, and easier implementation in custom operators")," going forward. "),(0,i.kt)("p",null,"Although still a work in progress in some key respects, the OpenLineage Provider promises to pay dividends to users and contributors alike while accelerating the growth of the OpenLineage Ecosystem."))}u.isMDXComponent=!0}}]);