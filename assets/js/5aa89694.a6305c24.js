"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8204],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||i;return n?r.createElement(k,l(l({ref:t},d),{},{components:n})):r.createElement(k,l({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54369:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"Spark Integration Metrics",sidebar_position:8},l="Spark Integration Metrics",o={unversionedId:"integrations/spark/metrics",id:"integrations/spark/metrics",title:"Spark Integration Metrics",description:"The OpenLineage integration with Spark not only utilizes the Java client's metrics but also introduces its own set of metrics specific to Spark operations. Below is a list of these metrics.",source:"@site/docs/integrations/spark/metrics.md",sourceDirName:"integrations/spark",slug:"/integrations/spark/metrics",permalink:"/docs/integrations/spark/metrics",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/integrations/spark/metrics.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Spark Integration Metrics",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Job Hierarchy",permalink:"/docs/integrations/spark/job-hierarchy"},next:{title:"Apache Airflow",permalink:"/docs/integrations/airflow/"}},p={},s=[{value:"Metrics Overview",id:"metrics-overview",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"spark-integration-metrics"},"Spark Integration Metrics"),(0,a.kt)("p",null,"The OpenLineage integration with Spark not only utilizes the Java client's metrics but also introduces its own set of metrics specific to Spark operations. Below is a list of these metrics."),(0,a.kt)("h2",{id:"metrics-overview"},"Metrics Overview"),(0,a.kt)("p",null,"The following table provides the metrics added by the Spark integration, along with their definitions and types:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Metric"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.sql.start")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of SparkListenerSQLExecutionStart events received"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.sql.end")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of SparkListenerSQLExecutionEnd events received"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.job.start")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of SparkListenerJobStart events received"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.job.end")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of SparkListenerJobEnd events received"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.app.start")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of SparkListenerApplicationStart events received"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.app.end")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of SparkListenerApplicationEnd events received"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.app.start.memoryusage")),(0,a.kt)("td",{parentName:"tr",align:null},"Percentage of used memory at the start of the application"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.event.app.end.memoryusage")),(0,a.kt)("td",{parentName:"tr",align:null},"Percentage of used memory at the end of the application"),(0,a.kt)("td",{parentName:"tr",align:null},"Counter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.unknownFacet.time")),(0,a.kt)("td",{parentName:"tr",align:null},"Time spent building the UnknownEntryRunFacet"),(0,a.kt)("td",{parentName:"tr",align:null},"Timer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.dataset.input.execution.time")),(0,a.kt)("td",{parentName:"tr",align:null},"Time spent constructing input datasets for execution"),(0,a.kt)("td",{parentName:"tr",align:null},"Timer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.facets.job.execution.time")),(0,a.kt)("td",{parentName:"tr",align:null},"Time spent building job-specific facets"),(0,a.kt)("td",{parentName:"tr",align:null},"Timer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"openlineage.spark.facets.run.execution.time")),(0,a.kt)("td",{parentName:"tr",align:null},"Time spent constructing run-specific facets"),(0,a.kt)("td",{parentName:"tr",align:null},"Timer")))))}c.isMDXComponent=!0}}]);