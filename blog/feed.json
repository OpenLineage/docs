{
    "version": "https://jsonfeed.org/version/1",
    "title": "OpenLineage Blog",
    "home_page_url": "https://openlineage.io/blog",
    "description": "OpenLineage Blog",
    "items": [
        {
            "id": "https://openlineage.io/blog/boston-collibra-meetup",
            "content_html": "<p>Join us on Tuesday, March 19th, 2024, from 5:30-8:00 pm at the Microsoft New England\nConference Center in Boston to learn more about the current state of lineage in general and\nstatic lineage support in data catalogs in particular. Bring your ideas and\nvision for data lineage!</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity\nto learn about lineage, data governance, and more! We hope to see you there. </p><p><strong>Please <a href=\"https://www.meetup.com/boston-data-lineage-meetup-group/events/298893366/\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nto let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tentative-agenda-additional-speakers-tba\">Tentative Agenda (additional speakers TBA)<a href=\"#tentative-agenda-additional-speakers-tba\" class=\"hash-link\" aria-label=\"Direct link to Tentative Agenda (additional speakers TBA)\" title=\"Direct link to Tentative Agenda (additional speakers TBA)\">​</a></h3><ul><li>\"2023: A Year in Review,\" Michael Robinson (Astronomer), Community Manager for OpenLineage</li><li>\"Preview of the OpenLineage Integration with Collibra,\" Sheeri Cabral, Product Manager at Collibra</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: March 19, 2024\nFormat: Hybrid\nTime: 5:30-8:00 pm ET\nAddress: MSNE, <a href=\"https://maps.app.goo.gl/FNjYLkeTwGaeeZ2HA\" target=\"_blank\" rel=\"noopener noreferrer\">1 Memorial Dr, Cambridge, MA 02142</a></p>",
            "url": "https://openlineage.io/blog/boston-collibra-meetup",
            "title": "Join us in Boston on March 19th",
            "summary": "Our first Boston Meetup will be held with Collibra on March 19th.",
            "date_modified": "2024-02-08T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/kafka-summit-talk",
            "content_html": "<p>At this year's <a href=\"https://www.kafka-summit.org/events/kafka-summit-london-2024/about\" target=\"_blank\" rel=\"noopener noreferrer\">Kafka Summit in London</a>,\ntwo project committers, Paweł Leszczyński and Maciej Obuchowski, will give a talk entitled\n<strong>OpenLineage for Stream Processing</strong> on March 19th at 2:00 PM GMT.</p><p>As the <a href=\"https://events.bizzabo.com/559905/agenda/session/1284918\" target=\"_blank\" rel=\"noopener noreferrer\">abstract available on the summit website</a>\nsays, the talk will cover some of the 'many useful features completed or begun'\nrecently related to stream processing, including:</p><ul><li> a seamless OpenLineage &amp; Apache Flink integration, </li><li> support for streaming jobs in Marquez, </li><li> progress on a built-in lineage API within the Flink codebase. </li></ul><p>As the abstract goes on to say,</p><p><em>Cross-platform lineage allows for a holistic overview of data flow and its dependencies\nwithin organizations, including stream processing. This talk will provide an overview of\nthe most recent developments in the OpenLineage Flink integration and share what’s in store\nfor this important collaboration. This talk is a must-attend for those wishing to stay\nup-to-date on lineage developments in the stream processing world.</em></p><p>Register and attend this interesting talk if you can. And keep an eye out for an\nannouncement about a recording if and when one becomes available.</p><p>Thanks, Maciej and Paweł, for spreading the word about these exciting developments in\nthe project.</p>",
            "url": "https://openlineage.io/blog/kafka-summit-talk",
            "title": "OpenLineage Support for Streaming to Feature at Kafka Summit",
            "summary": "Project committers will speak about recent progress on stream processing support.",
            "date_modified": "2024-02-08T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/london-confluent-meetup",
            "content_html": "<p>Join us on Wednesday, January 31st, 2024, from 6:00-8:00 pm at the Confluent offices\nin London to learn more about the current state of lineage in general and streaming\nsupport in particular. Bring your ideas and vision for OpenLineage!</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity\nto learn about OpenLineage and Kafka! We hope to see you there. </p><p><strong>Please <a href=\"https://www.meetup.com/london-openlineage-meetup-group/events/298420417/\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nto let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: January 31, 2024<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 6:00-8:00 pm GMT<br>\n<!-- -->Address: Confluent, <a href=\"https://maps.app.goo.gl/QJduVG2F6Ts5e99S9\" target=\"_blank\" rel=\"noopener noreferrer\">1 Bedford Street, London WC2E 9HD, United Kingdom</a></p>",
            "url": "https://openlineage.io/blog/london-confluent-meetup",
            "title": "Join us in London on January 31st",
            "summary": "Our First OpenLineage x Apache Kafka Meetup will be Held with Confluent on January 31st.",
            "date_modified": "2024-01-11T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/warsaw-meetup",
            "content_html": "<p>Join us on Wednesday, November 29th, 2023, from 17:30-20:30 CET in Warsaw, Poland, to\ncontribute to a discussion of the future of OpenLineage. On the tentative agenda:</p><ol><li><em>Mary Idamkina on OpenLineage in GCP Dataplex</em></li><li><em>Paweł Leszczynski on recent developments in the Spark Integration</em></li><li><em>Jakub Dardziński on Extracting lineage from PythonOperator - how come this is possible?</em></li><li><em>Paweł Leszczynski on How to Become a Spark-OpenLineage Contributor in 5 Steps</em></li></ol><p>Food and beverages will be provided. Don't miss this opportunity to help set the course of OpenLineage. You'll also learn about the spec from some of its key contributors and recent adopters.</p><p><strong>Please <a href=\"https://www.meetup.com/warsaw-openlineage-meetup-group/events/296705558/?utm_medium=referral&amp;utm_campaign=share-btn_savedevents_share_modal&amp;utm_source=link\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a> to let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: November 29th, 2023<br>\n<!-- -->Format: Hybrid<br>\n<!-- -->Time: 17:30-20:30 CET<br>\n<!-- -->Address: Google Warsaw, The Hub, <a href=\"https://maps.app.goo.gl/YAbrkbf1zNAKi3RG7\" target=\"_blank\" rel=\"noopener noreferrer\">Rondo Daszyńskiego 2c, 00-843 Warsaw, Poland</a></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"joining-virtually\">Joining Virtually<a href=\"#joining-virtually\" class=\"hash-link\" aria-label=\"Direct link to Joining Virtually\" title=\"Direct link to Joining Virtually\">​</a></h3><p>A Zoom link will be provided to attendees in the days leading up to the event.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/warsaw-meetup",
            "title": "Meet Us in Warsaw on November 29th!",
            "summary": "Our first Warsaw OpenLineage Meetup will take place at Google's Warsaw HQ.",
            "date_modified": "2023-10-13T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/metaphor-integration",
            "content_html": "<p>In the ever-evolving landscape of data management and governance, organizations constantly seek innovative solutions to streamline their processes, foster collaboration, and maximize the value of their data assets. <a href=\"https://metaphor.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaphor</a>, born out of the minds behind LinkedIn's DataHub, has emerged as a modern data catalog and social platform for data. We take a unique approach by combining technical metadata with social collaboration, making data governance accessible and engaging for everyone in the organization. In this blog post, we explain the motivation behind Metaphor’s adoption of OpenLineage, delve into the integration methodology, and discuss its current status and benefits.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"embracing-openlineage\">Embracing OpenLineage<a href=\"#embracing-openlineage\" class=\"hash-link\" aria-label=\"Direct link to Embracing OpenLineage\" title=\"Direct link to Embracing OpenLineage\">​</a></h2><p><a href=\"https://metaphor.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaphor</a>’s journey towards data governance excellence led to the adoption of OpenLineage, a standardized metadata model that enables seamless integration with various data systems. The motivation behind this decision is threefold:</p><ol><li><strong>Streamlined Metadata Collection</strong>: OpenLineage provides a standardized framework for collecting and managing metadata, simplifying the process of gathering lineage information from diverse data processing systems.</li><li><strong>Interoperability</strong>: OpenLineage boasts a range of clients for popular data processing frameworks like Apache Spark and Apache Airflow. By adopting OpenLineage, we gain the ability to seamlessly integrate with these systems, ensuring data lineage tracking across the entire data ecosystem.</li><li><strong>Enhanced Data Understanding</strong>: Integration with OpenLineage enhances Metaphor's core mission of making data understandable and actionable. It empowers users to gain deeper insights into data assets by tracking their lineage, from source to consumption.  </li></ol><p>The Metaphor team recognized the immense potential of OpenLineage and quickly decided to adopt OpenLineage as a crucial component of their platform.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"integration-with-openlineage\">Integration with OpenLineage<a href=\"#integration-with-openlineage\" class=\"hash-link\" aria-label=\"Direct link to Integration with OpenLineage\" title=\"Direct link to Integration with OpenLineage\">​</a></h2><p>To integrate with OpenLineage, we developed our own OpenLineage-compatible REST endpoint. This endpoint allows Metaphor to consume metadata events emitted by OpenLineage clients, including the ones for Apache Spark and Airflow. The integration process involves transforming this metadata into Metaphor’s own data models, which are then associated with the corresponding data assets within the platform, creating a cohesive global knowledge graph.</p><p>The user interface of Metaphor plays a pivotal role in making this integration accessible. Users can easily drill down into data jobs and data lineages, facilitating their work and enriching their understanding of data assets.</p><p><img loading=\"lazy\" alt=\"Metaphor architecture\" src=\"/assets/images/metaphor-integration-arch-1db39d6f99519b1665f98259e051fa65.png\" width=\"1600\" height=\"977\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"realizing-the-benefits\">Realizing the Benefits<a href=\"#realizing-the-benefits\" class=\"hash-link\" aria-label=\"Direct link to Realizing the Benefits\" title=\"Direct link to Realizing the Benefits\">​</a></h2><p>We have rolled out the OpenLineage integration to production environments. Early adopters have already begun to reap the benefits of Spark and Airflow lineage graphs, especially the column-level lineage. Users can now gain deeper insights into their data assets, making it easier to make informed decisions, optimize data usage, and maximize ROI.</p><p>In conclusion, the integration of OpenLineage with Metaphor represents a significant step forward in the world of data management and governance. It combines the power of standardized metadata with an intuitive social platform, offering organizations a comprehensive solution for their data needs. As more organizations embrace this integration, we can expect to see even greater advancements in data governance and collaboration, unlocking the full potential of their data assets.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"additional-resources\">Additional Resources<a href=\"#additional-resources\" class=\"hash-link\" aria-label=\"Direct link to Additional Resources\" title=\"Direct link to Additional Resources\">​</a></h2><ul><li>Metaphor Data: <a href=\"https://metaphor.io/\" target=\"_blank\" rel=\"noopener noreferrer\">https://metaphor.io/</a></li><li>Try Metaphor: <a href=\"https://metaphor.io/try\" target=\"_blank\" rel=\"noopener noreferrer\">https://metaphor.io/try</a> </li><li>Metaphor Documentation: <a href=\"https://docs.metaphor.io/docs\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.metaphor.io/docs</a></li><li>Metaphor OSS Connectors: <a href=\"https://github.com/MetaphorData/connectors\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/MetaphorData/connectors</a></li></ul>",
            "url": "https://openlineage.io/blog/metaphor-integration",
            "title": "Metaphor's Integration with OpenLineage Enhances Data Governance and Collaboration",
            "summary": "Metaphor’s journey towards data governance excellence led to the adoption of OpenLineage.",
            "date_modified": "2023-10-02T00:00:00.000Z",
            "author": {
                "name": "Yi Wang",
                "url": "https://www.linkedin.com/in/yi-alan-wang-26a53b15/"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/airflow-provider",
            "content_html": "<p>This one is big. With the release of Airflow 2.7.0, the Airflow integration is now officially an Airflow Provider. This means the <code>openlineage-airflow</code> package is now <code>apache-airflow-providers-openlineage</code> in Airflow itself – a built-in feature of Airflow rather than an externally managed integration. Why does it matter where the integration “lives”? The short answer: as an Airflow Provider, the integration will offer <em>improved reliability, broader support for operators, enhanced lineage, and easier implementation in custom operators</em> going forward. </p><p>Although still a work in progress in some key respects, the OpenLineage Provider promises to pay dividends to users and contributors alike while accelerating the growth of the OpenLineage Ecosystem.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"critical-improvements\">Critical Improvements<a href=\"#critical-improvements\" class=\"hash-link\" aria-label=\"Direct link to Critical Improvements\" title=\"Direct link to Critical Improvements\">​</a></h3><p>Before 2.7.0, OpenLineage metadata was only available via a plugin implementation maintained in the OpenLineage project. In other words, the integration was an external package getting lineage from the outside. Being external to Airflow, the integration had to use extractors to get lineage – special classes created for all supported operators. In order to function, these locally maintained extractors had to understand operators’ internals and know where to look for data. While being the best possible approach under the circumstances, this solution was hardly ideal. On the one hand, it was brittle because it depended on both operators’ and Airflow’s internals. On the other, it required extra work to maintain compatibility with new versions of providers and Airflow itself. We had to keep up with changes to not only operators <em>but also Airflow</em> – which is not exactly a small, slowly-moving project.</p><p>Improvements coming with the provider are not limited to fixes, however. The OpenLineage Provider promises to enable some long-sought-after enhancements, including support for one of the most-used Airflow operators – more about which below. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"high-level-design\">High-level Design<a href=\"#high-level-design\" class=\"hash-link\" aria-label=\"Direct link to High-level Design\" title=\"Direct link to High-level Design\">​</a></h3><p>The provider approach solves these maintenance and reliability issues by moving the extraction logic, along with unit tests, to each provider. Although a lot of up-front work has gone into creating the provider, full implementation of this solution has actually been distributed (and necessarily remains a work in progress). No longer self-contained, the integration is now part of the operator contract and belongs to every provider that supports OpenLineage. Relocating the extraction logic in this way makes the integration more robust by ensuring the stability of the lineage contract in each operator. Another benefit of the approach: adding lineage coverage to custom operators is now easier.    </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"implementation\">Implementation<a href=\"#implementation\" class=\"hash-link\" aria-label=\"Direct link to Implementation\" title=\"Direct link to Implementation\">​</a></h3><p>The OpenLineage Provider has been implemented in Airflow by reimplementing the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/airflow\" target=\"_blank\" rel=\"noopener noreferrer\"><code>openlineage-airflow</code></a> package from the OpenLineage project in the <code>apache-airflow-providers-openlineage</code> provider in the base Airflow Docker image, where it can be easily enabled by configuration. Furthermore, lineage extraction logic that was included in <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/airflow/openlineage/airflow/extractors\" target=\"_blank\" rel=\"noopener noreferrer\">Extractors</a> in that package is now implemented in operators living in their provider package along with unit tests, eliminating the need for Extractors in most cases. For this purpose, a new optional API for Operators (<code>get_openlineage_facets_on_{start(), complete(ti), failure(ti)}</code>, documented <a href=\"https://openlineage.io/docs/integrations/airflow/default-extractors\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>) can be used.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"example-operator\">Example Operator<a href=\"#example-operator\" class=\"hash-link\" aria-label=\"Direct link to Example Operator\" title=\"Direct link to Example Operator\">​</a></h4><p>The Google Cloud Provider in Airflow is one of the providers to which extraction logic has been added. The <code>get_openlineage_facets_on_complete()</code> function in the <a href=\"https://github.com/apache/airflow/blob/main/airflow/providers/google/cloud/transfers/gcs_to_gcs.py#L556\" target=\"_blank\" rel=\"noopener noreferrer\"><code>gcs_to_gcs</code></a> operator shows how easy adding OpenLineage support to an operator can be.</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    def get_openlineage_facets_on_complete(self, task_instance):</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        Implementing _on_complete because the execute method does preprocessing on internals.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        This means we won't have to normalize self.source_object and self.source_objects,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        destination bucket and so on.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        from openlineage.client.run import Dataset</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        from airflow.providers.openlineage.extractors import OperatorLineage</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        return OperatorLineage(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            inputs=[</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                Dataset(namespace=f\"gs://{self.source_bucket}\", name=source)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                for source in sorted(self.resolved_source_objects)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            outputs=[</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                Dataset(namespace=f\"gs://{self.destination_bucket}\", name=target)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                for target in sorted(self.resolved_target_objects)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        )</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>In this case, the operator itself presents us with the source and target buckets, and objects which will be copied. Implementing OpenLineage support requires only properly initializing the name and namespace of the object according to the <a href=\"https://github.com/OpenLineage/docs/blob/main/docs/spec/naming.md\" target=\"_blank\" rel=\"noopener noreferrer\">naming schema</a> </p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"implementing-the-provider-in-custom-operators\">Implementing the Provider in Custom Operators<a href=\"#implementing-the-provider-in-custom-operators\" class=\"hash-link\" aria-label=\"Direct link to Implementing the Provider in Custom Operators\" title=\"Direct link to Implementing the Provider in Custom Operators\">​</a></h4><p>The OpenLineage Provider in Airflow makes implementing support for custom operators easy. In fact, now there is nothing stopping you from adding OpenLineage support to your own custom operator. The provider detects OpenLineage methods and calls them when appropriate – before task execution, after success, or after complete. Also, you don’t have to add all three – the failure method falls back to the complete method if it’s not present, and the complete method to the start method. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"future-development\">Future Development<a href=\"#future-development\" class=\"hash-link\" aria-label=\"Direct link to Future Development\" title=\"Direct link to Future Development\">​</a></h3><p>The OpenLineage Provider makes possible several sought-after enhancements, including:</p><ul><li>Integration with XCom datasets (Airflow AIP-48)</li><li>Coverage of <code>PythonOperator</code>, the most-used operator in Airflow, including Task Flow support</li><li>Support for Hooks, which would track their own lineage to be collected by the <code>PythonOperator</code> and presented as its own lineage</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"supported-operators\">Supported Operators<a href=\"#supported-operators\" class=\"hash-link\" aria-label=\"Direct link to Supported Operators\" title=\"Direct link to Supported Operators\">​</a></h3><p>The OpenLineage Provider currently supports the following operators, with support for additional operators coming soon:</p><ul><li>Apache Kafka</li><li>AWS SageMaker</li><li>GCS</li><li>Common-SQL, including support for multiple databases like Postgres and MySQL</li><li>MS Azure</li><li>Snowflake</li></ul><p>We welcome contributions and feedback on operator support and will be happy to help anyone get started adding extraction logic to an existing or custom operator.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"additional-resources\">Additional Resources<a href=\"#additional-resources\" class=\"hash-link\" aria-label=\"Direct link to Additional Resources\" title=\"Direct link to Additional Resources\">​</a></h3><p>If you are interested in participating in the effort to add support for more operators, reach out to us on <a href=\"https://bit.ly/lineageslack\" target=\"_blank\" rel=\"noopener noreferrer\">Slack</a>.</p><p>For background on the architecture and implementation plan, read the <a href=\"https://cwiki.apache.org/confluence/display/AIRFLOW/AIP-53+OpenLineage+in+Airflow\" target=\"_blank\" rel=\"noopener noreferrer\">proposal</a>.</p><p>For guides on getting started with OpenLineage, read the <a href=\"https://openlineage.io/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">docs</a>.</p>",
            "url": "https://openlineage.io/blog/airflow-provider",
            "title": "The OpenLineage Airflow Provider is Here",
            "summary": "Built-in OpenLineage support in Airflow means big improvements in reliability, lineage output, and custom operator implementation.",
            "date_modified": "2023-08-23T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/airflow-summit-meetup",
            "content_html": "<p>Join us on Monday, September 18th, 2023, from 5:00-8:00 pm PT ET in Toronto to\ncontribute to a discussion of the future of OpenLineage. On the tentative agenda: </p><ul><li><em>Intros</em></li><li><em>Evolution of spec presentation/discussion (project background/history)</em></li><li><em>State of the community</em></li><li><em>Integrating OpenLineage with <a href=\"https://metaphor.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaphor</a> (by special guests <a href=\"https://www.linkedin.com/in/yeliu84/\" target=\"_blank\" rel=\"noopener noreferrer\">Ye</a> &amp; <a href=\"https://www.linkedin.com/in/ivanperepelitca/\" target=\"_blank\" rel=\"noopener noreferrer\">Ivan</a>)</em></li><li><em>Spark/Column lineage update</em></li><li><em>Airflow Provider update</em></li><li><em>Roadmap Discussion</em></li><li><em>Action items review/next steps</em></li></ul><p>Bring your ideas and vision for OpenLineage!</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity\nto influence the direction of the standard! We hope to see you there. </p><p><strong>Please note that the meetup is not being held at the Airflow Summit conference\nlocation but at a separate space nearby. See below for details.</strong> </p><p><strong>Please <a href=\"https://www.meetup.com/openlineage/events/295488014/?utm_medium=referral&amp;utm_campaign=share-btn_savedevents_share_modal&amp;utm_source=link\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nto let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: September 18th, 2023<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 5:00-8:00 PM ET<br>\n<!-- -->Address: <a href=\"https://www.canarts.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Canarts Media Studio</a>, <a href=\"https://goo.gl/maps/Q4k6MQ9AhsmPUUkX9\" target=\"_blank\" rel=\"noopener noreferrer\">600 Bay Street, Unit 410, Toronto, ON M5G 1M6</a><br>\n<!-- -->Phone: 416-805-2286</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-there\">Getting There<a href=\"#getting-there\" class=\"hash-link\" aria-label=\"Direct link to Getting There\" title=\"Direct link to Getting There\">​</a></h4><p>Canarts Media Studio is a 3-minute walk away from the Marriott Downtown CF at\nEaton Centre and accessible via two subway lines, a streetcar line and a bus route.</p><ul><li>Subway: Dundas subway station</li><li>Subway: St Patrick subway station</li><li>Streetcar: Dundas - 505 eastbound and westbound</li><li>Bus: Bay - 19 southbound and northbound</li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-in\">Getting In<a href=\"#getting-in\" class=\"hash-link\" aria-label=\"Direct link to Getting In\" title=\"Direct link to Getting In\">​</a></h4><p>Take the elevator to the fourth floor. Canarts is in #410.<br>\n<!-- -->Stuck outside or in the lobby? Post a message in <a href=\"https://bit.ly/lineageslack\" target=\"_blank\" rel=\"noopener noreferrer\">Slack</a>, and someone will come down.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/airflow-summit-meetup",
            "title": "Meet Us in Toronto on September 18th!",
            "summary": "Our first Toronto OpenLineage Meetup will take place alongside Airflow Summit on September 18th.",
            "date_modified": "2023-08-18T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/1.0-release",
            "content_html": "<p>Announcing OpenLineage <a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/1.0.0\" target=\"_blank\" rel=\"noopener noreferrer\">v1.0</a>! We’re officially in 1.x territory!</p><p>It has become more and more apparent to us that managing data has become an O(n^2) problem. Every company is a data company, and every department within an organization is then again a mini data ecosystem in and of itself.  When departments interact, there’s a duplication of effort across pipeline tooling, and deployment of new tools can break existing lineage workflows. </p><p>This is why we’re seeing increasing demand for OpenLineage support across various tools, and we’re super excited to see more and more data engineers, developers and database managers joining our community. </p><p>Momentum seems to be growing behind OpenLineage as the industry standard for runtime lineage collection. At the same time, a consensus appears to be forming that an open spec will get us closest to 100% coverage of data ecosystem tooling, one that is highly granular and also general-purpose enough to be consistent across various data workloads.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"an-evolving-spec\">An Evolving Spec<a href=\"#an-evolving-spec\" class=\"hash-link\" aria-label=\"Direct link to An Evolving Spec\" title=\"Direct link to An Evolving Spec\">​</a></h3><p>Now that we’re at v1.0, static lineage has made its way to OpenLineage! Up till now, OpenLineage has focused on “runtime” lineage - i.e., metadata generated when jobs are run. Capturing information as transformations of datasets occur enables precise descriptions of those transformations. </p><p>The 1.0 release reflects the fact that there is demand for \"design-time\" lineage. The concept behind this is that even when datasets are not being touched yet, lineage metadata about them can still be useful and valuable.</p><p>Although operational lineage covers many use cases, some scenarios call for lineage about jobs that have not run - and might never do so. </p><p>Also, in many cases, a combination of both static and runtime approaches provides the best operational results. For example, imagine that a dataset exists in a data warehouse and dashboarding tool for which a pipeline has always been broken. Static lineage will show not only that the dataset exists but also that the pipeline for it has never run or always fails.  </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"implementing-static-lineage\">Implementing Static Lineage<a href=\"#implementing-static-lineage\" class=\"hash-link\" aria-label=\"Direct link to Implementing Static Lineage\" title=\"Direct link to Implementing Static Lineage\">​</a></h3><p>For an overview of the implementation, read the <a href=\"/blog/static-lineage\">release preview</a> by Michael Robinson.</p><p>The first part of the implementation was authored by Paweł Leszczyński in <a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/0.29.2\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage 0.29.2</a>, which included two new event types along with support for them in the Python client.</p><p>Additional work, contributed by Julien Le Dem and Jakub Dardziński, involved:</p><ul><li>adding facet deletion to handle the case in which a user adds and deletes a dataset in the same request (<a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/0.30.1\" target=\"_blank\" rel=\"noopener noreferrer\">0.30.1</a>)</li><li>removing references to facets from the core spec that broke compatibility with the Json schema specification (<a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/1.0.0\" target=\"_blank\" rel=\"noopener noreferrer\">1.0.0</a>).</li></ul><p>On the Marquez side, adding support for static lineage is ongoing. <a href=\"https://github.com/MarquezProject/marquez/releases/tag/0.37.0\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez 0.37.0</a> includes support in the API for decoding static events via a new <a href=\"https://github.com/MarquezProject/marquez/pull/2495\" target=\"_blank\" rel=\"noopener noreferrer\"><code>EventTypeResolver</code></a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"supporting-new-use-cases\">Supporting New Use Cases<a href=\"#supporting-new-use-cases\" class=\"hash-link\" aria-label=\"Direct link to Supporting New Use Cases\" title=\"Direct link to Supporting New Use Cases\">​</a></h3><p>With the release of 1.0, we now support use cases like:</p><ul><li>bootstrapping of a lineage graph with prospective runs for auditing</li><li>capturing dataset ownership changes outside of runs</li><li>consuming facets from external systems</li><li>creating dataset symlinks more easily</li></ul><p>Static lineage promises to fill the blind spots that dynamic lineage alone could not reach, offering a macroscopic view of how data flows and is accessed throughout an entire organization.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"additional-resources\">Additional Resources<a href=\"#additional-resources\" class=\"hash-link\" aria-label=\"Direct link to Additional Resources\" title=\"Direct link to Additional Resources\">​</a></h3><ul><li><a href=\"/getting-started\">Getting Started Guide</a></li><li><a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/1.0.0\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage 1.0 Release</a></li><li><a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/spec/OpenLineage.json\" target=\"_blank\" rel=\"noopener noreferrer\">JsonSchema Specification</a></li><li><a href=\"https://openlineage.io/apidocs/openapi/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenAPI Specification for HTTP-based Implementation</a></li></ul>",
            "url": "https://openlineage.io/blog/1.0-release",
            "title": "Announcing OpenLineage 1.0",
            "summary": "We are pleased to announce the first major release of OpenLineage. This release completes the first version of a new static lineage feature.",
            "date_modified": "2023-08-04T00:00:00.000Z",
            "author": {
                "name": "Shirley Lu",
                "url": "https://www.linkedin.com/in/juye-shirley-lu/"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/sf-meetup-2",
            "content_html": "<p>Join us on Wednesday, August 30th, 2023, from 5:30-8:30 pm PT at the Astronomer offices\nin San Francisco to learn more about the present and future of OpenLineage. Meet\nother members of the ecosystem, learn about the project’s goals and fundamental\ndesign, and participate in a discussion about the future of the project. Bring\nyour ideas and vision for OpenLineage!</p><p>Also on the agenda: a presentation by new contributor/partner <a href=\"https://github.com/jlukenoff\" target=\"_blank\" rel=\"noopener noreferrer\">John Lukenoff</a>,\nwho will be speaking about his lineage use case.</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity\nto influence the direction of this important new standard! We hope to see you\nthere. </p><p><strong>Please <a href=\"https://www.meetup.com/meetup-group-bnfqymxe/events/295195280/?utm_medium=referral&amp;utm_campaign=share-btn_savedevents_share_modal&amp;utm_source=link\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nto let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: August 30th, 2023<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 5:30-8:30 pm PT<br>\n<!-- -->Address: Astronomer, <a href=\"https://goo.gl/maps/7UxfePDNPkneyc8v5?coh=178571&amp;entry=tt\" target=\"_blank\" rel=\"noopener noreferrer\">8 California Street, 7th Floor, San Francisco, CA 94111</a></p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-there\">Getting There<a href=\"#getting-there\" class=\"hash-link\" aria-label=\"Direct link to Getting There\" title=\"Direct link to Getting There\">​</a></h4><p>The Astronomer SF office is in the Financial District at the corner of California\nand Drumm Streets, catty-cornered from the Market/Drumm Street cable car stop.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-in\">Getting In<a href=\"#getting-in\" class=\"hash-link\" aria-label=\"Direct link to Getting In\" title=\"Direct link to Getting In\">​</a></h4><p>An Astronomer team member in the lobby will direct you to the Astronomer offices\non the seventh floor.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/sf-meetup-2",
            "title": "Meet Us in San Francisco on August 30th!",
            "summary": "Our second SF OpenLineage Meetup will take place on August 30th.",
            "date_modified": "2023-08-02T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/static-lineage",
            "content_html": "<p>The first major release of OpenLineage, 1.0, will add static lineage support.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"static-aka-design-lineage-is-coming-soon\">Static, AKA \"Design,\" Lineage is Coming Soon<a href=\"#static-aka-design-lineage-is-coming-soon\" class=\"hash-link\" aria-label=\"Direct link to Static, AKA &quot;Design,&quot; Lineage is Coming Soon\" title=\"Direct link to Static, AKA &quot;Design,&quot; Lineage is Coming Soon\">​</a></h3><p>OpenLineage 1.0, which is expected early in August, will add support for static lineage to the project.</p><p>An initiative to add the provision of static lineage, sometimes also called \"design\" or \"design-time\" lineage, to OpenLineage came out of conversations with community members at Collibra, Manta and Marquez.</p><p>Data catalogs like those offered by Collibra and Manta will benefit from static lineage support, but so will other users. In one way, this addition represents an exciting new chapter in the history of the project. In another, it represents a return to our roots. Before OpenLineage focused on operational lineage, it supported a form of static lineage.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-is-static-lineage\">What is Static Lineage?<a href=\"#what-is-static-lineage\" class=\"hash-link\" aria-label=\"Direct link to What is Static Lineage?\" title=\"Direct link to What is Static Lineage?\">​</a></h4><p>OpenLineage has traditionally supported only operational, or \"runtime,\" lineage -- metadata emitted when jobs run. In other words, OpenLineage has been engineered to capture information as transformations of datasets are happening, enabling precise descriptions of those transformations.</p><p>As part of this process, OpenLineage has nonetheless also captured some static metadata -- specifically, information about jobs (such as the current version of the code) and datasets (such as the schema).</p><p>What was called for was a way to collect such static metadata outside of the run context. </p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-use-cases-are-served-by-static-lineage\">What Use Cases are Served by Static Lineage?<a href=\"#what-use-cases-are-served-by-static-lineage\" class=\"hash-link\" aria-label=\"Direct link to What Use Cases are Served by Static Lineage?\" title=\"Direct link to What Use Cases are Served by Static Lineage?\">​</a></h4><p>Use cases include:</p><ul><li>bootstrapping of a lineage graph with prospective runs for auditing</li><li>capturing dataset ownership changes </li><li>consuming facets from external systems</li><li>creating dataset symlinks more easily</li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"implementation-details\">Implementation Details<a href=\"#implementation-details\" class=\"hash-link\" aria-label=\"Direct link to Implementation Details\" title=\"Direct link to Implementation Details\">​</a></h4><p>In order to add static lineage to the spec, two new event types were proposed: <code>DatasetEvent</code> and <code>JobEvent</code>.</p><p>These new events will add facets at a point in time that will apply to an entity until a new version of the same facet is produced. </p><p>The first step in implementing static lineage was completed with the release of <a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/0.29.2\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage 0.29.2</a>, which included two types in the spec for \"runless\" metadata: a <code>DatasetEvent</code> and <code>JobEvent</code> (along with support for the new types in the Python client).</p><p>The next steps will include changing the event lifecycle (from running to complete, failed, or aborted) to handle events of the new types, and adding facet deletion to handle the case in which a user adds and deletes a dataset in the same request.</p><p>Adding support for static lineage in Marquez is also ongoing, and we are excited about the progress there. <a href=\"https://github.com/MarquezProject/marquez/releases/tag/0.37.0\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez 0.37.0</a> includes support in the API for decoding static events via a new <a href=\"https://github.com/MarquezProject/marquez/pull/2495\" target=\"_blank\" rel=\"noopener noreferrer\"><code>EventTypeResolver</code></a>.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"more-information\">More Information<a href=\"#more-information\" class=\"hash-link\" aria-label=\"Direct link to More Information\" title=\"Direct link to More Information\">​</a></h4><p>For more details including the code changes, see:</p><ul><li>the <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/proposals/1837/static_lineage.md\" target=\"_blank\" rel=\"noopener noreferrer\">static lineage proposal</a> by Julien Le Dem, Maciej Obuchowski, Benji Lampel and Ross Turk </li><li>the initial <a href=\"https://github.com/OpenLineage/OpenLineage/pull/1880\" target=\"_blank\" rel=\"noopener noreferrer\">pull request</a> by Paweł Leszczyński</li></ul>",
            "url": "https://openlineage.io/blog/static-lineage",
            "title": "OpenLineage 1.0, Featuring Static Lineage, is Coming Soon",
            "summary": "The release of OpenLineage 1.0 will add static lineage support.",
            "date_modified": "2023-07-18T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/nyc-collibra-meetup",
            "content_html": "<p>Join us on Thursday, June 22nd, 2023, from 6:00-8:00 pm ET at Collibra's HQ in\nNew York to discuss the present and future of OpenLineage. Meet other members of\nthe ecosystem, learn about the project’s goals and fundamental design, and\nparticipate in a discussion about the future of the project. Bring your ideas\nand vision for OpenLineage!</p><p>The meetup is open to all. Snacks, non-alcoholic drinks and pizza will be\nprovided. Don't miss this opportunity to influence the direction of this\nimportant new standard! We hope to see you there. </p><p><strong>Please <a href=\"https://www.meetup.com/data-lineage-meetup/events/294065396/\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nby 6/20 to let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: June 22nd, 2023<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 6:00-8:00 pm ET<br>\n<!-- -->Address: 61 Broadway, New York, NY 10006</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-in\">Getting In<a href=\"#getting-in\" class=\"hash-link\" aria-label=\"Direct link to Getting In\" title=\"Direct link to Getting In\">​</a></h4><p>Check in will be in the lobby with ID. Then, take the elevator to the 31st floor.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/nyc-collibra-meetup",
            "title": "Join us in New York on June 22nd",
            "summary": "A meetup is happening on June 22nd in New York. Please join us!",
            "date_modified": "2023-06-08T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/ecosystem-survey",
            "content_html": "<p>Our first Ecosystem Survey is now live. Please take a moment to <a href=\"http://bit.ly/ecosystem_survey\" target=\"_blank\" rel=\"noopener noreferrer\">share your opinions and hopes for OpenLineage</a>. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"an-important-measure-and-milestone\">An Important Measure and Milestone<a href=\"#an-important-measure-and-milestone\" class=\"hash-link\" aria-label=\"Direct link to An Important Measure and Milestone\" title=\"Direct link to An Important Measure and Milestone\">​</a></h3><p>This Ecosystem Survey, our first ever, is an effort to gauge how well we are serving our partners and users and to gain a better understanding of your needs.</p><p>We plan to conduct a survey like this on an annual basis.</p><p>The questions focus on users':</p><ul><li>views on how we should prioritize supporting various tooling categories (e.g., orchestrators),</li><li>views on how we should prioritize supporting specific tools in each category,</li><li>organizations and roles,</li><li>use cases,</li><li>motivations for choosing the project,</li><li>experience of this community,</li><li>alternatives you explored,</li><li>and more (but not much!).</li></ul><p>Note: it might appear longer than it is due to the large number of optional questions. Not all questions apply to all use cases.</p><p>Thank you in advance for taking the time to help us <a href=\"http://bit.ly/ecosystem_survey\" target=\"_blank\" rel=\"noopener noreferrer\">chart the course of OpenLineage</a>!</p><p>We look forward to sharing the results.</p>",
            "url": "https://openlineage.io/blog/ecosystem-survey",
            "title": "2023 Ecosystem Survey",
            "summary": "The 2023 Ecosystem Survey will provide us with important information about our users, their opinions and needs.",
            "date_modified": "2023-05-23T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/why-open-standard",
            "content_html": "<p>We make much of the fact that OpenLineage is an <em>open</em> standard. It’s right there in our name. But it shouldn’t go without saying why an open standard for lineage metadata is preferable to a privately held one. The chief advantage of an open standard is precisely the fact that no one person or entity owns it. Hence, it offers the best avenue to a universally adopted, persistent specification.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"background\">Background<a href=\"#background\" class=\"hash-link\" aria-label=\"Direct link to Background\" title=\"Direct link to Background\">​</a></h3><p>It’s called OpenLineage for a reason – it’s an open-source <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.md\" target=\"_blank\" rel=\"noopener noreferrer\">spec</a> for the collection of lineage metadata. This is a large part of its appeal. If you ask our users why they chose OpenLineage, they are likely to cite, in addition to its simplicity and desirable <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration\" target=\"_blank\" rel=\"noopener noreferrer\">integrations</a>, the fact that it provides an open spec for lineage. (But please note that lineage metadata is not the only kind of metadata OpenLineage supports, event time and run state being two additional forms of metadata provided by the core spec, and <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/spec/facets\" target=\"_blank\" rel=\"noopener noreferrer\">facets</a> provide even more. OpenLineage is easily extensible and offers more than just lineage out of the box!)</p><p>An open spec for lineage metadata will be more likely to succeed because it will foster collaboration and hasten wide adoption across the data ecosystem. Advantages of a collaborative, open approach include faster innovation, reduced duplication of effort, and better interoperability between systems. In fact, to our thinking, an open standard is the only way to approach the constantly moving target of 100% coverage of tooling in the fast-moving data space. We also believe that the pursuit of total coverage is worth the short-term challenges involved in getting buy-in across the industry.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"bluetooth-evidence-that-open-standards-work\">Bluetooth: Evidence that Open Standards Work<a href=\"#bluetooth-evidence-that-open-standards-work\" class=\"hash-link\" aria-label=\"Direct link to Bluetooth: Evidence that Open Standards Work\" title=\"Direct link to Bluetooth: Evidence that Open Standards Work\">​</a></h3><p>Ross Turk (<a href=\"https://github.com/rossturk\" target=\"_blank\" rel=\"noopener noreferrer\">@rossturk</a>), one of the early evangelists for OpenLineage, has often cited the example of Bluetooth, a spec, when making the case for OpenLineage. The example is a salutary one.</p><p>According to <a href=\"https://www.bluetooth.com/2023-market-update/\" target=\"_blank\" rel=\"noopener noreferrer\">Bluetooth</a>, 5.4 billion Bluetooth-equipped devices will ship this year. That’s a lot of headsets and waterproof speakers, among the many other things that use Bluetooth, but why did the standard become the dominant spec for short-range wireless connectivity? One possible explanation stands out: it started as an open standard.</p><p>The Bluetooth standard has been in development since the late 1990s, <a href=\"https://www.bluetooth.com/about-us/bluetooth-origin/\" target=\"_blank\" rel=\"noopener noreferrer\">when Nokia, Ericsson and Intel began work on it</a>. They knew that only an open standard would make wireless connectivity across devices and industries a reality, but they collaborated on the spec because <a href=\"https://en.wikipedia.org/wiki/Bluetooth\" target=\"_blank\" rel=\"noopener noreferrer\">neither company was the leader of its market segment</a>. Unable to use market dominance to impose a standard, they joined forces instead. When the Bluetooth SIG (Special Interest Group) launched in 1998, it had five members: Ericsson, IBM, Toshiba, Nokia and Intel. Today, <a href=\"https://www.bluetooth.com/about-us/\" target=\"_blank\" rel=\"noopener noreferrer\">membership stands at over 38,000 companies</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ok-but-whats-in-it-for-me\">OK, but What’s in It for Me?<a href=\"#ok-but-whats-in-it-for-me\" class=\"hash-link\" aria-label=\"Direct link to OK, but What’s in It for Me?\" title=\"Direct link to OK, but What’s in It for Me?\">​</a></h3><p>Playing devil’s advocate, it’s one thing to argue that companies straddling multiple industries and dealing with complex hardware-related challenges can benefit from open standards. It’s perhaps another to argue that companies in the data space can benefit from open standards – especially when the competition will, too.</p><p>If one’s focus is only on short-term gains and losses, then this concern has some merit. A truly open standard is open to all, meaning partners and competitors alike reap the benefits. (Even in the short term, there are ways to differentiate, however.) If one takes a broader view, though, it becomes clear that lineage metadata is only truly valuable to anyone if it offers end-to-end and fully agnostic pipeline visibility. The best way to get total coverage that is reliable and persistent is to get the participation of the metadata producers themselves. </p><p>This reality means that, absent a dominant open standard, one’s own stakeholders – from internal engineering teams to customers to external partners – will feel the pain of incomplete coverage. This will have long-term implications for productivity, product quality, user experience and, ultimately, profitability. </p><p>Fair enough, but won’t a shared standard dilute member companies’ value propositions? Not if their products are adequately differentiated. Competition through differentiated products, combined with collaboration on a shared standard, is the solution.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-in-it-for-the-ecosystem\">What’s in It for the Ecosystem?<a href=\"#whats-in-it-for-the-ecosystem\" class=\"hash-link\" aria-label=\"Direct link to What’s in It for the Ecosystem?\" title=\"Direct link to What’s in It for the Ecosystem?\">​</a></h3><p>The data ecosystem is evolving continuously, with new tools being added daily. Given this constant rate of change, a spec that is open – and, therefore, more likely to become technology-agnostic – offers the fastest route to comprehensive and up-to-date pipeline observability.</p><p>The speed with which the ecosystem is evolving has meant that, ironically enough, some legacy systems, particularly in the Big Data space, have remained viable for many years. An open standard is better positioned not only to support new tools as they emerge but also to maintain support for legacy systems.</p><p>In short, the way to ensure that a standard is tool-agnostic and resilient is to make it a community effort owned by all.     </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-can-i-get-involved\">How Can I Get Involved?<a href=\"#how-can-i-get-involved\" class=\"hash-link\" aria-label=\"Direct link to How Can I Get Involved?\" title=\"Direct link to How Can I Get Involved?\">​</a></h3><p>Anyone can contribute to OpenLineage by forking the GitHub repository and opening a pull request. For more information about getting started as a contributor, read the <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">new contributor guide</a>. Prefer to get your feet wet first? Try our <a href=\"https://openlineage.io/getting-started\" target=\"_blank\" rel=\"noopener noreferrer\">quickstart guide</a>.</p>",
            "url": "https://openlineage.io/blog/why-open-standard",
            "title": "Why an Open Standard for Lineage Metadata?",
            "summary": "An open standard offers the best route to a universally adopted, persistent metadata specification.",
            "date_modified": "2023-05-22T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/sf-meetup",
            "content_html": "<p>Join us on Tuesday, June 27th, 2023, from 5:30-8:30 pm PT at the Astronomer offices\nin San Francisco to learn more about the present and future of OpenLineage. Meet\nother members of the ecosystem, learn about the project’s goals and fundamental\ndesign, and participate in a discussion about the future of the project. Bring\nyour ideas and vision for OpenLineage!</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity\nto influence the direction of this important new standard! We hope to see you\nthere. </p><p><strong>Please <a href=\"https://www.meetup.com/meetup-group-bnfqymxe/events/293448130/\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nto let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: June 27th, 2023<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 5:30-8:30 pm PT<br>\n<!-- -->Address: Astronomer, <a href=\"https://goo.gl/maps/7UxfePDNPkneyc8v5?coh=178571&amp;entry=tt\" target=\"_blank\" rel=\"noopener noreferrer\">8 California Street, 7th Floor, San Francisco, CA 94111</a></p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-there\">Getting There<a href=\"#getting-there\" class=\"hash-link\" aria-label=\"Direct link to Getting There\" title=\"Direct link to Getting There\">​</a></h4><p>The Astronomer SF office is in the Financial District at the corner of California\nand Drumm Streets, catty-cornered from the Market/Drumm Street cable car stop.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-in\">Getting In<a href=\"#getting-in\" class=\"hash-link\" aria-label=\"Direct link to Getting In\" title=\"Direct link to Getting In\">​</a></h4><p>An Astronomer team member in the lobby will direct you to the Astronomer offices\non the seventh floor.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/sf-meetup",
            "title": "Meet Us in San Francisco on June 27th!",
            "summary": "The first SF OpenLineage Meetup will take place on June 27th.",
            "date_modified": "2023-05-16T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/nyc-meetup",
            "content_html": "<p>Join us on Wednesday, April 26th, 2023 from 5:30-8:30 pm at the Astronomer offices\nin New York, NY, to learn more about the present and future of OpenLineage. Meet\nother members of the ecosystem, learn about the project’s goals and fundamental\ndesign, and participate in a discussion about the future of the project. Bring\nyour ideas and vision for OpenLineage!</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity\nto influence the direction of this important new standard! We hope to see you\nthere. </p><p><strong>Please <a href=\"https://www.meetup.com/data-lineage-meetup/events/292897496\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a>\nto let us know you're coming.</strong></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: April 26th, 2023<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 5:30-8:30 pm ET<br>\n<!-- -->Address: Astronomer, <a href=\"https://goo.gl/maps/y2GZdg3St4PWHzh66\" target=\"_blank\" rel=\"noopener noreferrer\">636 6th Avenue, 3rd Floor, New York, NY 10011</a></p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-there\">Getting There<a href=\"#getting-there\" class=\"hash-link\" aria-label=\"Direct link to Getting There\" title=\"Direct link to Getting There\">​</a></h4><p>The Astronomer NY offices are in the Flatiron District at the intersection of 6th\nAvenue and 19th Street, one block east of the 18th Street Metro station. The entrance\nto the building is on 19th Street.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-in\">Getting In<a href=\"#getting-in\" class=\"hash-link\" aria-label=\"Direct link to Getting In\" title=\"Direct link to Getting In\">​</a></h4><ul><li>If you arrive before 6 pm, simply come on up to the third floor! Otherwise, post\na message in <a href=\"http://bit.ly/OpenLineageSlack\" target=\"_blank\" rel=\"noopener noreferrer\">Slack</a> to let us know you're here,\nand someone will let you in.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/nyc-meetup",
            "title": "Meet Us in NYC Later This Month!",
            "summary": "The next OpenLineage Meetup will take place on April 26th in NYC.",
            "date_modified": "2023-04-04T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/data-council-meetup",
            "content_html": "<p><a href=\"https://www.datacouncil.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">Data Council</a>, known for putting on wonderful\nevents that attract the best and brightest speakers in the data ecosystem, will\nbe holding its only <a href=\"https://www.datacouncil.ai/austin\" target=\"_blank\" rel=\"noopener noreferrer\">conference of 2023</a> in\nAustin, Texas, on March 28-30th, and OpenLineage will be there. </p><p>Among the speakers at this year's event will be OpenLineage Project Lead and\n<a href=\"https://astronomer.io\" target=\"_blank\" rel=\"noopener noreferrer\">Astronomer</a> Chief Architect <a href=\"https://www.datacouncil.ai/talks/ten-years-of-building-open-source-standards?hsLang=en\" target=\"_blank\" rel=\"noopener noreferrer\">Julien Le Dem</a>.\nJulien will be speaking on March 30th at 10 am CST.</p><p>Also, we are planning an OpenLineage event for conference attendees. Join Julien\nand other members of the OpenLineage community on March 30th from 12:15-1:30 pm\nat the <a href=\"https://meetattexas.com/hotel\" target=\"_blank\" rel=\"noopener noreferrer\">AT&amp;T Hotel and Conference Center</a> on the\ncampus of UT Austin for a community meetup.</p><p>You can expect a wide-ranging, open-ended discussion of the past, present and\nfuture of the OpenLineage spec. You'll also meet other members of the data\necosystem, learn more about the project's goals and design, and be able to\nparticipate in a conversation about what's next.</p><p>If you haven't registered for this event yet, click\n<a href=\"https://www.tickettailor.com/events/datacouncil/747883?hsCtaTracking=dc0af239-1ec5-4c9f-a175-f487bb858074%7Ca9aa7625-43fb-436d-b05d-9666bab6e414&amp;_ga=2.239870401.316757827.1677608801-1529956930.1676647160\" target=\"_blank\" rel=\"noopener noreferrer\">this link</a>\nand use the code OpenLineage20. Also, watch this space for additional details\nabout the meetup as the date draws near. We hope to see you there.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"meetup-details\">Meetup Details<a href=\"#meetup-details\" class=\"hash-link\" aria-label=\"Direct link to Meetup Details\" title=\"Direct link to Meetup Details\">​</a></h3><ul><li>Date: March 30, 2023</li><li>Time: 12:15-1:30 pm CST </li><li>Place: AT&amp;T Hotel and Conference Center, UT Austin, Room 103</li></ul>",
            "url": "https://openlineage.io/blog/data-council-meetup",
            "title": "Meet Us at Data Council Austin",
            "summary": "The OpenLineage community will be gathering on March 30th at Data Council Austin -- join us!",
            "date_modified": "2023-02-28T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/data-lineage-meetup",
            "content_html": "<p>Join us on Thursday, March 9, 2023 from 6-8 pm in Providence, Rhode Island, to learn more about the present and future of OpenLineage. Meet other members of the ecosystem, learn about the project’s goals and fundamental design, and participate in a discussion about the future of the project. Bring your ideas and vision for OpenLineage!</p><p>Food will be provided, and the meetup is open to all. Don't miss this opportunity to influence the direction of this important new standard! We hope to see you there. Please <a href=\"https://www.meetup.com/providence-data-lineage-meetup/events/291847062/\" target=\"_blank\" rel=\"noopener noreferrer\">sign up</a> to let us know you're coming.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"time-place--format\">Time, Place &amp; Format<a href=\"#time-place--format\" class=\"hash-link\" aria-label=\"Direct link to Time, Place &amp; Format\" title=\"Direct link to Time, Place &amp; Format\">​</a></h3><p>Date: March 9, 2023<br>\n<!-- -->Format: In-person<br>\n<!-- -->Time: 6-8 pm ET<br>\n<!-- -->Address: <a href=\"https://cic.com/providence\" target=\"_blank\" rel=\"noopener noreferrer\">CIC</a>, <a href=\"https://goo.gl/maps/NYBbs4ht91dWWaRs9\" target=\"_blank\" rel=\"noopener noreferrer\">225 Dyer Street</a>, Providence, RI, US 02903  </p><p align=\"center\"><iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2973.371855436124!2d-71.41054938451008!3d41.82029027700877!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e445d43ee241e7%3A0x2f2bda0de0f233c9!2sCIC%20Providence!5e0!3m2!1sen!2sus!4v1676559511501!5m2!1sen!2sus\" width=\"600\" height=\"450\" style=\"border:0\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe></p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-there\">Getting There<a href=\"#getting-there\" class=\"hash-link\" aria-label=\"Direct link to Getting There\" title=\"Direct link to Getting There\">​</a></h4><ul><li>Air: the nearest airport is T.F. Green/PVD. Boston Logan is also within 1.5-2 hours' driving distance.  </li><li>Rail: Amtrak serves <a href=\"https://goo.gl/maps/eAMNPcpQVJkqwyS76\" target=\"_blank\" rel=\"noopener noreferrer\">PVD</a>, which is within walking distance of CIC.  </li><li>Road: garages and lots are a short walk away from the venue, and metered street parking is also available nearby.<ul><li><a href=\"https://goo.gl/maps/nG8j8Vk6ko75GXaH9\" target=\"_blank\" rel=\"noopener noreferrer\">Richmond Garage</a> </li><li><a href=\"https://goo.gl/maps/QYrbo1oaiU4J3fi69\" target=\"_blank\" rel=\"noopener noreferrer\">South Street Landing garage</a> </li><li><a href=\"https://goo.gl/maps/qHoLkRcGmWpxeHhJ8\" target=\"_blank\" rel=\"noopener noreferrer\">Clifford parking lot</a> </li></ul></li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-in\">Getting In<a href=\"#getting-in\" class=\"hash-link\" aria-label=\"Direct link to Getting In\" title=\"Direct link to Getting In\">​</a></h4><ul><li>Check in with the CIC concierge inside the north entrance. The concierge will direct you to the Hope Island Room on the 3rd floor.</li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"arriving-early\">Arriving Early?<a href=\"#arriving-early\" class=\"hash-link\" aria-label=\"Direct link to Arriving Early?\" title=\"Direct link to Arriving Early?\">​</a></h4><ul><li>Come to the coffee bar in <a href=\"https://www.plantcitypvd.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Plant City</a> at 334 South Water Street, Providence RI 02903, which is a short walk from CIC. Other out-of-towners will be meeting up there between 3 and 6 pm.<p align=\"center\"><iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2973.3487782837556!2d-71.40636338451014!3d41.82078727697768!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e4453e4ce11105%3A0x16bdf76c62b9a960!2sPlant%20City!5e0!3m2!1sen!2sus!4v1676559397689!5m2!1sen!2sus\" width=\"600\" height=\"450\" style=\"border:0\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe></p></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hope-to-see-you-there\">Hope to see you there!<a href=\"#hope-to-see-you-there\" class=\"hash-link\" aria-label=\"Direct link to Hope to see you there!\" title=\"Direct link to Hope to see you there!\">​</a></h3>",
            "url": "https://openlineage.io/blog/data-lineage-meetup",
            "title": "Happening Soon - Our First Meetup!",
            "summary": "The inaugural Data Lineage Meetup will take place on March 9th in Providence, RI.",
            "date_modified": "2023-02-08T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/incubation-stage-lfai",
            "content_html": "<p>OpenLineage has achieved Incubation status with the LFAI &amp; Data.</p><p>At the December meeting of the LFAI &amp; Data Foundation TAC, members voted to advance OpenLineage to the Incubation stage of their program! This required us to earn a Silver Badge from the <a href=\"https://bestpractices.coreinfrastructure.org/en\" target=\"_blank\" rel=\"noopener noreferrer\">OpenSSF</a>, get 300+ stars on GitHub (we have over 1100), and make an in-depth presentation about the project and our community to the TAC. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-it-means\">What It Means<a href=\"#what-it-means\" class=\"hash-link\" aria-label=\"Direct link to What It Means\" title=\"Direct link to What It Means\">​</a></h3><p>Now that we’ve cleared this hurdle, we have access to additional services from the foundation, including assistance with creative work, marketing and communication support, and event-planning assistance. Graduation from the program, which will earn us a voting seat on the TAC, is on the horizon. Stay tuned for updates on our progress with the foundation. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"about-the-lfai--data\">About the LFAI &amp; Data<a href=\"#about-the-lfai--data\" class=\"hash-link\" aria-label=\"Direct link to About the LFAI &amp; Data\" title=\"Direct link to About the LFAI &amp; Data\">​</a></h3><p>LF AI &amp; Data is an umbrella foundation of the Linux Foundation that supports open source innovation in artificial intelligence (AI) and data. LF AI &amp; Data was created to support open source AI and data, and to create a sustainable open source AI and data ecosystem that makes it easy to create AI and data products and services using open source technologies. They foster collaboration under a neutral environment with an open governance in support of the harmonization and acceleration of open source technical projects.</p><p>For more info about the foundation and other LFAI &amp; Data projects, visit their <a href=\"https://lfaidata.foundation/\" target=\"_blank\" rel=\"noopener noreferrer\">website</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-next\">What's Next<a href=\"#whats-next\" class=\"hash-link\" aria-label=\"Direct link to What's Next\" title=\"Direct link to What's Next\">​</a></h3><p>The next step for the project is Graduation, which we expect to happen early this summer. Requirements for Graduation include 1000 stars on GitHub and the OpenSSF Gold Badge. Watch this space for updates on our progress.</p>",
            "url": "https://openlineage.io/blog/incubation-stage-lfai",
            "title": "OpenLineage Advances to Incubation Stage with the LFAI & Data",
            "summary": "OpenLineage has achieved Incubation status with the LFAI & Data.",
            "date_modified": "2023-01-17T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/whats-in-a-namespace",
            "content_html": "<p>Namespaces enable powerful insights into distributed workflows.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"background\">Background<a href=\"#background\" class=\"hash-link\" aria-label=\"Direct link to Background\" title=\"Direct link to Background\">​</a></h3><p>With all due respect to Shakespeare's <a href=\"https://shakespeare.folger.edu/shakespeares-works/romeo-and-juliet/act-2-scene-2/?search=rose/#line-2.2.41\" target=\"_blank\" rel=\"noopener noreferrer\">Juliet</a>, in the <a href=\"https://github.com/OpenLineage/OpenLineage\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage</a> spec at least, names in general -- and namespaces in particular -- are everything.</p><p>OK, that’s an exaggeration, but not by much. The function of namespaces is to provide unique IDs for everything in the lineage graph so that jobs and datasets can be rendered as nodes. This means namespaces make stitching input and output datasets together as pipelines possible – which is to say they effectively make lineage possible. In the broader context of the spec, namespaces reflect the importance of naming and naming conventions to the way OpenLineage constructs lineage. </p><p><img loading=\"lazy\" alt=\"Namespace Selector\" src=\"/assets/images/namespace_selector-6c021ed74a1d53b7fa180019b3254053.png\" width=\"643\" height=\"459\" class=\"img_ev3q\"></p><p>In creating pipelines organized according to data sources (in the case of datasets) or schedulers (in the case of jobs), namespaces enable focused insight into data flows, even when datasets and workflows are distributed across an organization. This focus enabled by namespaces is key to the production of useful lineage. If everything lived in a single namespace, every lineage graph would show everything that happened in an ecosystem – and be too cluttered to be useful. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"namespaces-in-the-spec\">Namespaces in the Spec<a href=\"#namespaces-in-the-spec\" class=\"hash-link\" aria-label=\"Direct link to Namespaces in the Spec\" title=\"Direct link to Namespaces in the Spec\">​</a></h3><p>A look at the spec provides additional detail about namespaces. In the spec, namespaces are at the top of the hierarchy, which means that they have priority over datasets, jobs, and the graphs that connect them. Namespaces contain graphs, in fact, along with just about everything else in a datasource or scheduler’s domain. Ultimately, this reflects the spec’s bias towards tracking dataset and job transformations. </p><p>To wit: the same code applied to different input datasets results in different jobs (not different runs of the same job). If those jobs share a scheduler, they will also share a namespace – but not a graph, which makes tracking the transformations much easier. Similarly, if different input datasets share a datasource, they will also share a namespace (but not a graph). </p><p>As you can see, the track switching can get a little complicated, but the namespace abstraction has some clear advantages.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"namespaces-in-the-wild\">Namespaces in the Wild<a href=\"#namespaces-in-the-wild\" class=\"hash-link\" aria-label=\"Direct link to Namespaces in the Wild\" title=\"Direct link to Namespaces in the Wild\">​</a></h3><p>Consider the common scenario in which multiple teams in an organization maintain pipelines that access the same datasets. Now, imagine trying to collect and display lineage from the organization’s ecosystem without having a way to distinguish between the different pipelines that use the same datasets. The ambiguous metadata would make any graph so cluttered as to be practically meaningless. </p><p>Suffice it to say, without a strategy for naming at that macro level of the ecosystem, creating a meaningful graph and tracking transformations is much more difficult. Namespaces also ensure that lineage is meaningful irrespective of the various sources of a job’s metadata. A scope above the dataset and run makes heterogeneous, holistic lineage possible in the case of datasets and jobs.</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">We define the unique name strategy per resource to ensure it is followed uniformly independently from who is producing metadata and we can connect lineage from various sources.</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>In sum, namespaces make operational lineage possible – which is, while maybe not everything, close to it.  </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"consulting-the-marquez-api\">Consulting the Marquez API<a href=\"#consulting-the-marquez-api\" class=\"hash-link\" aria-label=\"Direct link to Consulting the Marquez API\" title=\"Direct link to Consulting the Marquez API\">​</a></h3><p>Thanks to the <a href=\"https://marquezproject.github.io/marquez/openapi.html\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez API reference</a>, we know that a namespaces endpoint is available that we can query for all namespaces.</p><p>If you use curl to do so, here’s what you’ll get after building Marquez from source with seed data (using <code>./docker/up.sh --build --seed</code>):</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">➜  marquez git:(main) ✗ curl -v http://localhost:5000/api/v1/namespaces | jq</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"namespaces\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"name\": \"default\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"createdAt\": \"2022-12-07T15:02:24.135154Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"updatedAt\": \"2022-12-07T15:02:24.135154Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"ownerName\": \"anonymous\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"description\": \"The default global namespace for dataset, job, and run metadata not belonging to a user-specified namespace.\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"isHidden\": false</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"name\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"createdAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"updatedAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"ownerName\": \"anonymous\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"description\": null,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"isHidden\": false</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The namespaces endpoint returns all the available namespaces, which is helpful because, as we’ll see, so much of the information available from the API requires a namespace. For this reason alone, you might say the namespace is the “root” of the object model.</p><p>Say you want to retrieve one or more datasets from the API. First, you’ll need a namespace:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">➜  marquez git:(main) ✗ curl -v http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.drivers | jq</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"id\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"name\": \"public.drivers\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"type\": \"DB_TABLE\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"name\": \"public.drivers\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"physicalName\": \"public.drivers\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"createdAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"updatedAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"sourceName\": \"default\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"fields\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"name\": \"id\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"type\": \"INTEGER\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"tags\": [],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"description\": \"The unique ID of the driver.\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }, …</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Say you want to retrieve a job. You’ll need a namespace:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">➜  marquez git:(main) ✗ curl -v http://localhost:5000/api/v1/namespaces/food_delivery/jobs/etl_order_status | jq</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"id\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"name\": \"etl_order_status\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"type\": \"BATCH\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"name\": \"etl_order_status\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"simpleName\": \"etl_order_status\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"parentJobName\": null,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"createdAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"updatedAt\": \"2020-02-22T22:44:52Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"inputs\": [],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"outputs\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"name\": \"public.order_status\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ], …</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Runs? You’ll need a namespace for those:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">➜  marquez git:(main) ✗ curl -v http://localhost:5000/api/v1/namespaces/food_delivery/jobs/etl_order_status/runs | jq</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"runs\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"id\": \"b7098939-87f0-4207-878f-dfd8e8804d8a\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"createdAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"updatedAt\": \"2020-02-22T22:44:52Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"nominalStartTime\": null,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"nominalEndTime\": null,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"state\": \"COMPLETED\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"startedAt\": \"2020-02-22T22:42:42Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"endedAt\": \"2020-02-22T22:44:52Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"durationMs\": 130000,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"args\": {},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"jobVersion\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"name\": \"etl_order_status\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"version\": \"44ca508b-43cc-392f-bbd2-9ca77d501afa\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"inputVersions\": [],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"outputVersions\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"name\": \"public.order_status\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"version\": \"0c16298c-cbe2-3547-8429-309917290570\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"context\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"sql\": \"INSERT INTO order_status (id, transitioned_at, status, order_id, customer_id, restaurant_id, driver_id)\\n SELECT id, transitioned_at, status, order_id, customer_id, restaurant_id, driver_id\\n   FROM tmp_order_status;\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"facets\": {}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>As the API reveals, namespaces really are key in the spec: they organize and unlock most of the insights OpenLineage has to offer.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"dataset-namespaces\">Dataset Namespaces<a href=\"#dataset-namespaces\" class=\"hash-link\" aria-label=\"Direct link to Dataset Namespaces\" title=\"Direct link to Dataset Namespaces\">​</a></h3><p>Having explored the thinking behind namespaces and their role in the spec, we can get into how they organize datasets and jobs. Let’s start with datasets, the simpler of the two cases due to the more straightforward way datasets’ namespaces are constructed.</p><p>In short, a dataset’s namespace is always tied to its datasource. As the spec says, <code>the namespace for a dataset is the unique name for its datasource.</code>  </p><p>Data sources vary, however, so the specific construction of dataset namespaces also varies across datasource types. (But they tend to map to databases.)</p><p>In the case of Postgres, Mysql, and Trino, for example, we derive the namespace of a dataset from a combination of the scheme, host, and port of the service instance:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Namespace: postgres://{host}:{port} of the service instance.  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Scheme = postgres</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Authority = {host}:{port}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Namespace: mysql://{host}:{port} of the service instance.  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Scheme = mysql</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Authority = {host}:{port}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Namespace: trino://{host}:{port} of the service instance.  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Scheme = trino</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Authority = {host}:{port}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Redshift requires a different strategy. It’s possible to interact with Redshift via SQL and an API, so a Redshift namespace is composed of a cluster identifier, region name and port – the only common unique ID available to both methods: </p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Namespace: redshift://{cluster_identifier}.{region_name}:{port} of the cluster instance.  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Scheme = redshift</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Authority = {cluster_identifier}:{port}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Snowflake and Amazon’s serverless Athena warehouse service, which do not require a port, are even simpler:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Namespace: awsathena://athena.{region_name}.amazonaws.com of the service instance.  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Scheme = awsathena</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Authority = athena.{region_name}.amazonaws.com</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Namespace: snowflake://{account name}  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Scheme = snowflake</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Authority = {account name}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>And so on. As you can see, the provenance of dataset namespaces is pretty straightforward: it’s the data source.</p><p>That said, sometimes deriving the data source of a dataset is not a simple operation. Some datasets can be identified two different ways, for example. A Spark dataset can be written using a Hive metastore and table name but read using the physical location of the data. Before we added the <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/spec/facets/SymlinksDatasetFacet.json\" target=\"_blank\" rel=\"noopener noreferrer\"><code>SymlinksDatasetFacet</code></a>, this naming conflict could break the lineage graph. Symlinks both provide alternative dataset names as a workaround in such cases and contain extra information about the datasets.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"job-namespaces\">Job Namespaces<a href=\"#job-namespaces\" class=\"hash-link\" aria-label=\"Direct link to Job Namespaces\" title=\"Direct link to Job Namespaces\">​</a></h3><p>We’ve seen that for datasets the namespace is determined by the data source. But jobs are a different animal, so their namespaces are also different. How is a job’s namespace derived? </p><p>As in the case of datasets, the unique naming of jobs is essential, and a job’s unique name consists of a namespace and name. Unlike datasets, jobs descend from schedulers, not data sources. Also unlike datasets, jobs are reducible: a job is composed of executions, or runs (as you can see from the “Historial de Ejecuciones” tab – if you were to take the new language switcher for a spin and select Spanish, that is!).</p><p><img loading=\"lazy\" alt=\"Historial de Ejecuciones Tab\" src=\"/assets/images/historial_de_ejecuciones-2e9e7921c41ab54cea30a16bef1b3b59.png\" width=\"815\" height=\"440\" class=\"img_ev3q\"></p><p>Consulting <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/spec/Naming.md\" target=\"_blank\" rel=\"noopener noreferrer\">the spec</a>, we find more detail about the naming of jobs:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Jobs have a name that is unique to them in their namespace by construction.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">The Namespace is the root of the naming hierarchy. The job name is constructed to identify the job within that namespace.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Example:  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Airflow:  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Namespace: the namespace is assigned to the airflow instance. Ex: airflow-staging, airflow-prod</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Job: each task in a DAG is a job. name: {dag name}.{task name}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">* Spark:  </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Namespace: the namespace is provided as a configuration parameter as in airflow. If there's a parent job, we use the same namespace, otherwise it is provided by configuration.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Spark app job name: the spark.app.name</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * Spark action job name: {spark.app.name}.{node.name}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>So, while for datasets it’s all about the datasource, for jobs it’s all about the scheduler. And the <code>ParentRun</code> facet makes tracking job namespaces possible.</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"run\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"runId\": \"run_uuid\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"job\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"namespace\": \"job_namespace\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"name\": \"job_name\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>For all events, if a parent job exists, the facet’s <code>namespace</code> value is used to assign a namespace. Otherwise, one is provided by configuration.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-the-point\">What's the Point?<a href=\"#whats-the-point\" class=\"hash-link\" aria-label=\"Direct link to What's the Point?\" title=\"Direct link to What's the Point?\">​</a></h3><p>But why bother with dataset namespaces in the first place? One answer to this question gets to what is, for some users, a primary value proposition of OpenLineage. A common use case for lineage collection involves tracking dataset access and transformation across jobs and teams in an organization – for monitoring the use of PII, for example. Tags are supported by OpenLineage and can be used to meet this need, but, depending on how an organization’s ecosystem is constructed, namespaces can also help with this common governance use case.</p><p>Let’s explore a simple example constructed using the <a href=\"https://openlineage.io/docs/client/python/\" target=\"_blank\" rel=\"noopener noreferrer\">Python client</a>. Imagine that a library’s website has two components, a catalog and a blog, and that both features access the same user and profile tables, both of which contain PII.</p><p><img loading=\"lazy\" alt=\"Website Schematic\" src=\"/assets/images/website_schematic-329c636ec954fafc250d831d4d99ee77.png\" width=\"592\" height=\"346\" class=\"img_ev3q\"></p><p>In the spec, a dataset is unique only within a namespace – not across multiple namespaces – so a number of different graphs are possible depending on how the datasets are produced and accessed across an organization. </p><p>For example, if for some reason the <code>users</code> and <code>profiles</code> tables shared two <em>different</em> data sources, the tables would belong to two different namespaces (let’s call them <code>catalog_project</code> and <code>blog_project</code>). While not a typical scenario, this would result in two different, uncluttered graphs of the multiple flows making use of the shared datasets:</p><p><img loading=\"lazy\" alt=\"Catalog with Different Namespaces\" src=\"/assets/images/catalog_with_different_namespaces-778b97792fcc838bd0e4515598732965.png\" width=\"547\" height=\"454\" class=\"img_ev3q\"></p><p><img loading=\"lazy\" alt=\"Blog with Different Namespaces\" src=\"/assets/images/blog_with_different_namespaces-8d681152f107107a1f1d21ad06c3e0c0.png\" width=\"547\" height=\"454\" class=\"img_ev3q\"></p><p>The reason for the simplicity? The <code>users</code> and <code>profiles</code> tables belong to <em>both</em> the <code>catalog_project</code> and <code>blog_project</code> namespaces.</p><p>A more typical scenario might involve single versions of the tables being produced by one data source, which would assign them to a single OpenLineage namespace. Ironically, a simpler approach like this results in a more complicated visualization. Notice that the graph remains the same regardless of the namespace selected:</p><p><img loading=\"lazy\" alt=\"Catalog with One Namespace\" src=\"/assets/images/catalog_with_one_namespace-deabce9bc090beb97e70a7bccb2b35d4.png\" width=\"572\" height=\"534\" class=\"img_ev3q\"></p><p><img loading=\"lazy\" alt=\"Blog with One Namespace\" src=\"/assets/images/blog_with_one_namespace-0566ae8a3a3096f0dccfad9df2906c71.png\" width=\"555\" height=\"534\" class=\"img_ev3q\"></p><p>One advantage of this architecture is that it results in graphs making clear that the datasets containing PII are shared by the two jobs. Depending on an organization’s needs, developers might also find it more convenient to be able to see both jobs and their shared datasets in the same graph.</p><p>A third scenario might involve the isolation of PII by the use of a dedicated database and, by extension, a dedicated namespace (e.g., <code>user_data</code>). In the resulting visualization, the job views above remain the same, but the shared datasets containing PII are now collected in the <code>user_data</code> namespace on the datasets page of the Marquez UI:</p><p><img loading=\"lazy\" alt=\"Datasets in Dedicated Namespace\" src=\"/assets/images/pii_namespace-a288ba2603f8a689491de9a58c61a8fc.png\" width=\"555\" height=\"534\" class=\"img_ev3q\"></p><p>Namespaces offer organizations a range of insights into how their teams are accessing and transforming sensitive data.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-to-learn-more\">How to Learn More<a href=\"#how-to-learn-more\" class=\"hash-link\" aria-label=\"Direct link to How to Learn More\" title=\"Direct link to How to Learn More\">​</a></h3><p>If you’re new to OpenLineage and want to check out namespaces in action, a good entry point is the <a href=\"https://openlineage.io/docs/getting-started\" target=\"_blank\" rel=\"noopener noreferrer\">Getting Started guide</a>. There you can learn about the core model, collect run-level metadata using <a href=\"https://marquezproject.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a> as the <a href=\"https://github.com/OpenLineage/OpenLineage#scope\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP backend</a>, and explore lineage in the Marquez UI.</p><p>Helpful resources for learning more about the namespaces include the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/spec\" target=\"_blank\" rel=\"noopener noreferrer\">spec</a>, where <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/spec/Naming.md\" target=\"_blank\" rel=\"noopener noreferrer\">Naming.md</a> is the Rosetta stone for namespace construction and naming conventions in the project.</p><p>We also welcome contributions to the project. One of the existing <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration\" target=\"_blank\" rel=\"noopener noreferrer\">integrations</a> might be a good place to start. Our growing list of partners includes Airflow, dbt, Dagster and Flink.</p><p>Sound fun? Check out the <a href=\"https://github.com/MarquezProject/marquez/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">new contributor guide</a> to get started. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"acknowledgments\">Acknowledgments<a href=\"#acknowledgments\" class=\"hash-link\" aria-label=\"Direct link to Acknowledgments\" title=\"Direct link to Acknowledgments\">​</a></h3><p>Ross Turk (<a href=\"https://github.com/rossturk\" target=\"_blank\" rel=\"noopener noreferrer\">@rossturk</a>) and Paweł Leszczyński (<a href=\"https://github.com/pawel-big-lebowski\" target=\"_blank\" rel=\"noopener noreferrer\">@pawel-big-lebowski</a>) contributed valuable feedback and suggestions. Any faults are the author's own.</p>",
            "url": "https://openlineage.io/blog/whats-in-a-namespace",
            "title": "What's in a Namespace?",
            "summary": "Namespaces enable powerful insights into distributed workflows.",
            "date_modified": "2023-01-13T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/manta-integration",
            "content_html": "<p>Adopting OpenLineage as part of our portfolio allows MANTA to bring detailed run-time lineage to our customers.</p><p>Here at <a href=\"https://getmanta.com/?utm_source=partner&amp;utm_medium=referral&amp;utm_campaign=OpenLineage\" target=\"_blank\" rel=\"noopener noreferrer\">MANTA</a>, we are very excited to be working closely with <a href=\"https://openlineage.io/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage</a> and, more importantly, with the OpenLineage Community.  As a leader in lineage analysis, we see first-hand the complexity required to achieve effective lineage, and the benefits of having an accepted standard for the sharing of operational lineage metadata. OpenLineage moves everything in the direction of enhanced interoperability, and helps to ensure that enterprises have maximum flexibility for current and future tool selection.  </p><p>Adopting OpenLineage as part of our portfolio allows MANTA to bring detailed run-time lineage to our customers, many of whom are enterprise organizations and need this level of granularity. This is especially important for new technologies such as <a href=\"https://airflow.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Apache Airflow</a>, whose integration with OpenLineage continues to evolve.  Apache Airflow, as an example, is increasingly being utilized by our customers as part of their process orchestration portfolio; as such, these companies need lineage coverage for these operations. </p><p>Having a recognized industry standard for lineage capture and reporting is an enabler for enhanced metadata management and governance. OpenLineage helps to ensure increased consistency in pipeline analysis, especially as more and more solutions appear in the Cloud, and in the general marketplace, for the transformation, enrichment, and overall movement of information through new and future dataflows. Vendors like MANTA will continue to offer creative and purposeful solutions that answer key questions and meet the end-to-end requirements of the business. For selected technologies, OpenLineage enables us to do this faster and simpler.   </p><p>Eighteen months ago, we started our investigation into OpenLineage. After working with various customers earlier this year, we decided to double down on our investment and get more involved with the OpenLineage Community.  Throughout our journey, we’ve found this growing community to be welcoming, helpful, and collaborative. MANTA is pleased to contribute however we can to this important open source project.  Are you ready to join?</p><p>For more information about MANTA's data lineage solution, visit <a href=\"https://getmanta.com/?utm_source=partner&amp;utm_medium=referral&amp;utm_campaign=OpenLineage\" target=\"_blank\" rel=\"noopener noreferrer\">our website</a>.</p><p>To learn more about contributing to OpenLineage, check out the project's <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">new contributor guide</a>.</p>",
            "url": "https://openlineage.io/blog/manta-integration",
            "title": "At Manta, OpenLineage Opens Doors to New Insights",
            "summary": "Adopting OpenLineage as part of our portfolio allows MANTA to bring detailed run-time lineage to our customers.",
            "date_modified": "2022-10-31T00:00:00.000Z",
            "author": {
                "name": "Ernie Ostic"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/extractors",
            "content_html": "<p>Built-in support for custom extractors makes OpenLineage a highly adaptable solution for pipelines that use Airflow.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"overview\">Overview<a href=\"#overview\" class=\"hash-link\" aria-label=\"Direct link to Overview\" title=\"Direct link to Overview\">​</a></h3><p>Airflow is built around operators, each having a different function and requiring a different approach to lineage. The OpenLineage Airflow integration detects which Airflow operators your DAG is using and extracts lineage data from them using extractors.</p><p>The community has already authored a number of extractors to support Airflow’s Great Expectations, BigQuery, Python, Postgres, SQL and Bash operators (and more – you can find all the extractors <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/airflow/openlineage/airflow/extractors\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.) Nevertheless, in the course of pursuing lineage, you may find yourself needing to write custom extractors. </p><p>Some teams use custom extractors to automate repeatable work – using the same code from <code>PythonOperator</code> across a project, for example. Another common use case is that a team needs to use an operator for which a pre-built extractor does not yet exist. Airflow has literally hundreds of operators. </p><p>Built-in support for custom extractors makes OpenLineage a flexible, highly adaptable solution for pipelines that use Airflow for orchestration. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-it-works\">How it works<a href=\"#how-it-works\" class=\"hash-link\" aria-label=\"Direct link to How it works\" title=\"Direct link to How it works\">​</a></h3><p>As we explain in the OpenLineage <a href=\"https://openlineage.io/docs/integrations/airflow/extractor\" target=\"_blank\" rel=\"noopener noreferrer\">docs</a>, custom extractors must be derived from the <code>BaseExtractor</code> class (import it from <code>openlineage.airflow.extractors.base</code>).</p><p>Extractors have methods they can implement: <code>extract</code>, <code>extract_on_complete</code> and <code>get_operator_classnames</code>. Either <code>extract</code> or <code>extract_on_complete</code> is required. The <code>get_operator_classnames</code> method, also required, is for providing a list of operators from which your extractor can get lineage.</p><p>For example:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">@classmethod</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">def get_operator_classnames(cls) -&gt; List[str]:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  return ['PostgresOperator']</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>If the name of the operator matches one of the names on the list, the extractor will be instantiated – using the operator passed to the extractor as a parameter and stored in the <code>self.operator</code> property – and both the <code>extract</code> and <code>extract_on_complete</code> methods will be called. They both return information used by the OpenLineage integration to emit OpenLineage events. The difference is that <code>extract</code> is called before the operator's <code>execute</code> method to generate a <code>START</code> event, while <code>extract_on_complete</code> is called afterward to generate a <code>COMPLETE</code> event. The latter has access to any additional information that the operator leaves behind following execution. A good example of this is the <code>SnowflakeOperator</code>, which sets <code>query_id</code>s after execution.</p><p>Both methods return a <code>TaskMetadata</code> structure:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">@attr.s</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">class TaskMetadata:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    name: str = attr.ib()  # deprecated</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    inputs: List[Dataset] = attr.ib(factory=list)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    outputs: List[Dataset] = attr.ib(factory=list)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    run_facets: Dict[str, BaseFacet] = attr.ib(factory=dict)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_facets: Dict[str, BaseFacet] = attr.ib(factory=dict)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The inputs and outputs are lists of plain <a href=\"https://openlineage.io/docs/client/python\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage datasets</a>.</p><p>The <code>run_facets</code> and <code>job_facets</code> are dictionaries of optional <a href=\"https://openlineage.io/docs/client/python\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JobFacets</code></a> and <a href=\"https://openlineage.io/docs/client/python\" target=\"_blank\" rel=\"noopener noreferrer\"><code>RunFacets</code></a> that accompany a job. For example, you might want to attach a <code>SqlJobFacet</code> if your operator is executing SQL.</p><p>Note: in order for a custom extractor to work, it must be registered first, so the OpenLineage integration can import it. You can read about how to use environment variables to do this <a href=\"https://openlineage.io/docs/integrations/airflow/extractor#registering-custom-extractor\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"example-the-redshiftdataextractor\">Example: the RedshiftDataExtractor<a href=\"#example-the-redshiftdataextractor\" class=\"hash-link\" aria-label=\"Direct link to Example: the RedshiftDataExtractor\" title=\"Direct link to Example: the RedshiftDataExtractor\">​</a></h3><p>In the <code>RedshiftDataExtractor</code>, the <code>extract_on_complete</code> method parses SQL, obtains task <code>stats</code> using the <code>get_facets</code> method of the <code>RedshiftDataDatasetsProvider</code> class, and returns a <code>TaskMetadata</code> instance. We can see usage of a SQL statement, and the connection is provided by an actual operator. </p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">def extract_on_complete(self, task_instance) -&gt; Optional[TaskMetadata]:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        log.debug(f\"extract_on_complete({task_instance})\")</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        job_facets = {\"sql\": SqlJobFacet(self.operator.sql)}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        log.debug(f\"Sending SQL to parser: {self.operator.sql}\")</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        sql_meta: Optional[SqlMeta] = parse(self.operator.sql, self.default_schema)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        log.debug(f\"Got meta {sql_meta}\")</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        try:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            redshift_job_id = self._get_xcom_redshift_job_id(task_instance)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            if redshift_job_id is None:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                raise Exception(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    \"Xcom could not resolve Redshift job id. Job may have failed.\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                )</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        except Exception as e:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            log.error(f\"Cannot retrieve job details from {e}\", exc_info=True)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            return TaskMetadata(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                name=get_job_name(task=self.operator),</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                run_facets={},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                job_facets=job_facets,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            )</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        client = self.operator.hook.conn</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        redshift_details = [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"database\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"cluster_identifier\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"db_user\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"secret_arn\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"region\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        ]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        connection_details = {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            detail: getattr(self.operator, detail) for detail in redshift_details</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        stats = RedshiftDataDatasetsProvider(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            client=client, connection_details=connection_details</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        ).get_facets(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            job_id=redshift_job_id,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            inputs=sql_meta.in_tables if sql_meta else [],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            outputs=sql_meta.out_tables if sql_meta else [],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        )</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        return TaskMetadata(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            name=get_job_name(task=self.operator),</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            inputs=[ds.to_openlineage_dataset() for ds in stats.inputs],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            outputs=[ds.to_openlineage_dataset() for ds in stats.output],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            run_facets=stats.run_facets,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            job_facets={\"sql\": SqlJobFacet(self.operator.sql)},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        )</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"common-issues\">Common issues<a href=\"#common-issues\" class=\"hash-link\" aria-label=\"Direct link to Common issues\" title=\"Direct link to Common issues\">​</a></h3><p>There are two common issues associated with custom extractors. </p><p>First, when the wrong path is provided to <code>OPENLINEAGE_EXTRACTORS</code>, the extractor isn’t imported and OpenLineage events aren’t emitted. The path needs to be exactly the same as the one you are using in your code. Also, make sure that the extractor code is available to import from Airflow’s Python interpreter.</p><p>Second, imports from Airflow can be unnoticeably cyclical. This is due to the fact that OpenLineage code gets instantiated when the Airflow worker itself starts, in contrast to DAG code. OpenLineage extraction can fail as a result. To avoid this issue, make sure that all imports from Airflow are local – in the <code>extract</code> or <code>extract_on_complete</code> methods. If you need imports for type checking, guard them behind <code>typing.TYPE_CHECKING</code>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-to-get-started\">How to get started<a href=\"#how-to-get-started\" class=\"hash-link\" aria-label=\"Direct link to How to get started\" title=\"Direct link to How to get started\">​</a></h3><p>Check out the existing extractors <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/airflow/openlineage/airflow/extractors\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><p>Read the docs about the Airflow integration, including tips on registering and debugging your custom extractor, <a href=\"https://openlineage.io/docs/integrations/airflow/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-to-contribute\">How to contribute<a href=\"#how-to-contribute\" class=\"hash-link\" aria-label=\"Direct link to How to contribute\" title=\"Direct link to How to contribute\">​</a></h3><p>We welcome your contributions! One of our existing <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration\" target=\"_blank\" rel=\"noopener noreferrer\">integrations</a> might be a good place to start. OpenLineage’s growing list of partners includes Airflow, dbt, Dagster and Flink.</p><p>Sounds fun? Check out our <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">new contributor guide</a> to get started.</p>",
            "url": "https://openlineage.io/blog/extractors",
            "title": "Pursuing Lineage from Airflow using Custom Extractors",
            "summary": "Built-in support for custom extractors makes OpenLineage a highly adaptable solution for pipelines that use Airflow.",
            "date_modified": "2022-09-08T00:00:00.000Z",
            "author": {
                "name": "Maciej Obuchowski",
                "url": "https://github.com/mobuchowski"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/operators-and-extractors-technical-deep-dive",
            "content_html": "<p>A technical deep-dive on how the Airflow OSS and OpenLineage OSS projects interact. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"overview\">Overview<a href=\"#overview\" class=\"hash-link\" aria-label=\"Direct link to Overview\" title=\"Direct link to Overview\">​</a></h2><p>Airflow Operators and OpenLineage Extractors have a specific, if quirky, way of working together. Recently, the way they work together has seen a bit of an overhaul, and the new SQL Check Extractors added a new and unique way that the extractors work and interact with operators. In this blog, we'll demystify these relationships.</p><p>Note: This blog post describes the relationships of the operators and extractors only for <code>Airflow&gt;=2.3</code> and <code>OpenLineage&gt;=0.12.0</code>.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"integration\">Integration<a href=\"#integration\" class=\"hash-link\" aria-label=\"Direct link to Integration\" title=\"Direct link to Integration\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-operator-and-the-extractor\">The Operator and the Extractor<a href=\"#the-operator-and-the-extractor\" class=\"hash-link\" aria-label=\"Direct link to The Operator and the Extractor\" title=\"Direct link to The Operator and the Extractor\">​</a></h3><p>Some quick definitions are in order before we continue.</p><p>The Airflow Operator defines a task, which is the unit of work in Airflow. All operators inherit from the <code>BaseOperator</code>, and in addition to taking the arguments of the <code>BaseOperator</code>, they can take arguments specific to the kind of task they are going to perform, such as a specific <code>conn_id</code> to connect to a datasource or a dictionary of checks to perform on that datasource.</p><p>The OpenLineage Extractor is somewhat analogous to the Airflow Operator: it is a unit of work in OpenLineage, which takes the relevant input and output data from an operator, creates OpenLineage data facets, and sends those facets to be displayed in Marquez or Datakin. Each extractor maps to a specific set of operators via the <code>get_operator_classnames()</code> class method. The extractors all inherit from a <code>BaseExtractor</code>, which defines a few abstract methods, importantly <code>execute()</code> and <code>execute_on_complete()</code>.</p><p>Briefly, the two other major OpenLineage constructs in this story are the <code>ExtractorManager</code>, which is responsible for identifying the correct extractor to use, and the <code>Listener</code>, which is the connecting piece between OpenLineage and Airflow.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"interplay\">Interplay<a href=\"#interplay\" class=\"hash-link\" aria-label=\"Direct link to Interplay\" title=\"Direct link to Interplay\">​</a></h3><p>Next, we'll walk through what happens when an Airflow instance with OpenLineage support runs a DAG, and how that operator data makes it to the Marquez or Datakin UI.</p><p>First, a DAG is born. When the DAG is run, the scheduler runs the operators in order by calling their <code>execute()</code> method. This is the first time the OpenLineage <code>Listener</code> responds. Triggered by the <code>execute()</code> event, it calls the <code>Manager</code>, which identifies the correct extractor based on the <code>task_id</code>. Then the <code>Extractor</code>'s <code>execute()</code> method is run, potentially returning lineage data in the form of a metadata object. When the operator is done--either succeeded or failed--, the <code>Listener</code> calls the <code>Manager</code> again, and this time the <code>Manager</code> triggers the <code>Extractor</code>'s <code>execute_on_complete()</code> method, which may also return metadata based on the result of the task. The metadata object is then sent to Marquez or Datakin, where the data is displayed.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"sql-check-operatorsextractors\">SQL Check Operators/Extractors<a href=\"#sql-check-operatorsextractors\" class=\"hash-link\" aria-label=\"Direct link to SQL Check Operators/Extractors\" title=\"Direct link to SQL Check Operators/Extractors\">​</a></h3><p>The <code>SQLCheckOperators</code> and <code>SQLCheckExtractors</code> work slightly differently than the interplay outlined above. The biggest difference is that the <code>SQLCheckExtractors</code> all inherit from a <code>BaseSqlCheckExtractor</code>, which in turn <em>dynamically</em> inherits from the appropriate extractor at run time. The appropriate extractor is always some existing SQL database extractor. The <code>BaseSqlCheckExtractor</code> itself only implements the <code>extract_on_complete()</code> method by determining whether the super class’s <code>extract()</code> or <code>extract_on_complete()</code> method should be run to gather metadata. The <code>_get_input_facets()</code> methods are all implemented by the particular check extractors, and are called in the super class’s <code>extract()</code> or <code>extract_on_complete()</code> method.</p><p>The dynamic inheritance is done by defining the <code>SQLCheckExtractors</code> inside the <code>get_check_extractors()</code> function that takes a class as a parameter and passes that class to the constructor of the <code>BaseSqlCheckExtractor</code>. When a <code>SQLCheckOperator</code> is run, and the <code>Manager</code> searches for the correct extractor to use, it calls <code>instantiate_abstract_extractors()</code> with the given task instance.</p><p>In this function, the task instance is used to find the correct extractor that will be the superclass of the <code>BaseSqlCheckOperator</code>. To do this, the function uses a set of hard-coded operator names whose extractors will dynamically inherit from the found superclass. Currently, this list is the set of <code>SQLCheckOperator</code>s, which corresponds to a dictionary of extractor keys and <code>conn_type</code> values. The given task’s class name is checked against the set of operator names, and if it is in the set, a loop compares the existing extractor’s corresponding <code>conn_type</code> from the aforementioned dictionary to the given task instance’s <code>conn_type</code> retrieved from Airflow connections. If there’s a match, the <code>get_check_extractors()</code> method is called with the matched extractor, instantiating all the operators with the correct superclass.</p><p>The <code>SQLCheckExtractors</code> only rely on the <code>extract_on_complete()</code> method, as the values needed from the operators, i.e. the results of the query and the success or failures of the checks, are only available after the operator completes.</p>",
            "url": "https://openlineage.io/blog/operators-and-extractors-technical-deep-dive",
            "title": "How Operators and Extractors Work Under-the-Hook",
            "summary": "A technical deep-dive on how the Airflow OSS and OpenLineage OSS projects interact.",
            "date_modified": "2022-09-07T00:00:00.000Z",
            "author": {
                "name": "Benji Lampel",
                "url": "https://www.github.com/denimalpaca"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/column-lineage",
            "content_html": "<p>Column-level lineage helps organizations navigate a complex regulatory landscape.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"overview--background\">Overview &amp; background<a href=\"#overview--background\" class=\"hash-link\" aria-label=\"Direct link to Overview &amp; background\" title=\"Direct link to Overview &amp; background\">​</a></h3><p>Long one of our most requested new features, column-level lineage was added to the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/spark\" target=\"_blank\" rel=\"noopener noreferrer\">Spark integration</a> with the release of <a href=\"https://github.com/OpenLineage/OpenLineage/releases/tag/0.9.0\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage 0.9.0</a>. Project committer Paweł Leszczyński (<a href=\"https://github.com/pawel-big-lebowski\" target=\"_blank\" rel=\"noopener noreferrer\">@pawel-big-lebowski</a>) authored the relevant pull requests (<a href=\"https://github.com/OpenLineage/OpenLineage/pull/645\" target=\"_blank\" rel=\"noopener noreferrer\">#645</a>, <a href=\"https://github.com/OpenLineage/OpenLineage/pull/698\" target=\"_blank\" rel=\"noopener noreferrer\">#698</a>, <a href=\"https://github.com/OpenLineage/OpenLineage/pull/738\" target=\"_blank\" rel=\"noopener noreferrer\">#738</a> and <a href=\"https://github.com/OpenLineage/OpenLineage/pull/772\" target=\"_blank\" rel=\"noopener noreferrer\">#772</a>). In its current form, column-level lineage in OpenLineage is limited to the Spark integration and not yet visible in the <a href=\"https://marquezproject.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a> UI. But this is only the first step in a broader, ongoing project to implement the feature across the project, and we’d love your help. </p><p>Column-level lineage is a worthy pursuit. It dramatically extends the reach of OpenLineage’s metadata capture, providing finely grained information about datasets' dependencies. As Paweł and project lead Julien Le Dem (<a href=\"https://github.com/julienledem\" target=\"_blank\" rel=\"noopener noreferrer\">@julienledem</a>) wrote in the initial proposal, “Not only can we know that a dependency exists, but we are also able to understand which input columns are used to produce output columns. This allows <!-- -->[for]<!-- --> answering questions like ‘Which root input columns are used to construct column x?’”</p><p>Another reason to pursue column-level lineage: the demands of regulatory compliance. Bodies such as the <a href=\"https://gdpr-info.eu/\" target=\"_blank\" rel=\"noopener noreferrer\">GDPR</a>, <a href=\"https://www.hhs.gov/hipaa/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">HIPAA</a>, <a href=\"https://oag.ca.gov/privacy/ccpa\" target=\"_blank\" rel=\"noopener noreferrer\">CCPA</a>, <a href=\"https://www.bis.org/bcbs/\" target=\"_blank\" rel=\"noopener noreferrer\">BCBS</a> and <a href=\"https://www.pcisecuritystandards.org/\" target=\"_blank\" rel=\"noopener noreferrer\">PCI</a> have instituted requirements for data accuracy and integrity that compel companies and organizations to obtain deeper insight into their datasets and pipelines. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-start-with-the-spark-integration\">Why start with the Spark integration?<a href=\"#why-start-with-the-spark-integration\" class=\"hash-link\" aria-label=\"Direct link to Why start with the Spark integration?\" title=\"Direct link to Why start with the Spark integration?\">​</a></h3><p>As Julien and Paweł's proposal <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/proposals/148\" target=\"_blank\" rel=\"noopener noreferrer\">suggests</a>, the Spark integration was a logical starting point for adding column-level lineage. This is so because the integration relies on implementing visitors that traverse a <code>LogicalPlan</code> and extract meaningful information when encountered. These data include outputs and inputs with their schemas (which we were already identifying, in fact). The <code>LogicalPlan</code> also exposes the expressions that derive the output columns from the input columns. They can be inspected to derive column-level lineage. Traversing the <code>LogicalPlan</code> allows for the capturing of all the dependencies required to build column-level lineage.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"a-new-facet-in-the-spec\">A new facet in the spec<a href=\"#a-new-facet-in-the-spec\" class=\"hash-link\" aria-label=\"Direct link to A new facet in the spec\" title=\"Direct link to A new facet in the spec\">​</a></h3><p>In the process of implementing column-level lineage, Paweł and Julien contributed a new facet schema, <code>ColumnLineageDatasetFacet</code>, to the OpenLineage spec. This facet uses fields to relay data points about dependencies. These are properties of items in the <code>InputField</code> property of the facet (<code>namespace</code>, <code>name</code> and <code>field</code>), as well as two human-readable string fields (<code>transformationDescription</code>, <code>transformationType</code>) for conveying information about dataset transformations. The last field, <code>transformationType</code>, may be especially useful for those whose companies or organizations need to track the usage of sensitive personal information.</p><p>An example of a <code>columnLineage</code> facet in the outputs array of a lineage event:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"namespace\": \"{namespace of the outputdataset}\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"name\": \"{name of the output dataset}\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"facets\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"schema\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"fields\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        { \"name\": \"{first column of the output dataset}\", \"type\": \"{its type}\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        { \"name\": \"{second column of the output dataset}\", \"type\": \"{its type}\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"columnLineage\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"{first column of the output dataset}\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"inputFields\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          { \"namespace\": \"{input dataset namespace}\", name: \"{input dataset name}\", \"field\": \"{input dataset column name}\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          ... other inputs</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"transformationDescription\": \"identical\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"transformationType\": \"IDENTITY\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"{second column of the output dataset}\": ...,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-it-works\">How it works<a href=\"#how-it-works\" class=\"hash-link\" aria-label=\"Direct link to How it works\" title=\"Direct link to How it works\">​</a></h3><p>As we’ve seen, column-level lineage is being collected via the new <code>columnLineage</code> dataset facet. For each output, this facet contains a list of the output's fields along with the input fields used to create it. The input fields are identified by a <code>namespace</code>, <code>name</code> and <code>field</code>. But how is OpenLineage obtaining the data about dependencies that the facet relays?</p><p>In PR <a href=\"https://github.com/OpenLineage/OpenLineage/pull/698\" target=\"_blank\" rel=\"noopener noreferrer\">#698</a>, Paweł describes the mechanism this way:</p><ol><li>The core mechanism first gets an output schema and logical plan as inputs.</li><li>Then, the <code>OutputFieldsCollector</code> class traverses the plan to gather the outputs. Outputs can be extracted from Aggregate or Project, and each output field has an <code>ExprId</code> (expression ID) that is attached from the plan.</li><li>Next, the <code>InputFieldsCollector</code> class is used to collect inputs that can be extracted from <code>DataSourceV2Relation</code>, <code>DataSourceV2ScanRelation</code>, <code>HiveTableRelation</code> or <code>LogicalRelation</code>. Each input field takes its <code>ExprId</code> from the plan, and each input is identified by a <code>DatasetIdentifier</code>, which means it contains the name and namespace of a dataset and an input field.</li><li>Finally, the <code>FieldDependenciesCollector</code> traverses the plan to identify dependencies between different <code>ExprIds</code>. Dependencies map parent expressions to children expressions. This is used to identify the inputs used to evaluate certain outputs.</li></ol><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-next\">What’s next?<a href=\"#whats-next\" class=\"hash-link\" aria-label=\"Direct link to What’s next?\" title=\"Direct link to What’s next?\">​</a></h3><p>Work on extending column-level lineage in the project is ongoing. For example, project committer Will Johnson (<a href=\"https://github.com/wjohnson\" target=\"_blank\" rel=\"noopener noreferrer\">@wjohnson</a>) has opened a PR (<a href=\"https://github.com/OpenLineage/OpenLineage/issues/963\" target=\"_blank\" rel=\"noopener noreferrer\">#963</a>) to add support for common dataframe operations not covered due to the initial focus on Spark. As Will writes in the PR,</p><blockquote><p>Currently, the Column Lineage Input Field Collectors work mainly for Spark SQL operations and Data Source V2.\nThis leaves out normal dataframe operations like inserting into HDFS without the use of a Hive table.\nColumn Lineage should support this scenario as many users will want to see column lineage for operations outside of SQL and Hive Metastore backed tables.</p></blockquote><p>Also, Paweł has written enhancements that will <a href=\"https://github.com/OpenLineage/OpenLineage/issues/993\" target=\"_blank\" rel=\"noopener noreferrer\">enable column-level lineage in the case of altered table and column names</a> and <a href=\"https://github.com/OpenLineage/OpenLineage/issues/738\" target=\"_blank\" rel=\"noopener noreferrer\">allow one to extend column-level lineage without contributing to OpenLineage</a> (to avoid exposing proprietary code, for example). </p><p>Meanwhile, over in Marquez, Julien has contributed a <a href=\"https://github.com/MarquezProject/marquez/issues/2045\" target=\"_blank\" rel=\"noopener noreferrer\">proposal</a> to add a column-level endpoint to the project that would leverage OpenLineage’s <code>ColumnLineageDatasetFacet</code>. This approach would add column lineage to an existing endpoint by embedding the <code>columnLineage</code> facet in the data section of the <code>DATASET</code> nodes.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-can-i-contribute\">How can I contribute?<a href=\"#how-can-i-contribute\" class=\"hash-link\" aria-label=\"Direct link to How can I contribute?\" title=\"Direct link to How can I contribute?\">​</a></h3><p>We welcome contributions to this ongoing effort at implementing column-level lineage in OpenLineage! If you’re interested in contributing, one of our existing <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration\" target=\"_blank\" rel=\"noopener noreferrer\">integrations</a> might be a good place to start. OpenLineage’s growing list of integrations includes Airflow, dbt, Dagster and Flink.</p><p>Sounds fun? Check out our <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">new contributor guide</a> to get started.</p>",
            "url": "https://openlineage.io/blog/column-lineage",
            "title": "The Current State of Column-level Lineage",
            "summary": "Column-level lineage helps organizations navigate a complex regulatory landscape.",
            "date_modified": "2022-09-02T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/python-client",
            "content_html": "<p>The Python client enables users to create custom integrations.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"introduction\">Introduction<a href=\"#introduction\" class=\"hash-link\" aria-label=\"Direct link to Introduction\" title=\"Direct link to Introduction\">​</a></h3><p>Thanks to the <a href=\"https://github.com/OpenLineage/OpenLineage\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage</a> community’s active work on <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration\" target=\"_blank\" rel=\"noopener noreferrer\">integrations</a>, the pursuit of lineage is getting more efficient and effective all the time. And our growing list of partners and adapters makes OpenLineage plenty powerful out of the box. At the same time, the nature of the data engineering field means that lineage capture is an ongoing process – simply put, the work of lineage is never done.</p><p>Hence, as lineage capture becomes integral to your pipelines, situations can arise that require new custom integrations. Enter the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/client/python\" target=\"_blank\" rel=\"noopener noreferrer\">Python client</a>, one of two built-in clients included in the project (the other being the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/client/java\" target=\"_blank\" rel=\"noopener noreferrer\">Java client</a>). The OpenLineage spec is defined using JSON schema, but we have created these clients so that new integrations do not have to reinvent the wheel. </p><p>OpenLineage’s Python client enables the creation of lineage metadata events with Python code. The core data structures currently offered by the client include the <code>RunEvent</code>, <code>RunState</code>, <code>Run</code>, <code>Job</code>, <code>Dataset</code>, and <code>Transport</code> classes. These either configure or collect data for the emission of lineage events.</p><p>In the history of the project, the client has been useful in helping us avoid unnecessary duplication of code. It is also integral to OpenLineage’s existing integrations, serving as the basis of the Airflow and dbt integrations, for example. It could also act as the foundation of your own custom integration should you need to write one. (Another use case: tests for a new Airflow extractor.)</p><p>For this reason, an existing integration can serve as a useful example of how to use the client to write a new integration (and, hopefully, <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">contribute it</a> back to the project!). What follows is an overview of the Python client and the dbt integration, which uses the Python client. You’ll see how the client receives metadata from dbt to make it available to a consumer of OpenLineage such as Microsoft Purview, Amundsen, Astronomer, Egeria or Marquez.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"python-client-data-structures\">Python Client Data Structures<a href=\"#python-client-data-structures\" class=\"hash-link\" aria-label=\"Direct link to Python Client Data Structures\" title=\"Direct link to Python Client Data Structures\">​</a></h3><p>The core structures of the client organize metadata about the foundational objects of the OpenLineage spec: runs, jobs and datasets.</p><p>A <code>dataset</code> is a class consisting of a <code>name</code>, <code>namespace</code> and, optionally, <code>facets</code> array:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">@attr.s</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">class Dataset:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    namespace: str = attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    name: str - attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    Facets: Dict = attr.ib(factory=dict)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The same goes for a <code>job</code>:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">@attr.s</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">class Job:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    namespace: str = attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    name: str - attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    Facets: Dict = attr.ib(factory=dict)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>A <code>RunEvent</code> sends the time, state, job, run, producer, input and output information needed to construct an OpenLineage job run event:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">@attr.s </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">class RunEvent:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    eventType: RunState = attr.ib(validator=attr.validators.in_(RunState))</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    eventTime: str = attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    run: Run = attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job: Job = attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    producer: str = attr.ib()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    inputs: Optional[List[Dataset]] = attr.ib(factory=list)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    outputs: Optional[List[Dataset]] = attr.ib(factory=list)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-openlineage-dbt-integration\">The OpenLineage-dbt Integration<a href=\"#the-openlineage-dbt-integration\" class=\"hash-link\" aria-label=\"Direct link to The OpenLineage-dbt Integration\" title=\"Direct link to The OpenLineage-dbt Integration\">​</a></h3><p>At a high level, the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/dbt\" target=\"_blank\" rel=\"noopener noreferrer\">dbt integration</a> uses the Python client to push metadata to the OpenLineage backend. The metadata it makes available comprises the run lifecycle, including any dataset inputs and outputs accessed during a job run.</p><p>In the <code>dbt-ol</code> <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/integration/dbt/scripts/dbt-ol\" target=\"_blank\" rel=\"noopener noreferrer\">script</a>, the integration uses the project’s <code>ParentRunMetadata</code> and <code>DbtArtifactProcessor</code> classes, both of which can be found in the OpenLineage common integration, to parse metadata from the dbt <code>manifest</code> and <code>run_result</code> in order to produce OpenLineage events:  </p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">from openlineage.common.provider.dbt import DbtArtifactProcessor, ParentRunMetadata</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">#…</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">if parent_id:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    parent_namespace, parent_job_name, parent_run_id = parent_id.split(‘/’)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    parent_run_metadata = ParentRunMetadata(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        run_id=parent_run_id,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        job_name=parent_job_name,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        job_namespace=parent_namespace</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    )</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">processor = DbtArtifactProcessor(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    producer=PRODUCER,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    target=target,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_namespace=job_namespace,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    project_dir=project_dir,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    profile_name=profile_name,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    logger=logger</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The integration uses a wrapper for dbt runs because start and complete events are not emitted until execution concludes:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">dbt_run_event = dbt_run_event_start(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_name=f“dbt-run-{processor.project[‘name’]}”,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_namespace=job_namespace,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    parent_run_metadata=parent_run_metadata</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">dbt_run_metadata = ParentRunMetadata(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    run_id=dbt_run_event.run.runId,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_name=dbt_run_event.job.name,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_namespace=dbt_run_event.job.namespace</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">processor.dbt_run_metadata = dbt_run_metadata</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>After executing dbt, the script parses the metadata using the processor and emits a run event:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">events = processor.parse().events()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">client.emit(dbt_run_event_end(</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    run_id=dbt_run_metadata.run_id,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_namespace=dbt_run_metadata.job_namespace,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    job_name=dbt_run_metadata.job_name,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    parent_run_metadata=parent_run_metadata</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    ))</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">logger.info(f\"Emitted {len(events) + 2} openlineage events\")</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"additional-resources\">Additional Resources<a href=\"#additional-resources\" class=\"hash-link\" aria-label=\"Direct link to Additional Resources\" title=\"Direct link to Additional Resources\">​</a></h3><p>Check out the source code here: <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/client/python\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/OpenLineage/OpenLineage/tree/main/client/python</a>.</p><p>Interested in contributing to the project? Read our guide for new contributors: <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/OpenLineage/OpenLineage/blob/main/CONTRIBUTING.md</a>.</p><p>Join us on Slack: <a href=\"http://bit.ly/OpenLineageSlack\" target=\"_blank\" rel=\"noopener noreferrer\">http://bit.ly/OpenLineageSlack</a>.</p><p>Attend a community meeting: <a href=\"https://bit.ly/OLwikitsc\" target=\"_blank\" rel=\"noopener noreferrer\">https://bit.ly/OLwikitsc</a>.</p>",
            "url": "https://openlineage.io/blog/python-client",
            "title": "The Python Client -- the Foundation of OpenLineage Integrations",
            "summary": "The Python client enables users to create custom integrations.",
            "date_modified": "2022-07-29T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/openlineage-microsoft-purview",
            "content_html": "<p>A new collaboration between Microsoft and OpenLineage is making lineage extraction possible for Azure Databricks and Microsoft Purview users.</p><p>A new collaboration between Microsoft and OpenLineage is making lineage extraction possible for Azure Databricks and Microsoft Purview users. Thanks to a robust OpenLineage Spark integration, users can both extract and visualize lineage from their Databricks notebooks and jobs inside Microsoft Purview. This blog post shares the history and future of this exciting open-source project, describes the solution, and shows you how to get started. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"summary\">Summary<a href=\"#summary\" class=\"hash-link\" aria-label=\"Direct link to Summary\" title=\"Direct link to Summary\">​</a></h3><ul><li><a href=\"https://azure.microsoft.com/en-us/services/purview/\" target=\"_blank\" rel=\"noopener noreferrer\">Microsoft Purview</a> provides a comprehensive platform to populate native and custom data lineage metadata from on-prem, OSS, SaaS, and multi-cloud data systems. </li><li>The <a href=\"https://github.com/microsoft/Purview-ADB-Lineage-Solution-Accelerator\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Databricks to Microsoft Purview Solution Accelerator</a> takes advantage of the robust Spark integration inside <a href=\"https://github.com/OpenLineage/OpenLineage\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage</a> and translates OpenLineage events into Microsoft Purview native assets supporting:<ul><li>Azure Data Lake Gen 2</li><li>Azure Blob Storage</li><li>Azure SQL</li><li>Azure Synapse SQL Pools</li></ul></li><li>Customers of Azure Databricks and Microsoft Purview can <a href=\"https://github.com/microsoft/Purview-ADB-Lineage-Solution-Accelerator\" target=\"_blank\" rel=\"noopener noreferrer\">try the solution today</a> by following the <a href=\"https://github.com/microsoft/Purview-ADB-Lineage-Solution-Accelerator/blob/main/deploy-demo.md\" target=\"_blank\" rel=\"noopener noreferrer\">demo instructions</a> or <a href=\"https://github.com/microsoft/Purview-ADB-Lineage-Solution-Accelerator/blob/main/deploy-base.md\" target=\"_blank\" rel=\"noopener noreferrer\">connector only instructions</a>.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-is-microsoft-purview\">What is Microsoft Purview?<a href=\"#what-is-microsoft-purview\" class=\"hash-link\" aria-label=\"Direct link to What is Microsoft Purview?\" title=\"Direct link to What is Microsoft Purview?\">​</a></h3><p><a href=\"https://docs.microsoft.com/en-us/azure/purview/overview\" target=\"_blank\" rel=\"noopener noreferrer\">Microsoft Purview</a> provides an ambient data governance solution that helps you unify and manage your data wherever it exists – on-premises, in the cloud, or on a software-as-a-service (SaaS) platform. With Microsoft Purview, you can:</p><ul><li>create a holistic, up-to-date map of your data landscape with automated data discovery, sensitive data classification, and end-to-end data lineage.</li><li>enable data curators to manage and secure your data estate.</li><li>empower data consumers to find valuable, trustworthy data.</li></ul><p><img loading=\"lazy\" alt=\"High-level overview\" src=\"/assets/images/high-level-overview-741f81b4ac0048b3c4d8a1aba1f372ec.png\" width=\"1200\" height=\"481\" class=\"img_ev3q\">\nFigure 1. Microsoft Purview is an ambient data governance platform for an enterprise.</p><p>Microsoft Purview automates data discovery by providing data scanning and classification as a service for assets across your data estate. Microsoft Purview integrates metadata and descriptions of discovered data assets into a holistic map of your data ecosystem. Layered on this map are purpose-built apps that create environments for data discovery, policy management, and insights into your data landscape.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"data-lineage-in-microsoft-purview\">Data Lineage in Microsoft Purview<a href=\"#data-lineage-in-microsoft-purview\" class=\"hash-link\" aria-label=\"Direct link to Data Lineage in Microsoft Purview\" title=\"Direct link to Data Lineage in Microsoft Purview\">​</a></h3><p>Organizations need data to conduct business, and they need trustworthy data to perform analysis and make key decisions. Data lineage and provenance provide insights into data pedigree, which relates to operational information, runtime analysis, historical lineage, and ownership information. Users rely on pedigree when taking insights from data. Critical scenarios involving root cause analysis, impact analysis, quality control, compliance, and audit tracing are served by data lineage and provenance.</p><p><a href=\"https://docs.microsoft.com/en-us/azure/purview/catalog-lineage-user-guide\" target=\"_blank\" rel=\"noopener noreferrer\">Data Lineage</a> in Microsoft Purview is a core platform capability that populates the Microsoft Purview Data Map with data movement and transformations across systems. With the backing of <a href=\"https://atlas.apache.org/#/\" target=\"_blank\" rel=\"noopener noreferrer\">Apache Atlas 2.2</a>, lineage is captured as it flows in the enterprise and stitched without gaps irrespective of its source. Data lineage in Microsoft Purview enables data analysts and data stewards to conduct root cause analysis, troubleshoot, and perform impact analysis of data moving upstream and downstream in data estates. With a combined platform and interactive lineage visualization tool, data investigations related to quality, trust, and compliance can be self-served in a few clicks rather than requested from a third party.</p><p>Microsoft Purview has native data lineage support for <a href=\"https://docs.microsoft.com/en-us/azure/purview/catalog-lineage-user-guide#lineage-collection\" target=\"_blank\" rel=\"noopener noreferrer\">20+ sources</a>, many of which are integrated at engine runtimes. For example, data lineage is pushed from Azure Data Factory when pipelines are run. This deep integration allows Microsoft Purview to capture operational metadata such as job start/end times, the number of rows impacted, job run status and more. In addition to native support, the <a href=\"https://docs.microsoft.com/en-us/rest/api/purview/catalogdataplane/lineage\" target=\"_blank\" rel=\"noopener noreferrer\">open APIs</a> can be used to integrate with enterprise systems to support custom lineage.</p><img loading=\"lazy\" src=\"./screenshot.gif\" style=\"padding:3rem\" class=\"img_ev3q\"><p>Figure 2. Native data lineage visualization in Microsoft Purview.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"openlineage--microsoft\">OpenLineage + Microsoft<a href=\"#openlineage--microsoft\" class=\"hash-link\" aria-label=\"Direct link to OpenLineage + Microsoft\" title=\"Direct link to OpenLineage + Microsoft\">​</a></h3><p>This integration came about because Microsoft Purview sought a lineage solution for Azure Databricks users, ideally one that would support all Azure data repository types, from Azure Blob Storage to Azure SQL. The team that took on this challenge was the Early Access Engineering (EAE) team, a group of data experts at Microsoft who forge competitive differentiation and value by using groundbreaking technology and features before they become available to the general enterprise landscape. </p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"a-history-of-contributions-to-openlineage\">A History of Contributions to OpenLineage<a href=\"#a-history-of-contributions-to-openlineage\" class=\"hash-link\" aria-label=\"Direct link to A History of Contributions to OpenLineage\" title=\"Direct link to A History of Contributions to OpenLineage\">​</a></h4><p>The EAE team at Microsoft has a long history of contributions to open source projects in general and to OpenLineage in particular. In December of 2021, Will Johnson contributed a <a href=\"https://github.com/OpenLineage/OpenLineage/pull/425\" target=\"_blank\" rel=\"noopener noreferrer\">PR</a> to OpenLineage to add support for arbitrary parameters in the OpenLineage URL. This change supported key-based authentication via URL and eased the process of sending metadata from OpenLineage to repositories other than <a href=\"https://github.com/MarquezProject\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a>, OpenLineage’s sister project. This in turn supported additional integrations and collaboration and has helped to increase adoption of the OpenLineage standard.</p><p>Over the course of seven months, the Microsoft team contributed eight pull requests to enable:</p><ul><li>better support for the Azure Blob File System (Azure Data Lake Gen 2).</li><li>use of an Azure Function as the lineage endpoint.</li><li>lineage extraction for <a href=\"https://docs.microsoft.com/en-us/azure/databricks/data/data-sources/azure/synapse-analytics\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Synapse</a> as a data source.</li><li>extraction of Databricks environment properties such as notebook paths and job ids.</li></ul><p>Contributing open source integrations to OpenLineage benefits not only Microsoft Purview but also the data landscape as a whole. Collaborations like this one help increase adoption of the OpenLineage standard across the industry, which gets us closer to the single standard we need for consistently powerful and reliable lineage across the wide diversity of tooling in today’s data pipelines.  </p><p>At Microsoft, this kind of work is not unique to the EAE team. Across the company, cross-functional, community-driven teams foster innovation through open source collaboration.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-contribute-to-openlineage\">Why Contribute to OpenLineage?<a href=\"#why-contribute-to-openlineage\" class=\"hash-link\" aria-label=\"Direct link to Why Contribute to OpenLineage?\" title=\"Direct link to Why Contribute to OpenLineage?\">​</a></h3><p>Most enterprise data environments are convoluted, with data systems spread across on-prem, multi-cloud, SaaS, and open-source platforms. The data moves between a variety of storage, processing, analytical, and SaaS data systems. Azure Databricks is one such data system in an enterprise with a lakehouse platform in the cloud that combines data warehouses and data lakes to offer an open and unified platform for data and AI. Microsoft Purview customers have long asked for the ability to populate and govern Azure Databricks assets in the Microsoft Purview DataMap. With OpenLineage, we are bringing runtime Data Lineage capture from Azure Databricks Spark workloads to Microsoft Purview. </p><p>In addition, by contributing to OpenLineage, Microsoft can offer users of OpenLineage on other platforms the ability to represent metadata models of Microsoft data sources accurately in their lineage graphs. For example, users of Spark on any other platform can represent the metadata models of Microsoft data sources more accurately.</p><p>Lastly, OpenLineage benefits from Microsoft’s contributions as they will add hundreds if not thousands of new users to the OpenLineage standard. This will spur more  contributions by the OpenLineage community as more users request that new implementations and features be added to the specification.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"about-the-solution\">About the Solution<a href=\"#about-the-solution\" class=\"hash-link\" aria-label=\"Direct link to About the Solution\" title=\"Direct link to About the Solution\">​</a></h3><p><img loading=\"lazy\" alt=\"Flow of metadata using OpenLineage\" src=\"/assets/images/purview-lineage-0cb14df84c28e2c243c0dd0d62e35528.png\" width=\"666\" height=\"164\" class=\"img_ev3q\">\nFigure 3. The flow of metadata from Azure Databricks to Microsoft Purview using OpenLineage.</p><ol><li>An Azure administrator deploys an Azure Function (serverless C# application) and an Event Hub (to store OpenLineage events) by running a deployment script.</li><li>An administrator configures a Databricks cluster as per the <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/spark/databricks\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage install instructions</a> along with the Azure Function key and OpenLineage host pointing to the Azure Function.</li><li>The OpenLineage Spark jar extracts the necessary inputs and outputs and emits them to the Azure Function.</li><li>The Azure Functions transform the OpenLineage payload and push lineage to Microsoft Purview through the Apache Atlas REST APIs.</li><li>Databricks Lineage is then visible inside Microsoft Purview!</li></ol><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-started-with-microsoft-purview\">Getting Started with Microsoft Purview<a href=\"#getting-started-with-microsoft-purview\" class=\"hash-link\" aria-label=\"Direct link to Getting Started with Microsoft Purview\" title=\"Direct link to Getting Started with Microsoft Purview\">​</a></h2><div style=\"background-color:rgb(211, 211, 211);padding:15px 15px 5px 15px\">Quickly and easily create a <a href=\"https://azure.microsoft.com/en-us/services/purview/#get-started\" target=\"_blank\" rel=\"noopener noreferrer\">Microsoft Purview</a> account to explore the new features.<p>Try out the <a href=\"https://github.com/microsoft/Purview-ADB-Lineage-Solution-Accelerator\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Databricks to Microsoft Purview Solution Accelerator</a>.</p><p>Learn how to <a href=\"https://www.youtube.com/watch?v=pLF0iykhruY&amp;feature=youtu.be\" target=\"_blank\" rel=\"noopener noreferrer\">deploy the solution</a>.</p></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-the-future-holds\">What the Future Holds<a href=\"#what-the-future-holds\" class=\"hash-link\" aria-label=\"Direct link to What the Future Holds\" title=\"Direct link to What the Future Holds\">​</a></h3><p>Microsoft plans to continue contributing to OpenLineage to ensure that users can extract lineage from additional Azure data sources such as <a href=\"https://docs.microsoft.com/en-us/azure/data-explorer/spark-connector\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Data Explorer (Kusto)</a>, <a href=\"https://docs.microsoft.com/en-us/azure/cosmos-db/sql/create-sql-api-spark\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Cosmos DB</a>, and <a href=\"https://docs.microsoft.com/en-us/azure/databricks/spark/latest/structured-streaming/streaming-event-hubs\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Event Hubs</a>, and that OpenLineage continues to perform well on Azure Databricks.</p><p>In addition, Microsoft plans to keep up-to-date with advancements made by the OpenLineage community, such as the exciting recent contribution of <a href=\"https://github.com/OpenLineage/OpenLineage/pull/698\" target=\"_blank\" rel=\"noopener noreferrer\">column-level lineage</a> to the project.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"acknowledging-the-contributors\">Acknowledging the Contributors<a href=\"#acknowledging-the-contributors\" class=\"hash-link\" aria-label=\"Direct link to Acknowledging the Contributors\" title=\"Direct link to Acknowledging the Contributors\">​</a></h3><p>The OpenLineage Spark integration is the product of hard work by teams inside and outside Microsoft.</p><p>Contributors from the Microsoft Early Access Engineering team include:</p><ul><li>Mark Taylor, Principal Technical Specialist (<a href=\"https://github.com/Marktayl1\" target=\"_blank\" rel=\"noopener noreferrer\">@marktayl1</a>)</li><li>Will Johnson, Global Black Belt - Big Data, Analytics, and ML Specialist (<a href=\"https://github.com/wjohnson\" target=\"_blank\" rel=\"noopener noreferrer\">@wjohnson</a>)</li><li>Rodrigo Monteiro, Global Black Belt - Big Data, Analytics (<a href=\"https://github.com/rodrigomonteiro-gbb\" target=\"_blank\" rel=\"noopener noreferrer\">@rodrigomonteiro-gbb</a>)</li><li>Travis Hilbert, Technical Specialist (<a href=\"https://github.com/TravisHilbert\" target=\"_blank\" rel=\"noopener noreferrer\">@travishilbert</a>)</li><li>Matt Savarino, Sr. Technical Specialist (<a href=\"https://github.com/mattsavarino\" target=\"_blank\" rel=\"noopener noreferrer\">@mattsavarino</a>)</li></ul><p>Outside Microsoft, contributors to the OpenLineage Spark integration are based at a range of internationally distributed companies and organizations. Additional contributors to the integration include:</p><ul><li>Michael Collado, Staff Software Engineer, Astronomer (<a href=\"https://github.com/collado-mike\" target=\"_blank\" rel=\"noopener noreferrer\">@collado-mike</a>)</li><li>Oleksandr Dvornik, Senior Java Developer, UBS (<a href=\"https://github.com/OleksandrDvornik\" target=\"_blank\" rel=\"noopener noreferrer\">@OleksandrDvornik</a>)</li><li>Paweł Leszczyński, Data Engineer, GetInData (<a href=\"https://github.com/pawel-big-lebowski\" target=\"_blank\" rel=\"noopener noreferrer\">@pawel-big-lebowski</a>)</li><li>Tomasz Nazarewicz, Data Engineer, GetInData (<a href=\"https://github.com/tnazarew\" target=\"_blank\" rel=\"noopener noreferrer\">@tnazarew</a>)</li><li>Maciej Obuchowski, Software Engineer, GetInData (<a href=\"https://github.com/mobuchowski\" target=\"_blank\" rel=\"noopener noreferrer\">@mobuchowski</a>) </li><li>Kengo Seki, PMC Member and Committer, Apache Software Foundation (<a href=\"https://github.com/sekikn\" target=\"_blank\" rel=\"noopener noreferrer\">@sekikn</a>)</li><li>Ziyoiddin Yusupov, Senior Software Engineer, UBS (<a href=\"https://github.com/mr-yusupov\" target=\"_blank\" rel=\"noopener noreferrer\">@mr-yusupov</a>)</li></ul><p>Try the <a href=\"https://github.com/microsoft/Purview-ADB-Lineage-Solution-Accelerator\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Databricks to Microsoft Purview Solution Accelerator</a> today!</p>",
            "url": "https://openlineage.io/blog/openlineage-microsoft-purview",
            "title": "Microsoft Purview Accelerates Lineage Extraction from Azure Databricks",
            "summary": "A new collaboration between Microsoft and OpenLineage is making lineage extraction possible for Azure Databricks and Microsoft Purview users.",
            "date_modified": "2022-06-14T00:00:00.000Z",
            "author": {
                "name": "Chandru Sugunan"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/openlineage-snowflake",
            "content_html": "<p>The OpenLineage Adapter offers Snowflake's enterprise users a powerful tool for analyzing their pipelines.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"introduction\">Introduction<a href=\"#introduction\" class=\"hash-link\" aria-label=\"Direct link to Introduction\" title=\"Direct link to Introduction\">​</a></h2><p>We are excited to reveal a new way to gather lineage metadata directly from Snowflake: the OpenLineage Adapter. This integration offers Snowflake’s enterprise users a powerful tool for analyzing and diagnosing issues with their data pipelines.</p><p>This new integration will add new diagnostic capability to one of the world’s largest data platforms. Snowflake’s Data Cloud currently empowers more than 5,900 companies, including 241 of the Fortune 500 as of January 2022, to unite siloed data, securely share data, and execute diverse analytic workloads across their organizations. Legacy platforms struggled to provide a single, secure, and universally accessible platform for organizations to warehouse and analyze their data, but Snowflake’s Data Cloud provides a global ecosystem where customers, providers, and partners can finally break down data silos and derive value from rapidly growing data sets in secure, compliant, and governed ways.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"background\">Background<a href=\"#background\" class=\"hash-link\" aria-label=\"Direct link to Background\" title=\"Direct link to Background\">​</a></h2><p>An open source <a href=\"https://lfaidata.foundation/projects/openlineage\" target=\"_blank\" rel=\"noopener noreferrer\">LF AI &amp; Data Foundation</a> sandbox project, OpenLineage provides an open standard for metadata and lineage collection that instruments jobs as they are running. OpenLineage not only automates the process of generating lineage and metadata about datasets, jobs, and runs in a data flow, but also does this in real time behind the scenes. With OpenLineage’s open standard and extensible backend, users can easily identify the root causes of slow or failing jobs and issues with data quality in their ecosystems without parsing queries. The magic of OpenLineage is its standard API for capturing lineage events. Any number of tools – from schedulers to SQL engines – can send metadata from this endpoint to a compatible tool such as <a href=\"https://github.com/MarquezProject/marquez\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a> for visualization and further analysis of a pipeline.</p><p>Historically, the process of producing lineage and collecting metadata has been laborious and error-prone. Extracting data from query logs via parsing, for example, required one to reimplement database parsing logic, which added complexity and introduced opportunities for user error. In addition, the lineage collected was incomplete. One could learn about the view that was queried but not about the underlying tables in the pipeline, much less about the upstream and downstream dependencies of the datasets. OpenLineage, by contrast, exploits what the database already knows and does to maintain an up-to-date, end-to-end graph of a pipeline – and makes the graph available via an API.     </p><p>OpenLineage and Snowflake play nicely because the latter is unusual among cloud data platforms for offering lineage information out of the box in a view (<a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/access_history.html\" target=\"_blank\" rel=\"noopener noreferrer\">ACCESS_HISTORY</a>). The integration of OpenLineage builds on this foundation to offer automated generation of lineage and metadata.</p><p>The value proposition of Snowflake + OpenLineage lies in the combination of an open standard tool, which supports multiple data systems to provide lineage in a single format, to Snowflake’s existing production of lineage information on an enterprise scale. The integration gives customers the ability to consume enterprise-wide table lineage and process lineage together in a consolidated OpenLineage format. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"approach\">Approach<a href=\"#approach\" class=\"hash-link\" aria-label=\"Direct link to Approach\" title=\"Direct link to Approach\">​</a></h2><p>The process of integrating OpenLineage benefited from an existing query logging tool already available to Snowflake enterprise customers: the <code>ACCESS_HISTORY</code> view. As its name suggests, this feature, designed initially for governance use cases, offers users a detailed view of read operations conducted on Snowflake objects (e.g., tables, views, and columns) on an on-demand basis in response to SQL queries. (Write operations are viewable as a preview feature.)</p><p>As developed primarily by former Snowflake intern Aly Hirani with support from Datakin Senior Engineer Minkyu Park, the OpenLineage integration makes Access History the basis of automated production of lineage and metadata. But rather than produce a view for querying, OpenLineage produces a holistic lineage graph. To create the graph, the integration takes the data used to populate the Access History view and sends it to the OpenLineage backend as a standard OpenLineage event. Events in OpenLineage are JSON objects that employ a consistent naming strategy for database entities and enrich those entities with facets:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"eventType\": \"COMPLETE\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"eventTime\": \"2020-12-28T20:52:00.001+10:00\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"run\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"runId\": \"d46e465b-d358-4d32-83d4-df660ff614dd\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"job\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"namespace\": \"my-namespace\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"name\": \"my-job\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"outputs\": [{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"namespace\": \"my-namespace\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"name\": \"my-output\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"facets\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"schema\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"_producer\": \"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"_schemaURL\": \"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.json#/definitions/SchemaDatasetFacet\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"fields\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            { \"name\": \"a\", \"type\": \"VARCHAR\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            { \"name\": \"b\", \"type\": \"VARCHAR\"}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            ]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }],    </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"producer\": \"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"a-dag-based-solution\">A DAG-based Solution<a href=\"#a-dag-based-solution\" class=\"hash-link\" aria-label=\"Direct link to A DAG-based Solution\" title=\"Direct link to A DAG-based Solution\">​</a></h2><p>Automating lineage production from the Access History view required a two-DAG solution. Minkyu had initially planned to use one DAG to scan the view and produce the lineage graph, but the timing of the logs used for the view precluded the production of lineage data with a single DAG. The solution Minkyu found was a separate DAG with a schedule for scanning the Access History view on a regular interval.</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">def send_ol_events():</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   client = OpenLineageClient.from_environment()</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   with connect(user=SNOWFLAKE_USER,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                password=SNOWFLAKE_PASSWORD,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                account=SNOWFLAKE_ACCOUNT,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                database='OPENLINEAGE',</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                schema='PUBLIC') as conn:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">       with conn.cursor() as cursor:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           ol_view = 'OPENLINEAGE_ACCESS_HISTORY'</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           ol_event_time_tag = 'OL_LATEST_EVENT_TIME'</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           var_query = f'''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               set current_organization='{SNOWFLAKE_ACCOUNT}';</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           '''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           cursor.execute(var_query)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           ol_query = f'''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               SELECT * FROM {ol_view}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               WHERE EVENT:eventTime &gt; system$get_tag('{ol_event_time_tag}', '{ol_view}', 'table')</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               ORDER BY EVENT:eventTime ASC;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           '''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           cursor.execute(ol_query)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           ol_events = [json.loads(ol_event[0]) for ol_event in cursor.fetchall()]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           for ol_event in ol_events:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               client.emit(ol_event)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           if len(ol_events) &gt; 0:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               latest_event_time = ol_events[-1]['eventTime']</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               cursor.execute(f'''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                   ALTER VIEW {ol_view} SET TAG {ol_event_time_tag} = '{latest_event_time}';</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">               ''')</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">default_args = {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'owner': 'openlineage',</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'depends_on_past': False,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'start_date': days_ago(1),</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'email_on_failure': False,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'email_on_retry': False,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'email': ['demo@openlineage.io'],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   'snowflake_conn_id': 'openlineage_snowflake'</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">with DAG('etl_openlineage',</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    schedule_interval='@hourly',</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    catchup=False,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    default_args=default_args,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    description='Send OL events every minutes',</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    tags=[\"extract\"]) as dag:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        t1 = PythonOperator(task_id='ol_event', python_callable=send_ol_events)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-started-with-an-example\">Getting Started with an Example<a href=\"#getting-started-with-an-example\" class=\"hash-link\" aria-label=\"Direct link to Getting Started with an Example\" title=\"Direct link to Getting Started with an Example\">​</a></h2><p>This example uses Airflow to run a collection of Snowflake queries for a fictional food delivery service. Lineage data for these queries will be recorded within Snowflake <code>ACCESS_HISTORY</code> and, using the OpenLineage Access History View, emitted to an OpenLineage backend.</p><p>This is done using a series of DAGs in <code>dags/etl</code> that each use SnowflakeOperator to run queries, along with a DAG in <code>dags/lineage</code> that uses PythonOperator to send generated OpenLineage events to the configured backend.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"prerequisites\">Prerequisites<a href=\"#prerequisites\" class=\"hash-link\" aria-label=\"Direct link to Prerequisites\" title=\"Direct link to Prerequisites\">​</a></h3><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"installing-marquez\">Installing Marquez<a href=\"#installing-marquez\" class=\"hash-link\" aria-label=\"Direct link to Installing Marquez\" title=\"Direct link to Installing Marquez\">​</a></h4><p>First, checkout the Marquez repository:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> clone https://github.com/MarquezProject/marquez.git</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token builtin class-name\">cd</span><span class=\"token plain\"> marquez</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Then, run Marquez in detached mode:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% docker/up.sh -d</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">%</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"preparing-snowflake\">Preparing Snowflake<a href=\"#preparing-snowflake\" class=\"hash-link\" aria-label=\"Direct link to Preparing Snowflake\" title=\"Direct link to Preparing Snowflake\">​</a></h4><p>First, check out the OpenLineage Access History View repository:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> clone https://github.com/Snowflake-Labs/OpenLineage-AccessHistory-Setup.git</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token builtin class-name\">cd</span><span class=\"token plain\"> OpenLineage-AccessHistory-Setup</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The <code>OPENLINEAGE</code> database and <code>FOOD_DELIVERY</code> schema in Snowflake need to be created. This can be done using the SnowSQL command-line tool, or by pasting the queries into a new Snowflake Worksheet. This example uses SnowSQL.</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% snowsql -u </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">snowflake-user</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> -a </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">snowflake-account</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> CREATE DATABASE OPENLINEAGE</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> CREATE SCHEMA OPENLINEAGE.FOOD_DELIVERY</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The view defined in <code>open_lineage_access_history.sql</code> also needs to be created. This view represents the entries in <code>ACCESS_HISTORY</code> as specially-constructed JSON objects containing RunEvents that can be emitted to an OpenLineage backend. To create it, use SnowSQL to set the current_organization session variable and execute the SQL file.</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL&gt; SET current_organization='&lt;snowflake-organization&gt;';</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL&gt; USE SCHEMA OPENLINEAGE.PUBLIC;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL&gt; !source open_lineage_access_history.sql</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Finally, our lineage extraction DAG relies upon a tag on the view to keep track of which lineage events have been processed. This tag needs to be initialized:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL&gt; CREATE TAG OL_LATEST_EVENT_TIME;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL&gt; ALTER VIEW OPENLINEAGE.PUBLIC.OPENLINEAGE_ACCESS_HISTORY SET TAG OL_LATEST_EVENT_TIME = '1970-01-01T00:00:00.000';</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">SnowSQL&gt; !quit</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">%</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"preparing-the-environment\">Preparing the Environment<a href=\"#preparing-the-environment\" class=\"hash-link\" aria-label=\"Direct link to Preparing the Environment\" title=\"Direct link to Preparing the Environment\">​</a></h3><p>The following environment variables need to be set in order for the query DAGs to connect to Snowflake, and so that the extraction DAG can send lineage events to your OpenLineage backend:</p><ul><li>SNOWFLAKE_USER</li><li>SNOWFLAKE_PASSWORD</li><li>SNOWFLAKE_ACCOUNT</li><li>OPENLINEAGE_URL</li><li>AIRFLOW_CONN_OPENLINEAGE_SNOWFLAKE</li></ul><p>To do this, copy the <code>.env-example</code> file to <code>.env</code>, and edit it to provide the appropriate values for your environment. The variables in this file will be set for each service in the Airflow deployment.</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token builtin class-name\">cd</span><span class=\"token plain\"> examples/airflow</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token function\" style=\"color:#d73a49\">cp</span><span class=\"token plain\"> .env-example .env</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token function\" style=\"color:#d73a49\">vi</span><span class=\"token plain\"> .env</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"preparing-airflow\">Preparing Airflow<a href=\"#preparing-airflow\" class=\"hash-link\" aria-label=\"Direct link to Preparing Airflow\" title=\"Direct link to Preparing Airflow\">​</a></h3><p>Once the environment is prepared, initialize Airflow with docker-compose:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token function\" style=\"color:#d73a49\">docker-compose</span><span class=\"token plain\"> up airflow-init</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This will take several minutes. When it has finished, bring up the Airflow services:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% docker-compose up</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This will also take several minutes. Eventually, the webserver will be up at <a href=\"http://localhost:8080\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8080</a>. Log in using the default credentials (airflow/airflow) and navigate to the DAGs page. When you see 12 DAGs in the list, you can be confident that Airflow has completed its initialization of the example.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"running-the-example\">Running the Example<a href=\"#running-the-example\" class=\"hash-link\" aria-label=\"Direct link to Running the Example\" title=\"Direct link to Running the Example\">​</a></h3><p>Each of the DAGs is paused by default. Enable each one, skipping the <code>etl_openlineage</code> DAG for now. They may not all run successfully on the first try, since they have interdependencies that this example leaves unmanaged.</p><p><img loading=\"lazy\" alt=\"Airflow DAG list\" src=\"/assets/images/snowflake-airflow-example-e7bd5af6f0f7db54096dd1c996e06a67.png\" width=\"2674\" height=\"1404\" class=\"img_ev3q\"></p><p>After each DAG has completed at least one successful run, enable <code>etl_openlineage</code>. Wait for it to complete its run.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"result\">Result<a href=\"#result\" class=\"hash-link\" aria-label=\"Direct link to Result\" title=\"Direct link to Result\">​</a></h3><p>Navigate to your Marquez deployment and view the resulting lineage graph:</p><p><img loading=\"lazy\" alt=\"Lineage graph\" src=\"/assets/images/snowflake-openlineage-example-8802743d7b8dd89e7d0b711e64308bb9.png\" width=\"1328\" height=\"682\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"potential-improvements\">Potential Improvements<a href=\"#potential-improvements\" class=\"hash-link\" aria-label=\"Direct link to Potential Improvements\" title=\"Direct link to Potential Improvements\">​</a></h2><p>This new integration paves the way for an exciting set of potential future capabilities. These include support for <code>Object_Dependencies</code> and the addition of Granular Lineage (column-level lineage). We are interested in feedback from users, which will help the team at Snowflake and the members of the OpenLineage community prioritize future work.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a href=\"#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2><p>Snowflake’s integration of the OpenLineage standard promises to dramatically improve enterprise users’ ability to diagnose issues with quality and performance in their pipelines. This project is cause for optimism about future collaboration with OpenLineage. The fit between Snowflake’s enterprise product and OpenLineage is already fairly seamless. Further collaboration would likely yield additional features and, by extension, more value for Snowflake’s customers. Also, the fact that OpenLineage is an open standard offers opportunities for fruitful integrations with other partners. Supporters of OpenLineage already include Spark, Airflow, and dbt, and the list is growing. For more information or to contribute to OpenLineage, reach out on <a href=\"https://twitter.com/OpenLineage/\" target=\"_blank\" rel=\"noopener noreferrer\">twitter</a> or <a href=\"https://join.slack.com/t/openlineage/shared_invite/zt-oko79982-4bHHhxTUDQ9KXgQWXyWVxg\" target=\"_blank\" rel=\"noopener noreferrer\">Slack</a>, and check out the repositories on <a href=\"https://github.com/OpenLineage/\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>.</p>",
            "url": "https://openlineage.io/blog/openlineage-snowflake",
            "title": "Data Lineage with Snowflake",
            "summary": "The OpenLineage Adapter offers Snowflake's enterprise users a powerful tool for analyzing their pipelines.",
            "date_modified": "2022-04-27T00:00:00.000Z",
            "author": {
                "name": "Michael Robinson",
                "url": "https://github.com/merobi-hub"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/openlineage-egeria",
            "content_html": "<p>The Egeria project uses OpenLineage to enhance its production of holistic metadata about an organization's operations.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"openlineage-support-in-egeria\">OpenLineage Support in Egeria<a href=\"#openlineage-support-in-egeria\" class=\"hash-link\" aria-label=\"Direct link to OpenLineage Support in Egeria\" title=\"Direct link to OpenLineage Support in Egeria\">​</a></h2><p><a href=\"https://egeria-project.org\" target=\"_blank\" rel=\"noopener noreferrer\">Egeria</a> is a sister open source project to OpenLineage in the LF AI and Data Foundation. Egeria provides Open Metadata and Governance standard types and integration technology to exchange metadata between different technologies. It stitches together different standards to create a complete landscape of metadata about an organization’s digital operations.</p><p>OpenLineage is very welcome to the Egeria team since it defines a standard for dynamic lineage capture.  This means Egeria can capture open lineage events to detect new assets and activity around them, link this new knowledge into the existing metadata and distribute it to the open metadata ecosystem.</p><p>Egeria also executes governance processes for maintaining both metadata and the data sources it describes. Since it is running processes, it also makes sense that Egeria produces open lineage for its processes.</p><p>The diagram below is a big animal picture showing the different features relating to open lineage that Egeria offers. With Egeria’s plug-and-play architecture you can pick and choose which pieces you need.</p><p><img loading=\"lazy\" alt=\"Egeria architecture\" src=\"/assets/images/open-lineage-blog-8ea7da434cfd0a939d6eb8fcd0d19e0b.svg\" width=\"1599\" height=\"775\" class=\"img_ev3q\"></p><p>The numbers on the diagram refer to the notes below.</p><ol><li>Egeria can capture open lineage events directly through HTTP or via the proxy backend.</li><li>OpenLineage metadata is correlated and matched to existing metadata captured through a variety of mechanisms from direct metadata extraction from the hosting data platforms, to updates through dev ops pipelines to metadata discovery analytic tools.</li><li>Egeria can publish OpenLineage events. These include the OpenLineage events it received (potentially augmented with additional facets), or events generated from its own governance processes. Published OpenLineage events can go to Egeria’s OpenLineage file-based log store for later processing or to any application that supports the OpenLineage API (Marquez, for example -- another project from LF AI and Data).</li><li>The metadata extracted from OpenLineage events can be distributed to the open metadata ecosystem using standard approaches. This means it can be picked up by connected data science, governance and lineage tools.</li><li>Governance processes linked to the open metadata ecosystem can use OpenLineage events to validate that their originating processes are operating as frequently and as accurately as expected.</li></ol><p>More information on Egeria’s open lineage support can be found <a href=\"https://egeria-project.org/features/lineage-management/overview/#the-openlineage-standard\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><p>The Egeria community would like to thank the OpenLineage community for their great support while we created this integration. We look forward to continuing to work together as both our projects mature.</p>",
            "url": "https://openlineage.io/blog/openlineage-egeria",
            "title": "OpenLineage Support in Egeria",
            "summary": "The Egeria project uses OpenLineage to enhance its production of holistic metadata about an organization's operations.",
            "date_modified": "2022-04-25T00:00:00.000Z",
            "author": {
                "name": "Mandy Chessel"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/data-agility-day",
            "content_html": "<p>At Data Agility Day 2021, Julien Le Dem and Kevin Mellott outlined their approach to data lineage and discussed various approaches to implementing it in the real world.</p><p>OpenLineage made an appearance at Data Agility Day 2021, when contributors Julien Le Dem and Kevin Mellott took the virtual stage for a casual conversation about data lineage. The result was both informative and enjoyable.</p><p>If you couldn't make the event this year, that's okay! The video is now available, and it's <em>almost</em> as good as being there in person.</p><iframe id=\"llo_fn3f45lpc900s9awi\" src=\"//embed.vidello.com/4630/n3f45lpc900s9awi/player.html\" style=\"width:850px;height:480px;margin:0 auto;margin-top:20px;margin-bottom:20px;border:none\"></iframe><p>Julien Le Dem is the creator and lead engineer of OpenLineage. Kevin Mellott implemented the Enterprise Data Platform at Northwestern Mutual, and recently shared <a href=\"/blog/openlineage-at-northwestern-mutual\">a post detailing his team’s experiences</a>. </p><p>The video is also available at the <a href=\"https://dataagility.io/october2021/nw-mutual-datakin/\" target=\"_blank\" rel=\"noopener noreferrer\">Data Agility Day site</a>, where you can keep an eye out for future events.</p>",
            "url": "https://openlineage.io/blog/data-agility-day",
            "title": "Video - OpenLineage at Data Agility Day",
            "summary": "At Data Agility Day 2021, Julien Le Dem and Kevin Mellott outlined their approach to data lineage and discussed various approaches to implementing it in the real world.",
            "date_modified": "2021-11-17T00:00:00.000Z",
            "author": {
                "name": "Ross Turk",
                "url": "https://www.github.com/rossturk"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/openlineage-spark",
            "content_html": "<p>Spark ushered in a brand new age of data democratization... and left us with a mess of hidden dependencies, stale datasets, and failed jobs.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-age-of-data-democratization\">The Age of Data Democratization<a href=\"#the-age-of-data-democratization\" class=\"hash-link\" aria-label=\"Direct link to The Age of Data Democratization\" title=\"Direct link to The Age of Data Democratization\">​</a></h2><p>In 2015, Apache Spark seemed to be taking over the world. Many of us had spent the prior few years moving our large\ndatasets out of the Data Warehouse into \"Data Lakes\"- repositories of structured and unstructured data in\ndistributed file systems or object stores, like HDFS or S3. This enabled us to build analytic systems that could\nhandle traditional, table-structured data alongside flexible, unstructured JSON blobs, giving us access to more data\nand allowing us to move much faster than we’d previously been able to.</p><p>The problem was that taking the data out of Data Warehouses meant that the people who really needed access to the\ndata, analysts and statisticians, could no longer use the tools they were comfortable with in order to read that data.\nWhere previously, SQL and Python were all that was needed to start exploring and analyzing a dataset, now people needed\nto write Java or use specialized scripting languages, like Pig, to get at the data. Systems that did support SQL, such\nas Hive, were unbearably slow for any but the most basic operations. In many places, the statisticians were dependent on\nsoftware engineers to build custom tools for access, meaning the bottleneck had moved from the systems that\nneeded to store and process the data to the humans who were supposed to tell us what systems to build.</p><p>Then along came Apache Spark, which gave back to analysts the ability to use their beloved Python (and eventually SQL)\ntools to process raw data in object stores without the dependency on software engineers. While others were\nattracted to its ability to perform multiple operations on data without the I/O overhead of alternatives, like Pig or\nHive, data scientists were thrilled to start piping that data through their NumPy and Pandas scripts. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"a-colossal-mess\">A Colossal Mess<a href=\"#a-colossal-mess\" class=\"hash-link\" aria-label=\"Direct link to A Colossal Mess\" title=\"Direct link to A Colossal Mess\">​</a></h2><p>Of course, the natural consequence of this data democratization is that it becomes difficult to keep track of who is\nusing the data and for what purpose. Hidden dependencies and Hyrum’s Law suddenly meant that changes to the data schema\nwould inadvertently break downstream processes or that stale, deprecated datasets were still being consumed, and that\ncorrupted datasets would leak into unknown processes making recovery difficult or even impossible.</p><p><a href=\"https://xkcd.com/1172/\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\" alt=\"XKCD 1172\" src=\"/assets/images/workflow-60bcdebaee424553b3c757b62de0a1fe.png\" width=\"278\" height=\"386\" class=\"img_ev3q\"></a></p><p>The goal of OpenLineage is to reduce issues and speed up recovery by exposing those hidden dependencies and informing\nboth producers and consumers of data about the state of that data and the potential blast radius of changes and software\nbugs. Naturally, support for Apache Spark seemed like a good idea and, while the Spark 2.4 branch has been supported for\nsome time, the recent OpenLineage 0.3 release has explicit support for Spark 3.1. 🎉 </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-started\">Getting Started<a href=\"#getting-started\" class=\"hash-link\" aria-label=\"Direct link to Getting Started\" title=\"Direct link to Getting Started\">​</a></h2><p>Our approach to integrating with Spark is not super novel nor is it complicated to integrate into your own system. Spark\nhas had a SparkListener interface since before the 1.x days. If you're a heavy Spark user, it's likely you're already\nfamiliar with it and how it's used in Spark applications. OpenLineage integrates with Spark by implementing that\ninterface and collecting information about jobs that are executed inside a Spark application. To activate the\nlistener, add the following properties to your Spark configuration:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark.jars.packages     io.openlineage:openlineage-spark:0.3.+</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark.extraListeners    io.openlineage.spark.agent.OpenLineageSparkListener</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This can be added to your cluster’s <code>spark-defaults.conf</code> file, in which case it will record lineage for every job executed on the cluster, or added to specific jobs on submission via the <code>spark-submit</code> command. Once the listener is activated, it needs to know where to report lineage events, as well as the namespace of your jobs. Add the following additional configuration lines to your <code>spark-defaults.conf</code> file or your Spark submission script:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark.openlineage.transport.url     {your.openlineage.url}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark.openlineage.transport.type    'http'</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark.openlineage.namespace         {your.openlineage.namespace}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-demo\">The Demo<a href=\"#the-demo\" class=\"hash-link\" aria-label=\"Direct link to The Demo\" title=\"Direct link to The Demo\">​</a></h2><p>Trying out the Spark integration is super easy if you already have Docker Desktop and git installed. To follow along\nwith this demo, you’ll also need a Google Cloud account and a Service Account JSON key file for an account that has\naccess to BigQuery and read/write access to your GCS bucket. I added mine to a file called bq-spark-demo.json.</p><p>Note: If you're on macOS Monterey (macOS 12) you'll have to release port 5000 before beginning by <a href=\"https://developer.apple.com/forums/thread/682332\" target=\"_blank\" rel=\"noopener noreferrer\">disabling the AirPlay Receiver</a>.</p><p>Check out the OpenLineage project into your workspace with:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> clone https://github.com/OpenLineage/OpenLineage</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Then cd into the integration/spark directory. Run <code>mkdir -p docker/notebooks/gcs</code> and copy your service account credentials\nfile into that directory. Then run:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">docker-compose</span><span class=\"token plain\"> up</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This launches a Jupyter notebook with Spark already installed as well as a Marquez API endpoint to report lineage. Once the notebook server is up and running, you should see something like the following text in the logs:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">notebook_1  | [I 21:43:39.014 NotebookApp] Jupyter Notebook 6.4.4 is running at:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">notebook_1  | [I 21:43:39.014 NotebookApp] http://082cb836f1ec:8888/?token=507af3cf9c22f627f6c5211d6861fe0804d9f7b19a93ca48</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">notebook_1  | [I 21:43:39.014 NotebookApp]  or http://127.0.0.1:8888/?token=507af3cf9c22f627f6c5211d6861fe0804d9f7b19a93ca48</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">notebook_1  | [I 21:43:39.015 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Copy the URL with 127.0.0.1 as the hostname from your own log (the token will be different from mine) and paste it into\nyour browser window. You should have a blank Jupyter notebook environment ready to go.</p><p><img loading=\"lazy\" alt=\"Jupyter home screen\" src=\"/assets/images/jupyter_home-2dc86f82e68de8e5f562af14a2352627.png\" width=\"1226\" height=\"377\" class=\"img_ev3q\"></p><p>Once your notebook environment is ready, click on the notebooks directory, then click on the New button to create a new\nPython 3 notebook.</p><p><img loading=\"lazy\" alt=\"Jupyter create new notebook\" src=\"/assets/images/jupyter_new_notebook-615ec352aa7c69dc98d86b73fd5485e9.png\" width=\"1214\" height=\"365\" class=\"img_ev3q\"></p><p>In the first cell in the window paste the following text. Update the GCP project and bucket names and the\nservice account credentials file, then run the code:</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> pyspark</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">sql </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> SparkSession</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> urllib</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">request</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># download dependencies for BigQuery and GCS</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">gc_jars </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">'https://repo1.maven.org/maven2/com/google/cloud/bigdataoss/gcs-connector/hadoop3-2.1.1/gcs-connector-hadoop3-2.1.1-shaded.jar'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">'https://repo1.maven.org/maven2/com/google/cloud/bigdataoss/bigquery-connector/hadoop3-1.2.0/bigquery-connector-hadoop3-1.2.0-shaded.jar'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">'https://repo1.maven.org/maven2/com/google/cloud/spark/spark-bigquery-with-dependencies_2.12/0.22.2/spark-bigquery-with-dependencies_2.12-0.22.2.jar'</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">files </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">urllib</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">request</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">urlretrieve</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">url</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> url </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> gc_jars</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Set these to your own project and bucket</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">project_id </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'bq-openlineage-spark-demo'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">gcs_bucket </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'bq-openlineage-spark-demo-bucket'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">credentials_file </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'/home/jovyan/notebooks/gcs/bq-spark-demo.json'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">SparkSession</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">builder</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">master</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'local'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">appName</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'openlineage_spark_test'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.jars'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\",\"</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">join</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">files</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Install and set up the OpenLineage listener</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.jars.packages'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'io.openlineage:openlineage-spark:0.3.+'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.extraListeners'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'io.openlineage.spark.agent.OpenLineageSparkListener'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.openlineage.transport.url'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'http://marquez-api:5000'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.openlineage.transport.type'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'http'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.openlineage.namespace'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'spark_integration'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Configure the Google credentials and project id</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.executorEnv.GCS_PROJECT_ID'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> project_id</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.executorEnv.GOOGLE_APPLICATION_CREDENTIALS'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'/home/jovyan/notebooks/gcs/bq-spark-demo.json'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.hadoop.google.cloud.auth.service.account.enable'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'true'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.hadoop.google.cloud.auth.service.account.json.keyfile'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> credentials_file</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.hadoop.fs.gs.impl'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystem'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'spark.hadoop.fs.AbstractFileSystem.gs.impl'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">config</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"spark.hadoop.fs.gs.project.id\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> project_id</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">             </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">getOrCreate</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Most of this is boilerplate- we need the BigQuery and GCS libraries installed in the notebook environment, then we need\nto set the configuration parameters to tell the libraries what GCP project we want to use and how to authenticate with\nGoogle. The parameters specific to OpenLineage are the four we already covered- <code>spark.jars.packages</code>,\n<code>spark.extraListeners</code>, <code>spark.openlineage.host</code>, <code>spark.openlineage.namespace</code>. Here, we’ve configured the host to be\nthe marquez-api container started by Docker.</p><p>Google has a wealth of information available as public datasets in BigQuery. If you’re ever bored one Saturday night,\nbrowse the datasets available- you’ll find census data, crime data, liquor sales, and even a black hole database. For\nthe demo, I thought I’d browse some of the Covid19 related datasets they have. Specifically, there’s a dataset that\nreports the likelihood of people in a given county to wear masks (broken up into five categories: <code>always</code>, <code>frequently</code>,\n<code>sometimes</code>, <code>rarely</code>, and <code>never</code>). There’s also a giant dataset called <code>covid19_open_data</code> that contains things like\nvaccination rates, current totals of confirmed cases, hospitalizations, deaths, population breakdowns, and policies on\nmask-wearing, contact tracing, and vaccination-mandates. Both datasets contain the county FIPS code for US counties,\nmeaning we can join the two datasets and start exploring.</p><p>Create a new cell in the notebook and paste the following code:</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> pyspark</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">sql</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">functions </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> expr</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> col</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">mask_use </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> spark</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">read</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'bigquery'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">option</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'parentProject'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> project_id</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">option</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'table'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'bigquery-public-data:covid19_nyt.mask_use_by_county'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">load</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">select</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">expr</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"always + frequently\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">alias</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"frequent\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            expr</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"never + rarely\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">alias</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"rare\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string\" style=\"color:#e3116c\">\"county_fips_code\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">opendata </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> spark</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">read</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'bigquery'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">option</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'parentProject'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> project_id</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">option</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'table'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'bigquery-public-data.covid19_open_data.covid19_open_data'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">load</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"country_name == 'United States of America'\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"date == '2021-10-31'\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">select</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"location_key\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            expr</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'cumulative_deceased/(population/100000)'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">alias</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'deaths_per_100k'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            expr</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'cumulative_persons_fully_vaccinated/(population - population_age_00_09)'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">alias</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'vaccination_rate'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            col</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'subregion2_code'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">alias</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'county_fips_code'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">joined </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> mask_use</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">join</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">opendata</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'county_fips_code'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">joined</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">write</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">mode</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'overwrite'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">parquet</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">f'gs://</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">{</span><span class=\"token string-interpolation interpolation\">gcs_bucket</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">}</span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">/demodata/covid_deaths_and_mask_usage/'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Again, this is standard Spark DataFrame usage. The particulars are completely irrelevant to the OpenLineage data\ncollection- we don’t need to call any new APIs or change our code in any way. Here, I’ve filtered\nthe <code>covid19_open_data</code> table to include only U.S. data and to include the data for Halloween 2021. That dataset has a\nlarge number of columns, but for my own purposes, I’m only interested in a few of them. I calculate <code>deaths_per_100k</code>\nusing the existing <code>cumulative_deceased</code> and <code>population</code> columns and I calculate the <code>vaccination_rate</code> using the total\npopulation, subtracting the 0-9 year olds, since they weren’t eligible for vaccination at the time. For\nthe <code>mask_use_by_county</code> data, I don't really care about the difference between <code>rarely</code> and <code>never</code>, so I combine them\ninto a single number. I do the same for <code>frequently</code> and <code>always</code>. I join the few columns I want from the two datasets\nand store the combined result in GCS.</p><p>Add one more cell to the notebook and paste the following:</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">spark</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">read</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">parquet</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">f'gs://</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">{</span><span class=\"token string-interpolation interpolation\">gcs_bucket</span><span class=\"token string-interpolation interpolation punctuation\" style=\"color:#393A34\">}</span><span class=\"token string-interpolation string\" style=\"color:#e3116c\">/demodata/covid_deaths_and_mask_usage/'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">count</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The notebook will likely spit out a warning and a stacktrace (it should probably be a debug statement), then give you a\ntotal of 3142 records.</p><p>So far, so good. Now what? If this was a data science blog, we might start generating some scatter plots or doing a\nlinear regression to determine whether frequent mask usage was a predictor of high death rates or vaccination rates.\nBut since we're really focused on lineage collection, I'll leave the rest of the analysis up to those with the time and\ninclination to dig further. Instead, let's switch to exploring the lineage records we just created.</p><p>The <code>docker-compose.yml</code> file that ships with the OpenLineage repo includes only the Jupyter notebook and the Marquez API.\nFor exploring visually, we’ll also want to start up the Marquez web project. Without terminating the existing docker\ncontainers, run the following command in a new terminal:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">docker</span><span class=\"token plain\"> run --network spark_default -p </span><span class=\"token number\" style=\"color:#36acaa\">3000</span><span class=\"token plain\">:3000 -e </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">MARQUEZ_HOST</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">marquez-api -e </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">MARQUEZ_PORT</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">5000</span><span class=\"token plain\"> --link marquez-api:marquez-api marquezproject/marquez-web:0.19.1</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Now open a new browser tab and navigate to <code>http://localhost:3000</code>. You should see a screen like the following:</p><p><img loading=\"lazy\" alt=\"Marquez home page\" src=\"/assets/images/marquez_home-a520b9086c3cb2d2d471bb97f5300c69.png\" width=\"1688\" height=\"1308\" class=\"img_ev3q\"></p><p>Note the spark_integration namespace was found for us and automatically chosen, since there are no other namespaces\navailable. We can see three jobs listed on the jobs page of the UI. They all start with <code>openlineage_spark_test</code>, which\nis the <code>appName</code> we passed to the SparkSession we were building in the first cell of the notebook. Each query execution\nor RDD action is represented as a distinct job and the name of the action is appended to the application name to form\nthe name of the job. Clicking on the <code>openlineage_spark_test.execute_insert_into_hadoop_fs_relation_command</code> node, we\ncan see the lineage graph for our notebook:</p><p><img loading=\"lazy\" alt=\"Marquez job lineage\" src=\"/assets/images/marquez_job_graph-737ca012d1735f9d01e32b806164f824.png\" width=\"1687\" height=\"1307\" class=\"img_ev3q\"></p><p>The graph shows the <code>openlineage_spark_test.execute_insert_into_hadoop_fs_relation_command</code> job reads from two input\ndatasets, <code>bigquery-public-data.covid19_nyt.mask_use_by_county</code>\nand <code>bigquery-public-data.covid19_open_data.covid19_open_data</code>, and writes to a third dataset,\n<code>/demodata/covid_deaths_and_mask_usage</code>. The namespace is missing from that third dataset- the fully qualified name is\n<code>gs://&lt;your_bucket&gt;/demodata/covid_deaths_and_mask_usage</code>.</p><p>Before clicking on the datasets, though, the bottom bar shows some really interesting data that was collected from the\nSpark job. Dragging the bar up expands the view so we can get a better look at that data.</p><p><img loading=\"lazy\" alt=\"Marquez job facets\" src=\"/assets/images/marquez_job_facets-cb90b68c176111b854130c8608daff7d.png\" width=\"1687\" height=\"1307\" class=\"img_ev3q\"></p><p>Two <a href=\"https://openlineage.io/blog/extending-with-facets/\" target=\"_blank\" rel=\"noopener noreferrer\">facets</a> that are always collected from Spark jobs are\nthe <code>spark_version</code> and the <code>spark.logicalPlan</code>. The first simply reports what version of Spark was executing, as well\nas the version of the <code>openlineage-spark</code> library. This is helpful information to collect when trying to debug a job\nrun.</p><p>The second facet is the serialized optimized <code>LogicalPlan</code> Spark reports when the job runs. Spark’s query optimization\ncan have dramatic effects on the execution time and efficiency of the query job. Tracking how query plans change over\ntime can significantly aid in debugging slow queries or OutOfMemory errors in production.</p><p>Clicking on the first BigQuery dataset gives us information about the data we read:</p><p><img loading=\"lazy\" alt=\"Marquez dataset latest facet\" src=\"/assets/images/marquez_bigquery_dataset_latest-ea115c38a4b88b4aad16f7c742d199ef.png\" width=\"1686\" height=\"1307\" class=\"img_ev3q\"></p><p>Here, we can see the schema of the dataset as well as the datasource — namely BigQuery.</p><p>We can get similar information about the dataset written to in GCS:</p><p><img loading=\"lazy\" alt=\"Marquez output dataset latest facet\" src=\"/assets/images/marquez_output_dataset_latest-16f47904a2fc669b208e409d9278ecf9.png\" width=\"1688\" height=\"1307\" class=\"img_ev3q\"></p><p>As in the BigQuery dataset, we can see the output schema and the datasource — here, the <code>gs://</code> scheme and the name of\nthe bucket we wrote to. </p><p>In addition to the schema, we also see a <code>stats</code> facet, reporting the number of output records and bytes as -1. A\nsomewhat recent change to the OpenLineage schema resulted in output facets being recorded in a new field- one that\nMarquez is not yet reading from. The old, deprecated facet reports the output stats incorrectly. An upcoming bugfix\nshould correct the stats view so that we can see the number of rows written as well as the number of output bytes (the\nstatistics are actually recorded correctly- the API simply needs to start returning the correct values).</p><p>You may have noticed the <code>VERSIONS</code> tab on the bottom bar. We can click it, but since the job has only ever run once,\nwe’ll only see one version. Clicking on the version, we’ll see the same schema and statistics facets, but specific\nto the version we clicked.</p><p><img loading=\"lazy\" alt=\"Marquez output dataset version info\" src=\"/assets/images/marquez_output_dataset_version-63ed3dec122baf4d59e4a66cf8a3b461.png\" width=\"1687\" height=\"1308\" class=\"img_ev3q\"></p><p>In production, this dataset would have many versions, as each time the job runs a new version of the dataset is created.\nThis allows us to track changes to the statistics and schema over time, again aiding in debugging slow jobs (suddenly,\nwe started writing 50% more records!) or data quality issues (suddenly, we’re only writing half as many records as\nnormal!) and job failures (somebody changed the output schema and downstream jobs are failing!).</p><p>The final job in the UI is a HashAggregate job- this represents the <code>count()</code> method we called at the end to show the\nnumber of records in the dataset. Rather than a <code>count()</code>, this could easily be a <code>toPandas()</code> call or some other job\nthat reads and processes that data- perhaps storing output back into GCS or updating a Postgres database or publishing a\nnew model, etc. Regardless of where the output gets stored, the OpenLineage integration allows you to see the entire\nlineage graph, unifying datasets in object stores, relational databases, and more traditional data warehouses.</p><p><a href=\"https://xkcd.com/2347/\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\" alt=\"XKCD 2347\" src=\"/assets/images/dependency-b50296d079052156d1cfd4981de70a44.png\" width=\"385\" height=\"489\" class=\"img_ev3q\"></a></p><p>The Spark integration is still a work in progress, but users are already getting insights into their graphs of datasets\nstored in object stores like S3, GCS, and Azure Blob Storage, as well as BigQuery and relational databases like\nPostgres. Now with Spark 3.1 supported, we can gain visibility into more environments, like Databricks, EMR, and\nDataproc clusters.</p><p>Data lineage gives visibility to the (hopefully) high quality, (hopefully) regularly updated datasets that everyone\ndepends on, maybe without even realizing it. Spark helped usher in a welcome age of data democratization. Now data\nobservability can help ensure we’re making the best possible use of the data available.</p>",
            "url": "https://openlineage.io/blog/openlineage-spark",
            "title": "Tracing Data Lineage with OpenLineage and Apache Spark",
            "summary": "Spark ushered in a brand new age of data democratization... and left us with a mess of hidden dependencies, stale datasets, and failed jobs.",
            "date_modified": "2021-11-05T00:00:00.000Z",
            "author": {
                "name": "Michael Collado",
                "url": "https://www.github.com/collado-mike"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/openlineage-at-northwestern-mutual",
            "content_html": "<p>Northwestern Mutual is building an Enterprise Data Platform. In this guest blog, learn about the experiences and decisions that led them to embrace the OpenLineage and Marquez communities.</p><p>I joined Northwestern Mutual last year to oversee the implementation and delivery of their Enterprise Data Platform (Unified Data Platform). With over 160 years of history, Northwestern Mutual has been serving our clients with insurance and investment products, as well as financial planning, advisory and consultation services. It goes without saying that the company has accumulated a vast amount of data over this time. Our team’s objective is to empower data analysts, data scientists, and data engineers with the platform capabilities they need to derive insights and garner value from many disparate data sources.</p><h1>Ready...Set...Go!</h1><p>So, where do you start? The industry has taught us a lot over the past 10+ years - <em>remember when on-premises Hadoop clusters were all the rage</em>? When revisiting the approach we took within our Data Platform Engineering teams, I see a lot of alignment to the <a href=\"https://connectingdots.xyz/blog/posts/2021/05/the-data-engineering-manifesto/\" target=\"_blank\" rel=\"noopener noreferrer\">Data Engineering Manifesto</a>. A few principles really jump out:</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"embrace-cloud-managed-services\">Embrace cloud managed services<a href=\"#embrace-cloud-managed-services\" class=\"hash-link\" aria-label=\"Direct link to Embrace cloud managed services\" title=\"Direct link to Embrace cloud managed services\">​</a></h3><p>Many of the foundational needs of an Enterprise Data Platform can be accomplished using a cloud-first mindset. While we may not all agree which cloud provider is best, we can all agree that the level of scale and sophistication accomplished around things like storage, compute, and redundancy are going to be MUCH greater when relying on a cloud provider than when rolling your own solution.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"we-are-software-engineers\">We are software engineers<a href=\"#we-are-software-engineers\" class=\"hash-link\" aria-label=\"Direct link to We are software engineers\" title=\"Direct link to We are software engineers\">​</a></h3><p>The Data Mesh evolution has reminded the industry that centralized data teams do not scale or empower anybody. With this principle in mind, our platform teams embraced full automation from the beginning and designed for self-service workflows. We do not want to become the bottleneck to insights; rather, we want to enable data owners to manage and share their datasets throughout the company. We want to empower data engineers with transformation and machine learning capabilities, so that they can author pipelines and deliver insights.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"aim-for-simplicity-through-consistency\">Aim for simplicity through consistency<a href=\"#aim-for-simplicity-through-consistency\" class=\"hash-link\" aria-label=\"Direct link to Aim for simplicity through consistency\" title=\"Direct link to Aim for simplicity through consistency\">​</a></h3><p>Traditionally, data platforms have gathered and constructed technical metadata based on events of the past. For example, there are many crawlers that will examine various database systems and build a catalog to make those datasets “discoverable.” Logs from various jobs can be parsed in <em>extremely specific ways</em> to identify datasets consumed and produced by a given pipeline to infer data lineage.</p><p>We viewed these traditional methods as a massive impediment to activating DataOps, due to differing technology solutions and the historical-based approach of their designs. Our platform aimed to achieve dynamic decisions based on what <em>is</em> happening <em>as it is</em> happening.</p><p>We also recognize and appreciate the complexity of this portion of the platform and did not find it wise to build from the ground up. Especially with the industry momentum towards real-time data observability, why add another custom solution to the stack? With such an evolving technical landscape, it was important for us to avoid vendor lock to allow us flexibility in future decisions.</p><h1>NM hearts OL</h1><p>When we first learned of the OpenLineage specification, we were very intrigued and hopeful. An open specification focused on observing real-time events AND unifying tools and frameworks?!? Fast forward nine months, and we cannot believe how much capability we have developed around data observability in such a brief time. Let me back up a little...</p><p>Marquez is a metadata management framework that implements the OpenLineage specification. It transforms your data runtime events into a searchable catalog of technical metadata. It was a perfect fit to the skills of our Platform Data Engineers - it is written in Java, runs in Kubernetes, and integrates well with our backend services via web-based APIs.</p><p>We were able to quickly deploy this framework into our own environment, which provided us with several immediate wins.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"flexible-framework\">Flexible framework<a href=\"#flexible-framework\" class=\"hash-link\" aria-label=\"Direct link to Flexible framework\" title=\"Direct link to Flexible framework\">​</a></h3><p>Since it is aligned with the OpenLineage framework, Marquez can process messages from ANY data producer that is publishing compliant events. The Marquez and OpenLineage communities have been doing an excellent job maturing the integration library, which allows you to tackle this challenge at the infrastructure level. This is the ultimate easy button approach and our own ideal state; configure an environment on behalf of your user base and sit back while it automatically detects and logs the activity within!</p><p>In the cases when an integration either does not exist or you need to address a more custom workflow, you can construct and emit your own OpenLineage event messages. Marquez will still be able to process and store custom OpenLineage events, provided they meet the requirements of the open standard.</p><p>For example, our teams have been able to programmatically construct OpenLineage messages within code that pulls data from various on-premises database servers and publishes it into our Data Platform. Using the OpenLineage specification, we extract the actual table schema from the source system as part of the <code>Dataset</code> entity and log the executing SQL query as part of the <code>Job</code> entity. This code was simplistic and allowed us to meet our immediate needs around observing data movement and recording those event details.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"alignment-with-enterprise\">Alignment with enterprise<a href=\"#alignment-with-enterprise\" class=\"hash-link\" aria-label=\"Direct link to Alignment with enterprise\" title=\"Direct link to Alignment with enterprise\">​</a></h3><p>Marquez already supported Kubernetes when we got involved, which provided us with many different deployment options. Our first contributions to the project were made to mature the <a href=\"https://github.com/MarquezProject/marquez/tree/main/chart\" target=\"_blank\" rel=\"noopener noreferrer\">Helm chart</a> and to enhance security around the base images and Kubernetes secrets usage.</p><p>These changes allowed us to fully automate our deployments using GitOps and incorporate internal security measures involving container vulnerability management.</p><p>The flexibility offered by the Marquez deployment architecture and our ability to customize its details allowed us to activate new production use cases in about a month. We were happy with this timeline, given the series of security checkpoints that were validated and the wealth of functionality we had just unlocked.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"collaborative-working-group\">Collaborative working group<a href=\"#collaborative-working-group\" class=\"hash-link\" aria-label=\"Direct link to Collaborative working group\" title=\"Direct link to Collaborative working group\">​</a></h3><p>Both the Marquez and OpenLineage communities have been extremely welcoming, and that has been a huge factor in our success at Northwestern Mutual. Our feedback and ideas have been encouraged and heard, which is evidenced by evolving project roadmaps and accepted developer contributions.</p><p>We have learned quite a bit from the community members and feel fortunate to be a part of this group. Monthly community meetings are informative yet have an amazingly informal feel to them.</p><h1>Where are we headed?</h1><p>The Unified Data Platform at Northwestern Mutual relies on the OpenLineage standard to formulate technical metadata within our various platform services. Publishing these events into Marquez has provided us with an effortless way to understand our running jobs. We can easily trace a downstream dataset to the job that produced it, as well as examine individual runs of that job or any preceding ones.</p><p>Gaining the ability to observe lineage throughout our platform has been huge, and we are just getting started. Our teams are working to apply standard OpenLineage integrations into our environment and introduce data quality facets into our events. We have also been establishing operational workflows using job run information, to allow our DataOps team to monitor durations and measure against SLAs.</p>",
            "url": "https://openlineage.io/blog/openlineage-at-northwestern-mutual",
            "title": "How Northwestern Mutual Simplified Data Observability with OpenLineage & Marquez",
            "summary": "Northwestern Mutual is building an Enterprise Data Platform. In this guest blog, learn about the experiences and decisions that led them to embrace the OpenLineage and Marquez communities.",
            "date_modified": "2021-10-22T00:00:00.000Z",
            "author": {
                "name": "Kevin Mellott"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/dbt-with-marquez",
            "content_html": "<p>Each time dbt runs, it generates a trove of metadata about datasets and the work it performs with them. In this post, I’d like to show you how to harvest this metadata and put it to good use.</p><div class=\"language-toc codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-toc codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The first time I built a data warehouse was in a completely different era, even though it wasn’t all that long ago. It was a few dozen tables + a collection of loader scripts and an ETL tool. If I’m honest, calling the whole thing a “data warehouse” is a bit grandiose, but it worked.</p><p>At the time, my defining question was “how can I make all of my most important data available for study without spending more than it’s worth?” Because my database capacity wasn’t infinite, I couldn’t keep all of my data forever. The jobs I wrote would pull data from operational data stores, perform a bunch of slicing and aggregation, and load summary data into the warehouse. They shoveled bits every night from one server to another, performing calculations in between - and that meant they had to run on a beefy server with close proximity to my data.</p><p>Skip forward to the current day and here I am, building and running models from a cafe over pretty shaky wifi. <strong>My, how things have changed.</strong></p><p>Cloud data warehouses like <a href=\"https://cloud.google.com/bigquery/\" target=\"_blank\" rel=\"noopener noreferrer\">Google BigQuery</a>, <a href=\"https://aws.amazon.com/redshift/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon Redshift</a>, and <a href=\"https://www.snowflake.com\" target=\"_blank\" rel=\"noopener noreferrer\">Snowflake</a> have created a new economic and technological possibility: we can now pretty much just load everything - including our entire operational data stores - into a single warehouse. Once everything is in one place, data can be sliced up and analyzed much more quickly. This is where <a href=\"https://www.getdbt.com\" target=\"_blank\" rel=\"noopener noreferrer\">dbt</a> shines, at making transformations within a cloud data warehouse easy. And we all know what happens when you make something easy: it finds a way to happen a lot. People are doing more complex transformations than ever before, and the need for lineage context is becoming greater than ever.</p><p>Fortunately, each time dbt runs it generates a trove of metadata about datasets and the work it performs with them. In this post, I’d like to show you how to harvest this metadata and put it to good use.</p><h1>Our Example</h1><p>For our example, let’s choose the kind of experiment that I might run in my day-to-day life. I’m the head of marketing at <a href=\"https://datakin.com\" target=\"_blank\" rel=\"noopener noreferrer\">Datakin</a>, which means the metrics I’m most interested in are usually about some sort of human behavior.</p><p>I ask questions like:</p><ul><li>Does <!-- -->[x]<!-- --> technology space matter, and to whom? Is it waxing or waning?</li><li>Are there adjacent ecosystems we should be collaborating with?</li><li>Who are the influencers in this space? Who are the major contributors?</li><li>What challenges are users facing? What does successful adoption look like?</li></ul><p>There are a lot of ways to try to answer these questions. None of them are any more reliable than human behavior itself, and every resulting metric requires analysis and judgment. But there are still some pretty fun things to discover. And what better data source to mine to understand technical audiences than <a href=\"https://www.stackoverflow.com\" target=\"_blank\" rel=\"noopener noreferrer\">Stack Overflow</a>?</p><p>So let’s see what we can learn from the Stack Overflow <a href=\"https://cloud.google.com/blog/topics/public-datasets/google-bigquery-public-datasets-now-include-stack-overflow-q-a\" target=\"_blank\" rel=\"noopener noreferrer\">public data set in BigQuery</a>. But not the whole thing; it is very large, so let’s study just a part of it. I created a <a href=\"http://github.com/rossturk/stackostudy/\" target=\"_blank\" rel=\"noopener noreferrer\">sample dbt project</a> that contains a handful of models to study all of the questions and answers we can find about the topic of ELT. These models:</p><ul><li>Create slices of the key Stack Overflow tables, pulling them into a separate BigQuery project. These slices only contain the rows that are related to questions tagged with “elt”. That way, we can query them tortuously all day long without scanning through gobs of partitions and running up our bill.</li><li>Augment these slices by performing some helpful calculations - in this case, the number of upvotes/downvotes per question.</li><li>Populate two summary tables for consumption by a BI system of some sort: a daily summary table that can be used to study trends and a user summary table that can be used to learn about the most influential contributors.</li></ul><p>This is exactly the kind of experiment I have run multiple times over the years, across numerous stacks. It’s usually pretty messy. But this time, after running all of these models, we will be rewarded with a gorgeous <a href=\"https://marquezproject.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a> lineage graph. We’ll be able to see how everything fits together.</p><h1>Setting Everything Up</h1><p>First, if you haven’t already, run through the excellent <a href=\"https://docs.getdbt.com/tutorial/setting-up\" target=\"_blank\" rel=\"noopener noreferrer\">dbt tutorial</a>. It will show you how to create a BigQuery project, provision a service account, download a JSON key, and set up your local dbt environment. The rest of this example assumes that you have created a BigQuery project where our models can be run, and you know how to properly configure dbt to connect to it.</p><p>Next, let’s start a local Marquez instance to store our lineage metadata. Make sure you have Docker running, and then:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> clone https://github.com/MarquezProject/marquez.git </span><span class=\"token operator\" style=\"color:#393A34\">&amp;&amp;</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\">cd</span><span class=\"token plain\"> marquez</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">./docker/up.sh</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Check to make sure Marquez is up by visiting <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000</a>. You should see an empty Marquez instance with a message saying there isn’t any data. Also, you should be able to see the server output from your requests in the terminal window where Marquez is running. Keep this window open until we’re done.</p><p>Now, let’s open a new terminal window/pane and clone the GitHub project containing our models:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> clone https://github.com/rossturk/stackostudy.git </span><span class=\"token operator\" style=\"color:#393A34\">&amp;&amp;</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\">cd</span><span class=\"token plain\"> stackostudy</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Next we need to install dbt and its integration with OpenLineage. I like to do this in a Python virtual environment because I make mistakes - as we all do - and I enjoy knowing that I can burn everything down and start over quickly if I need to. Virtual environments make this easy. To create one and install everything we need, run the following commands:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">python -m venv virtualenv</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">source</span><span class=\"token plain\"> virtualenv/bin/activate</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pip </span><span class=\"token function\" style=\"color:#d73a49\">install</span><span class=\"token plain\"> dbt dbt-openlineage</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>dbt learns how to connect to your BigQuery project by looking for a matching profile in <code>~/.dbt/profiles.yml</code>. Create or edit this file so it contains a section with your BigQuery connection details. You will need to point to the location of a file containing the JSON key for your service account. If you aren’t sure, you can follow <a href=\"https://docs.getdbt.com/tutorial/create-a-project-dbt-cli#connect-to-bigquery\" target=\"_blank\" rel=\"noopener noreferrer\">this section</a> in the dbt documentation. My <code>profiles.yml</code> looked like this when I was done:</p><div class=\"language-yaml codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-yaml codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token key atrule\" style=\"color:#00a4db\">stackostudy</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token key atrule\" style=\"color:#00a4db\">target</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> dev</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token key atrule\" style=\"color:#00a4db\">outputs</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token key atrule\" style=\"color:#00a4db\">dev</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">type</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> bigquery</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">method</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> service</span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\">account</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">keyfile</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> /Users/rturk/.dbt/dbt</span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\">example.json</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">project</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> dbt</span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\">example</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">dataset</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> stackostudy</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">threads</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">timeout_seconds</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">300</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">location</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> US</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token key atrule\" style=\"color:#00a4db\">priority</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> interactive</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Run <code>dbt debug</code> to make sure that you have everything configured correctly.</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% dbt debug</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Running with </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">dbt</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">0.20</span><span class=\"token plain\">.1</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">dbt version: </span><span class=\"token number\" style=\"color:#36acaa\">0.20</span><span class=\"token plain\">.1</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">python version: </span><span class=\"token number\" style=\"color:#36acaa\">3.8</span><span class=\"token plain\">.12</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">python path: /opt/homebrew/Cellar/dbt/0.20.1_1/libexec/bin/python3</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">os info: macOS-11.5.2-arm64-arm-64bit</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Using profiles.yml </span><span class=\"token function\" style=\"color:#d73a49\">file</span><span class=\"token plain\"> at /Users/rturk/.dbt/profiles.yml</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Using dbt_project.yml </span><span class=\"token function\" style=\"color:#d73a49\">file</span><span class=\"token plain\"> at /Users/rturk/projects/stackostudy/dbt_project.yml</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Configuration:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  profiles.yml </span><span class=\"token function\" style=\"color:#d73a49\">file</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK found and valid</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  dbt_project.yml </span><span class=\"token function\" style=\"color:#d73a49\">file</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK found and valid</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Required dependencies:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"> - </span><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK found</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Connection:</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  method: service-account</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  database: stacko-study</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  schema: stackostudy</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  location: US</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  priority: interactive</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  timeout_seconds: </span><span class=\"token number\" style=\"color:#36acaa\">300</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  maximum_bytes_billed: None</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  Connection test: OK connection ok</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h1>A Few Important Details</h1><p>There are a couple of considerations to make when designing dbt models for use with OpenLineage. By following these conventions, you can help OpenLineage collect the most complete metadata possible.</p><p>First, when working with datasets outside of your dbt project, define them in a schema YAML file inside the <code>models/</code> directory:</p><div class=\"language-yaml codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-yaml codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token key atrule\" style=\"color:#00a4db\">version</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token key atrule\" style=\"color:#00a4db\">sources</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token key atrule\" style=\"color:#00a4db\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> stackoverflow</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token key atrule\" style=\"color:#00a4db\">database</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> bigquery</span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\">public</span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\">data</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token key atrule\" style=\"color:#00a4db\">schema</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> stackoverflow</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token key atrule\" style=\"color:#00a4db\">tables</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token key atrule\" style=\"color:#00a4db\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> posts_questions</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token key atrule\" style=\"color:#00a4db\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> posts_answers</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token key atrule\" style=\"color:#00a4db\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> users</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token key atrule\" style=\"color:#00a4db\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> votes</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This contains the name of the external dataset - in this case, <code>bigquery-public-datasets</code>, and lists the tables that are used by the models in this project. It doesn’t matter what the file is named, as long as it ends with <code>.yml</code> and is inside the <code>models/</code> directory, so I called mine <code>schema.yml</code> 🤷‍♂️ If you hardcode dataset and table names into your queries instead, dbt will likely run successfully but dataset metadata will be incompletely collected.</p><p>When writing queries, be sure to use the <code>{{ ref() }}</code> and <code>{{ source() }}</code> jinja functions when referring to data sources. The <code>{{ ref() }}</code> function can be used to refer to tables within the same model, and the <code>{{ source() }}</code> function refers to tables we have defined in <code>schema.yml</code>. That way, dbt will properly keep track of the relationships between datasets. For example, to select from both an external dataset and one in this model:</p><div class=\"language-sql codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">select</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> {{ source</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'stackoverflow'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'posts_answers'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> }}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">where</span><span class=\"token plain\"> parent_id </span><span class=\"token operator\" style=\"color:#393A34\">in</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token keyword\" style=\"color:#00009f\">select</span><span class=\"token plain\"> id </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> {{ ref</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'filtered_questions'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> }} </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h1>Performing a Run</h1><p>Okay! We are ready to perform a run. Before we do, though, there’s one last step we need to take.</p><p>Run <code>dbt docs generate</code>. This will cause dbt to create a <code>target/catalog.json</code> file containing the schemas of each dataset referred to in the models. This file will be parsed by the dbt OpenLineage integration and sent to our Marquez server. If it doesn’t exist, a lineage graph will still be generated but schema details won’t be available in Marquez.</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">dbt docs generate</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Running with </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">dbt</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">0.20</span><span class=\"token plain\">.1</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Found </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> models, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> tests, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> snapshots, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> analyses, </span><span class=\"token number\" style=\"color:#36acaa\">164</span><span class=\"token plain\"> macros, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> operations, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> seed files, </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\"> sources, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> exposures</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:15:10 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> Concurrency: </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"> threads </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">target</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'dev'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:15:10 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:15:10 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> Done.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:15:10 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> Building catalog</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:15:26 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> Catalog written to /Users/rturk/projects/stackostudy/target/catalog.json</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The OpenLineage integration for dbt is implemented as a wrapper, <code>dbt-ol</code>. This wrapper runs dbt and, after it completes, analyzes the <code>target/catalog.json</code>, <code>target/run_results.json</code> and <code>target/manifest.json</code> files. It sends corresponding OpenLineage events to the endpoint specified in the <code>OPENLINEAGE_URL</code> environment variable.</p><p>To run the models: </p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">% </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">OPENLINEAGE_URL</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">http://localhost:5000 dbt-ol run</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Running with </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">dbt</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">0.20</span><span class=\"token plain\">.1</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Found </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> models, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> tests, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> snapshots, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> analyses, </span><span class=\"token number\" style=\"color:#36acaa\">164</span><span class=\"token plain\"> macros, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> operations, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> seed files, </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\"> sources, </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> exposures</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:41 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> Concurrency: </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"> threads </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">target</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'dev'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:41 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:41 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START incremental model stackostudy.filtered_questions</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:46 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created incremental model stackostudy.filtered_questions</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">MERGE </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token plain\"> rows, </span><span class=\"token number\" style=\"color:#36acaa\">34.6</span><span class=\"token plain\"> GB processed</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\">.52s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:46 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START incremental model stackostudy.filtered_answers</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:51 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created incremental model stackostudy.filtered_answers</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">MERGE </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token plain\"> rows, </span><span class=\"token number\" style=\"color:#36acaa\">26.8</span><span class=\"token plain\"> GB processed</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">5</span><span class=\"token plain\">.22s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:35:51 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START incremental model stackostudy.filtered_votes</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:05 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created incremental model stackostudy.filtered_votes</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">MERGE </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token plain\"> rows, </span><span class=\"token number\" style=\"color:#36acaa\">6.5</span><span class=\"token plain\"> GB processed</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">14</span><span class=\"token plain\">.58s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:05 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START incremental model stackostudy.filtered_users</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:21 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created incremental model stackostudy.filtered_users</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">MERGE </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token plain\"> rows, </span><span class=\"token number\" style=\"color:#36acaa\">2.5</span><span class=\"token plain\"> GB processed</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">16</span><span class=\"token plain\">.09s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:21 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">5</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START view model stackostudy.summary_daily</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:23 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">5</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created view model stackostudy.summary_daily</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\">.01s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:23 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">6</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START view model stackostudy.answer_stats</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:23 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">6</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created view model stackostudy.answer_stats</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\">.96s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:23 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START view model stackostudy.question_stats</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:24 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created view model stackostudy.question_stats</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\">.88s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:24 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> START view model stackostudy.user_stats</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">. </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">RUN</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:26 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> of </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> OK created view model stackostudy.user_stats</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">OK </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\">.21s</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:26 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token plain\">:36:26 </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> Finished running </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\"> incremental models, </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token plain\"> view models </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">45</span><span class=\"token plain\">.39s.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Completed successfully</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Done. </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">PASS</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"> </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">WARN</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">ERROR</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">SKIP</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">TOTAL</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Emitted </span><span class=\"token number\" style=\"color:#36acaa\">16</span><span class=\"token plain\"> openlineage events</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Note the output showing the number of OpenLineage events emitted to Marquez.</p><h1>Reviewing the Output</h1><p>If everything ran successfully you should be able to see a list of jobs when you navigate to http://localhost:3000. Upon clicking a job, you will see a lineage graph that looks similar to this:</p><p><img loading=\"lazy\" alt=\"The stackostudy Marquez lineage graph\" src=\"/assets/images/graph-3c5ae5c92d39d6f5756806a69afd2809.png\" width=\"2274\" height=\"1204\" class=\"img_ev3q\"></p><p>Our set of models, previously represented by SQL inside text files, has become more easily digestible. The dependencies between datasets are now completely obvious. Data engineers can throw away their remaining whiteboards, hooray!</p><p>There’s something satisfying about seeing models represented in two-dimensional space. But more importantly, this integration allows us to capture the state of a dbt pipeline as it runs. Using a long-running instance of Marquez (or another OpenLineage-compatible metadata repository) this information can be studied as it changes over time.</p><p>To see how the OpenLineage dbt integration works, visit its <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/dbt\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub repository</a>.</p>",
            "url": "https://openlineage.io/blog/dbt-with-marquez",
            "title": "Using Marquez to Visualize dbt Models",
            "summary": "Each time dbt runs, it generates a trove of metadata about datasets and the work it performs with them. In this post, I’d like to show you how to harvest this metadata and put it to good use.",
            "date_modified": "2021-09-21T00:00:00.000Z",
            "author": {
                "name": "Ross Turk",
                "url": "https://www.github.com/rossturk"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/0.1-release",
            "content_html": "<p>We are pleased to announce the initial release of OpenLineage. This release includes the core specification, data model, clients, and integrations with common data tools.</p><p>We are pleased to announce the initial release of OpenLineage. This is the culmination of a broad community effort, and establishes a common framework for data lineage collection and analysis.</p><p>We want to thank <a href=\"https://github.com/OpenLineage/OpenLineage/graphs/contributors\" target=\"_blank\" rel=\"noopener noreferrer\">all the contributors</a> as well all the projects and companies involved in the design (in alphabetical order): <a href=\"https://airflow.apache.org\" target=\"_blank\" rel=\"noopener noreferrer\">Airflow</a>, <a href=\"https://www.astronomer.io\" target=\"_blank\" rel=\"noopener noreferrer\">Astronomer</a>, <a href=\"https://datakin.com\" target=\"_blank\" rel=\"noopener noreferrer\">Datakin</a>, <a href=\"https://datameshlearning.com\" target=\"_blank\" rel=\"noopener noreferrer\">Data Mesh</a>, <a href=\"https://www.getdbt.com\" target=\"_blank\" rel=\"noopener noreferrer\">dbt</a>, <a href=\"https://egeria.odpi.org\" target=\"_blank\" rel=\"noopener noreferrer\">Egeria</a>, <a href=\"https://getindata.com\" target=\"_blank\" rel=\"noopener noreferrer\">GetInData</a>, <a href=\"https://greatexpectations.io\" target=\"_blank\" rel=\"noopener noreferrer\">Great Expectations</a>, <a href=\"https://iceberg.apache.org\" target=\"_blank\" rel=\"noopener noreferrer\">Iceberg</a> (and others that I am probably forgetting).</p><p>This release includes:</p><ul><li>The initial 1-0-0 release of the <a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.md\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage specification</a></li><li>A core lineage model of Jobs, Runs and Datasets<ul><li>Core facets</li><li>Data Quality Metrics and statistics</li><li>Dataset schema</li><li>Source code location</li><li>SQL</li></ul></li><li>Clients that send OpenLineage events to an HTTP backend<ul><li>Java</li><li>Python</li></ul></li><li><a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration\" target=\"_blank\" rel=\"noopener noreferrer\">Integrations</a> that collect lineage metadata as OpenLineage events<ul><li>Apache Airflow with support for BigQuery, Great Expectations, Postgres, Redshift, Snowflake</li><li>Apache Spark</li><li>dbt</li></ul></li></ul><p>This is only the beginning. We invite everyone interested to <a href=\"https://github.com/OpenLineage/OpenLineage/projects\" target=\"_blank\" rel=\"noopener noreferrer\">consult and contribute to the roadmap</a>. The roadmap currently contains, among other things: adding support for <a href=\"https://github.com/OpenLineage/OpenLineage/issues/152\" target=\"_blank\" rel=\"noopener noreferrer\">Kafka</a>, <a href=\"https://github.com/OpenLineage/OpenLineage/issues/207\" target=\"_blank\" rel=\"noopener noreferrer\">BI dashboards</a>, and <a href=\"https://github.com/OpenLineage/OpenLineage/issues/148\" target=\"_blank\" rel=\"noopener noreferrer\">column level lineage</a>...but you can influence it by participating!</p><p>Follow the <a href=\"https://github.com/OpenLineage/OpenLineage\" target=\"_blank\" rel=\"noopener noreferrer\">repo</a> to stay updated. And, as always, you can <a href=\"http://bit.ly/OpenLineageSlack\" target=\"_blank\" rel=\"noopener noreferrer\">join the conversation</a> on Slack.</p>",
            "url": "https://openlineage.io/blog/0.1-release",
            "title": "Introducing OpenLineage 0.1.0",
            "summary": "We are pleased to announce the initial release of OpenLineage. This release includes the core specification, data model, clients, and integrations with common data tools.",
            "date_modified": "2021-09-03T00:00:00.000Z",
            "author": {
                "name": "Julien Le Dem",
                "url": "https://www.github.com/julienledem/"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/dataquality_expectations_facet",
            "content_html": "<p>Good data is paramount to making good decisions- but how can you trust the quality of your data and its dependencies?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-parable-of-bad-data\">The Parable of Bad Data<a href=\"#the-parable-of-bad-data\" class=\"hash-link\" aria-label=\"Direct link to The Parable of Bad Data\" title=\"Direct link to The Parable of Bad Data\">​</a></h2><p>Several years ago, I worked as a developer on the experimentation team at Amazon, which owned the code libraries and\ndata processing systems that supported experimentation on the amazon.com website (among other systems). Developers used\nour libraries and a microservice we maintained to “trigger” an experiment for a customer- that is, the customer was\nrandomized into either control or treatment and the resulting assignment was recorded in the logs, which my team\nconsumed in the analysis of the data later on. One of the interesting parts of my job was helping our users diagnose\nproblems with their experiment results.</p><p>A classic example was a Kindle developer who was prototyping a new feature for book pages that would make the site more\nengaging for Kindle owners- perhaps a “look inside” feature, or maybe some better recommendations. A customer would come\nto the website and the developer’s code would determine if the customer belonged in <em>Control</em> or <em>Treatment</em>. If <em>Control</em>,\nthe assignment was logged and no feature was shown- the site looked to the customer as it always had. But if the\nassignment was <em>Treatment</em>, the code would check the customer’s account to determine if they owned a Kindle device and,\nif yes, the assignment was logged and the customer saw the fancy new feature on the books page. </p><p>The experiment showed the developer’s feature would be wildly successful- an increase of over $10 in Kindle book\npurchases per customer on average over the course of the 2 weeks the experiment ran- projected to be tens of billions of\ndollars in annual revenue due to this one feature!</p><p>With data in hand, the developer requested tons of resources to build the feature up to production standards. After\nthree months and two dozen people’s labor, the feature was ready to ship. The developers deployed their new service and\nthe incredible feature was unleashed. For days afterward, everyone watched the metrics dashboards waiting for that\nhockey stick uptick in the revenue graphs 📈. But it never materialized! The graph was flat. No change at all! Weeks\nwent by. Nothing. How could the experiment results be so far from reality?</p><p>Of course, if you’ve ever run A/B tests, you probably already recognized the developer’s mistake. In their randomization\nlogic, customers who were assigned control were logged and forgotten, while customers who were assigned treatment were\nlogged only after validating that they owned a Kindle device. It turned out the total number of customers who came to\namazon.com was far greater than the number of customers who owned a Kindle device. And if you divide the total sum of\nKindle book sales by all of the amazon.com customers, regardless of whether they own a Kindle device, that average\nwill come out quite a lot lower than if you calculate the average Kindle book revenue from only customers who own Kindles.</p><p><img loading=\"lazy\" alt=\"Yoda says, poorly run experiments lead to bad data. Bad data leads to bad insights. Bad insights lead to bad decisions. Bad decisions lead to suffering\" src=\"/assets/images/bad_experiment-8384ed6a25865b9e0c8142c741da3f42.png\" width=\"558\" height=\"447\" class=\"img_ev3q\"></p><p>In reality, this story never happened. Why? Because we knew the adage- Bad Data is Worse than No Data. In the story,\npeople took data of poor quality and used it to justify bad decisions. In our system, we checked the quality of the data\nand, if we detected assignment imbalances, we simply invalidated the experiment and hid the results. Over the years, I\ncan’t count the number of times our users asked us to just give them partial results or just exclude certain segments or\nto let them know if things were “trending” the right way. Our policy was firm- if we couldn’t trust the quality of the\ndata, the results were meaningless and we would not surface them in our system.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"data-driven-depends-on-data-quality\">Data-Driven Depends On Data-Quality<a href=\"#data-driven-depends-on-data-quality\" class=\"hash-link\" aria-label=\"Direct link to Data-Driven Depends On Data-Quality\" title=\"Direct link to Data-Driven Depends On Data-Quality\">​</a></h2><p>Today, most businesses consider themselves data-driven. The stereotype of the maverick CEO leading with his or her gut\nis mostly antiquated, with a handful of exceptions. And yet, even though people know intellectually that data is only\nuseful if it is correct, we tend to stop digging once we find some data that confirms our pre-existing assumptions. We\njustify bad decisions by claiming that they are “data-based” without ever validating the quality of our sources. Where\ndid that data come from? How old is it? Is the logic that generated it correct? Is it derived from some other dataset?\nWhat is the quality of that dataset?\n<img loading=\"lazy\" alt=\"Data-driven: You keep using that word. I do not think it means what you think it means\" src=\"/assets/images/data_driven-5f55fde8883a9dc5147edff1d6ebe117.png\" width=\"500\" height=\"432\" class=\"img_ev3q\"></p><p>Thankfully, data quality validation is becoming more and more common in data engineering organizations. In part, this is\ndue to the prevalence of new tools and their integration with common workflow engines which we already use to schedule\nthe jobs that generate and process our data. One such tool that has been gaining in popularity is called <a href=\"https://docs.greatexpectations.io\" target=\"_blank\" rel=\"noopener noreferrer\"><em>Great\nExpectations</em></a>, a Python-based framework for defining assertions about data sets\nwhich easily integrates with existing workflow tools, such as Airflow. </p><p>In software development, testing the behavior of our code with unit and integration tests has been common practice for\nyears. Similarly, using Great Expectations, a data engineer can assert that a dataset has a row count that falls within\nan expected range, that column values are not null, or that values match a specified regular expression. One can even\ncreate custom expectations, such as validating that the number of records in treatment is roughly the same as the number\nof records in control (this post is not intended to be an in-depth tutorial on setting up Great Expectations; if you\nwant to read more on its capabilities and to get started, I recommend the going through\nthe <a href=\"https://docs.greatexpectations.io/en/latest/guides/tutorials/quick_start.html\" target=\"_blank\" rel=\"noopener noreferrer\">Quick Start tutorial</a>).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"a-sample-assertion-suite\">A Sample Assertion Suite<a href=\"#a-sample-assertion-suite\" class=\"hash-link\" aria-label=\"Direct link to A Sample Assertion Suite\" title=\"Direct link to A Sample Assertion Suite\">​</a></h3><p>As a simple example, imagine a table of new customers that you need to import into your Data Warehouse. Before\nimporting, we want to check the data quality of this new batch of customers. One example suite of assertions we could\ntest is below:</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"data_asset_type\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Dataset\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"expectation_suite_name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"customers_suite\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"expectations\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"expectation_type\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_table_row_count_to_be_between\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"kwargs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"max_value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1000</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"min_value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">100</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"meta\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"expectation_type\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_table_column_count_to_equal\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"kwargs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"meta\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"expectation_type\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_table_columns_to_match_ordered_list\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"kwargs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"column_list\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"created_at\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"updated_at\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"email\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"address\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"phone\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"city_id\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"meta\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"expectation_type\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_column_values_to_be_unique\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"kwargs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"column\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"email\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"meta\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"meta\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This sample suite contains 4 data quality assertions- that the dataset contains between 100 and 1000 rows, that the\ntable contains exactly 8 columns, that they match the explicit list of column names we expect, and that the <code>email</code> column\ncontains only distinct values.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"adding-data-quality-checks-to-an-airflow-pipeline\">Adding Data Quality Checks to an Airflow pipeline<a href=\"#adding-data-quality-checks-to-an-airflow-pipeline\" class=\"hash-link\" aria-label=\"Direct link to Adding Data Quality Checks to an Airflow pipeline\" title=\"Direct link to Adding Data Quality Checks to an Airflow pipeline\">​</a></h3><p>With a suite of assertions in hand, we can update our Airflow DAG to only import data into our Data Warehouse if it\nmatches our expectations. A simple DAG might look like this</p><div class=\"language-python codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-python codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> airflow </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> DAG</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> airflow</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">contrib</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">operators</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">bigquery_operator </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> BigQueryOperator</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> airflow</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">utils</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">dates </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> days_ago</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> great_expectations_provider</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">operators</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">great_expectations </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> GreatExpectationsOperator</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">dag </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> DAG</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">'etl_customers'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    schedule_interval</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'@daily'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    catchup</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token boolean\" style=\"color:#36acaa\">False</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    default_args</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">default_args</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    description</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'Loads newly registered customers daily.'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">t1 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> BigQueryOperator</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    task_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'if_not_exists'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    sql</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">'''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  CREATE TABLE IF NOT EXISTS food_delivery.customers (</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  id         INT64,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  created_at TIME,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  updated_at TIME,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  name       STRING,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  email      STRING,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  address    STRING,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  phone      STRING,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  city_id    INT64</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  )</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  '''</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    use_legacy_sql</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token boolean\" style=\"color:#36acaa\">False</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    dag</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">dag</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">t2 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> GreatExpectationsOperator</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    expectation_suite_name</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'customers_suite'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    batch_kwargs</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">'table'</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'tmp_customers'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">'datasource'</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'food_delivery_db'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    dag</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">dag</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    task_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'customers_expectation'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">t3 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> BigQueryOperator</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    task_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'etl'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    sql</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">'''</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    SELECT id, created_at, updated_at, name, email, address, phone, city_id</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    FROM food_delivery.tmp_customers</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">  '''</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    destination_dataset_table</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">'airflow_marquez.food_delivery.customers'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    use_legacy_sql</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token boolean\" style=\"color:#36acaa\">False</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    dag</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\">dag</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">t1 </span><span class=\"token operator\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token plain\"> t2 </span><span class=\"token operator\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token plain\"> t3</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This is great! Our DAG creates our target table in BigQuery (if it doesn’t already exist), checks the quality of the\n<code>tmp_customers</code> table by running the <code>customers_suite</code> defined earlier, then imports <em>only if all</em> of the data quality\nchecks pass.</p><p>And thus ended all data quality problems forever.</p><p>Just kidding.</p><p>Because reality is never so straightforward. In reality, the recommendations team wanted to start generating\nrecommendations for new customers without waiting until the next day, so they built a data pipeline to start consuming\nfrom the <code>tmp_customers</code> table directly. And the supply chain folks wanted to start detecting what recipes are gaining\npopularity so they can predict what supplies will need to be restocked sooner, so they started reading from the both\n<code>tmp_orders</code> table and the <code>tmp_customers</code> table before they’re available in the DW. Oh, and the scheduling team needs\nan idea of the geography of the various customers that are ordering and what the distances are between restaurants and\ncustomers so they can get the right number of drivers in the right neighborhoods and of course the marketing team wants\nto use all of this data to make predictions about how much to spend on the right search engine and social media ads and\nthey absolutely cannot wait until tomorrow at 8AM to update their models.\n<img loading=\"lazy\" alt=\"I am the gatekeeper\" src=\"/assets/images/gatekeeper-619fdddfc62d56485e393cd9adb059f4.png\" width=\"640\" height=\"360\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tracing-data-quality-with-openlineage-facets\">Tracing Data Quality With OpenLineage Facets<a href=\"#tracing-data-quality-with-openlineage-facets\" class=\"hash-link\" aria-label=\"Direct link to Tracing Data Quality With OpenLineage Facets\" title=\"Direct link to Tracing Data Quality With OpenLineage Facets\">​</a></h2><p>Users are never satisfied with the way things are supposed to work. There’s always a reason to work around gatekeepers-\noftentimes, very good reasons that have real business impact- and data engineering is full of creative and resourceful\npeople who absolutely will find a way to get at that data. Even at Amazon, the experiment data was available in the\nclick stream logs, so resourceful users could (and sometimes did) calculate their own experiment results if they really\nwanted to. So it’s important not just to have data quality checks, but to trace the impact of that data throughout an\norganization.</p><p>The OpenLineage standard uses <a href=\"https://openlineage.io/blog/extending-with-facets/\" target=\"_blank\" rel=\"noopener noreferrer\">Facets</a> to augment the core data\nmodel with useful information about the jobs, runs, and datasets reported on. One interesting detail about facets is\nthat they can be attached to an entity after the fact. In the Marquez reference implementation, a dataset version is\ncreated every time a job run writes to or otherwise modifies a dataset. <em>Output</em> facets, such as the new record count or\nthe number of bytes written, are attached directly to the dataset version when the job run completes. But consuming\njobs can also attach facets to the version of the dataset that exists at the start time of the job’s execution.</p><p>In the OpenLineage Airflow integration, Great Expectations tasks, such as the one in our example DAG above, are\nevaluated after they run and the expectation results (as well as some other data quality metrics) are collected\ninto a\n<a href=\"https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json#L446-L499\" target=\"_blank\" rel=\"noopener noreferrer\">DataQuality Metrics Input Dataset Facet</a>\n, which is reported to the server along with the rest of the lineage metadata. In Marquez, we recognize the version of\nthe dataset that was read by the job run and the data quality metadata is permanently associated with that dataset\nversion. The impact of this is that any job that reads that data, whether it happens before or after the dataset quality\nassertion, can be linked to the data quality facet recorded (provided that the dataset version doesn’t change between\nthe data quality check and the read job).</p><p>This integration is extremely straightforward to get working. If you already have the Marquez Airflow DAG running in\nyour Airflow workflows, there’s nothing to do! Great Expectations tasks are already being detected and the metrics and\nassertion statuses are already being reported to your configured instance of Marquez.</p><p>If you’ve never integrated Marquez with your Airflow setup, add a couple\nof <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/airflow#configuration\" target=\"_blank\" rel=\"noopener noreferrer\">environment variables</a>\nand <a href=\"https://github.com/OpenLineage/OpenLineage/tree/main/integration/airflow#usage\" target=\"_blank\" rel=\"noopener noreferrer\">change one line of code</a>:</p><div class=\"language-diff codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-diff codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token deleted-sign deleted prefix deleted\" style=\"color:#d73a49\">-</span><span class=\"token deleted-sign deleted line\" style=\"color:#d73a49\"> from airflow import DAG</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token deleted-sign deleted line\" style=\"color:#d73a49\"></span><span class=\"token inserted-sign inserted prefix inserted\" style=\"color:#36acaa\">+</span><span class=\"token inserted-sign inserted line\" style=\"color:#36acaa\"> from marquez_airflow import DAG</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token inserted-sign inserted line\" style=\"color:#36acaa\"></span><span class=\"token plain\">from airflow.contrib.operators.bigquery_operator import BigQueryOperator</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">from airflow.utils.dates import days_ago</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">from great_expectations_provider.operators.great_expectations import GreatExpectationsOperator</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>I’ve previously written\nabout <a href=\"https://openlineage.io/blog/explore-lineage-api/\" target=\"_blank\" rel=\"noopener noreferrer\">how to determine the version of the dataset that was read by a particular job run</a>\n. With Great Expectations now integrated into my Airflow DAG, I want to see what the data quality metrics are for the\nlatest version of the <code>customers</code> dataset that was processed by my ETL job. I’ll hit my datakin demo instance:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://demo.datakin.com/api/v1/namespaces/food_delivery/jobs/etl.etl_delivery_7_days\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">less</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"etl.etl_delivery_7_days\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"BATCH\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"etl.etl_delivery_7_days\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"createdAt\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-07-23T19:32:03.401782Z\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"updatedAt\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-08-06T05:11:03.604573Z\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"inputs\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.customers\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    //</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"latestRun\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1043e596-ccb8-4bfb-8fc2-7ee066253248\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"jobVersion\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"etl.etl_delivery_7_days\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"bc6c294b-b0eb-3160-a06d-1ff9ba3a4e1c\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"inputVersions\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.customers\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"4c33f292-40a9-304d-b43f-c7ffb2256e7f\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      // </span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    // </span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>With the input version of the <code>public.customers</code> dataset, I can query Marquez for all the metadata we have about that\nspecific version of the dataset.</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://demo.datakin.com/api/v1/namespaces/food_delivery/datasets/public.customers/versions/4c33f292-40a9-304d-b43f-c7ffb2256e7f\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">less</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.customers\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"DB_TABLE\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.customers\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"physicalName\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.customers\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"createdAt\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-08-06T05:02:59.189118Z\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"4c33f292-40a9-304d-b43f-c7ffb2256e7f\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"sourceName\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"analytics_db\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"fields\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"INTEGER\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"tags\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"description\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"The unique ID of the customer.\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    // </span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\">.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"facets\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"stats\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"size\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">53362712</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"rowCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4969</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"dataSource\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"uri\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"jdbc:postgresql://localhost:3306/deliveries\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"analytics_db\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"description\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"A table for customers.\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"dataQuality\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"bytes\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">53362712</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"rowCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4969</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"columnMetrics\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"nullCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"distinctCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4969</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"nullCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"distinctCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4969</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token string\" style=\"color:#e3116c\">\"email\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"nullCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"distinctCount\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4969</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"greatExpectations_assertions\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string\" style=\"color:#e3116c\">\"assertions\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"success\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> true,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"expectationType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_table_row_count_to_be_between\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"success\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> true,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"expectationType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_column_to_exist\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"success\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> true,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"columnId\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"expectationType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_column_values_to_be_unique\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"success\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> true,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"columnId\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"expectationType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_column_values_to_not_be_null\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"success\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> true,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"columnId\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"created_at\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token string\" style=\"color:#e3116c\">\"expectationType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"expect_column_values_to_not_be_null\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        //</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token punctuation\" style=\"color:#393A34\">..</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Note the <code>facets</code> field contains several properties- <code>stats</code>, <code>dataSource</code>, <code>description</code>, <code>dataQuality</code>\nand <code>greatExpectations_assertions</code>. Each of those describes some attribute about the dataset version. Some of the facets\nare attached at write-time, some are attached later- when the dataset is read.</p><p>In our <a href=\"https://demo.datakin.com\" target=\"_blank\" rel=\"noopener noreferrer\">Datakin demo</a>, we have a lot more assertions than what I included in the sample suite\nabove and that can be seen in this response. In addition to counting rows and columns, we also validate that id columns\nare unique and non-null, timestamps fall within specified ranges (did you know that if you accidentally write a\ntimestamp too far in the future, certain JDBC drivers will overflow the Calendar instance they use for converting\ntimezones?), and emails match expected regular expressions.</p><p>With the ability to attach data quality facets to dataset versions and the ability to trace the specific versions of\ndatasets read by and written to by specific job runs, I can trust whether the data I’m looking at is good data or bad\ndata. And if my data quality checks fail, I can find out whether I need to contact somebody over in marketing or\nrecommendations to <a href=\"https://openlineage.io/blog/backfilling-airflow-dags-using-marquez/\" target=\"_blank\" rel=\"noopener noreferrer\">backfill their pipelines</a> once\nthe issue has been corrected.</p><p><img loading=\"lazy\" alt=\"Good data, bad data\" src=\"/assets/images/bad_data-2dfc03116878cb8acc920569c17bed30.png\" width=\"600\" height=\"315\" class=\"img_ev3q\"></p><p>Whether your business is an e-commerce shop that wants to improve its customer experience or a music streaming service\nthat wants to make better listening recommendations or an autonomous vehicle company trying to improve the car’s ability\nto detect double parked vehicles, the quality of your data is paramount to making good decisions. Quality testing tools\nare out there and, chances are, they already work with the pipeline workflow tool you’re using today. And with\nOpenLineage support, you can be confident in the quality of the data at every stage in your pipeline.</p>",
            "url": "https://openlineage.io/blog/dataquality_expectations_facet",
            "title": "Expecting Great Quality with OpenLineage Facets",
            "summary": "Good data is paramount to making good decisions- but how can you trust the quality of your data and its dependencies?",
            "date_modified": "2021-08-12T00:00:00.000Z",
            "author": {
                "name": "Michael Collado",
                "url": "https://www.github.com/collado-mike"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/extending-with-facets",
            "content_html": "<p>Facets are a self-contained definition of one aspect of a job, dataset, or run at the time the event happened. They make the OpenLineage model extensible.</p><h1>Building consensus</h1><p>OpenLineage is an open source project, part of the LFAI&amp;Data foundation, that standardizes lineage collection in the data ecosystem. In this increasingly rich ecosystem - that includes SQL-driven data warehouses, programmatic data processing frameworks like Spark or Pandas, and machine learning - it is near-impossible to maintain a clear and sane view of data lineage across everything without the collaboration of the ecosystem around a shared standard. Open source collaboration is a very powerful mechanism that can produce widely-adopted standard APIs.</p><p><a href=\"https://openlineage.io/blog/openlineage-takes-inspiration-from-opentelemetry/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage draws a clear parallel with OpenTelemetry</a> which provides a standard API to collect traces and metrics in the service world. It also draws from the experience of the Apache Parquet and Apache Arrow projects, which aim to define standard columnar data representations at-rest and in-memory.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"open-source\">Open Source<a href=\"#open-source\" class=\"hash-link\" aria-label=\"Direct link to Open Source\" title=\"Direct link to Open Source\">​</a></h2><p>Standardizing an API through open source collaboration can be challenging. On one end, you need to get input and feedback from the people who will use the API in different contexts. On the other, you want to avoid getting stuck in disagreements arising from the different and sometimes incompatible viewpoints that inevitably drive these discussions. Thankfully, there are mechanisms to help organize and decouple those disagreements and drive discussions towards conclusion.</p><p>A community driven open source project works very differently from a product you buy off the shelf. At the very moment you start using it - maybe starting by reading the doc - you become part of the community and start sharing a little bit of ownership. As with any software, you might encounter problems... but in this case, you immediately become part of the solution. In a healthy community, how much of the solution you become is entirely up to you.</p><p>Maybe you spotted a typo and reported it. Maybe you opened a pull request to fix it. You might propose an improvement, or even build one yourself. All of those contributions, no matter how small, make the project better for everyone. That very powerful flywheel motion gathers momentum and drives very successful open source projects.</p><p>One of the success factors of such an open source project is how much it can minimize the friction for new community members who want to contribute. The easier it is to contribute, the faster the project will acquire momentum. It’s not about getting other people’s input, it’s about giving them a share of ownership and encouraging them to drive the areas where they can most effectively contribute.</p><p>In a multi-faceted domain like data lineage, enabling others to lead discussions is critical.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"making-progress\">Making progress<a href=\"#making-progress\" class=\"hash-link\" aria-label=\"Direct link to Making progress\" title=\"Direct link to Making progress\">​</a></h2><p>In this context, we need mechanisms to converge often and make incremental progress. </p><p>You definitely want to avoid having a big monolithic spec that takes a long time to reach consensus on - if you ever do. A discussion around a large ultra-spec that combines specifications from multiple related domains will lose steam. We need to keep conversations focused on the topics that individual contributors care about. It is critical to subdivide the specification in concrete and granular decision points where consistent and significant progress can be made.</p><p>Not everyone will care about all the aspects of the specification, and that is fine. We need to make sure contributors can easily focus on the aspects they do care about. This need for a very granular decision making process, one where we can make progress independently on different aspects of the spec, leads naturally into decomposition of the specification into smaller independent subsets.</p><p>This will keep conversations focused and moving. It also decouples workstreams where consensus can be reached from those that are more contentious. </p><p>For example the contributors interested in data quality might be different from the ones interested in column-level lineage or query performance.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"embracing-different-points-of-view\">Embracing different points of view<a href=\"#embracing-different-points-of-view\" class=\"hash-link\" aria-label=\"Direct link to Embracing different points of view\" title=\"Direct link to Embracing different points of view\">​</a></h2><p>Depending on their perspective, contributors may have very different opinions on how to model a certain aspect of data. Or they may have different use-cases in mind. Instead of pitting different view-points against each other and forcing alignment on every point, it is sometimes beneficial to allow them to be expressed separately. </p><p>For example, when you ask a data practitioner \"what is data lineage?\" they may have very different definitions for it. </p><ul><li>Some care about how a specific metric is derived from the raw data, and need column level lineage. </li><li>Some will care about compliance with privacy regulations and need relevant metadata to locate sensitive data and trace its movement.</li><li>Some will care about the reliability of data delivery and need data freshness and quality metrics - in particular, how they change over time in correlation with changes in the system.</li></ul><p>All those are valid view points that deserve to be captured appropriately and can be defined independently in a framework that allows them to cohabitate.</p><h1>Mechanics</h1><p>OpenLineage is purposefully providing a faceted model around a minimalistic core spec to enable this granular decision making, minimize friction in contributing, and favor community-driven improvements.</p><p>The core spec focuses on high-level modeling of jobs, runs, datasets, and their relation. Each OpenLineage event refers to a run of a job and its input and output datasets.</p><ul><li>A job is a recurring transformation that reads from datasets and writes to datasets. It has a unique name that identifies it across runs.</li><li>A run identifies an individual execution of a job. It might be an incremental or full batch process. It could also be a streaming job.</li><li>A dataset could be a table in a warehouse or a folder in a blob store. It is consumed or written to by jobs.</li></ul><p><strong>Facets</strong> are pieces of metadata that can be attached to those core entities. Facets have their own schema and capture various aspects of those entities.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"facets-are-individual-atomic-specs\">Facets are individual atomic specs<a href=\"#facets-are-individual-atomic-specs\" class=\"hash-link\" aria-label=\"Direct link to Facets are individual atomic specs\" title=\"Direct link to Facets are individual atomic specs\">​</a></h2><p>Like the core model, facets are defined by a <code>JSONSchema</code>. They are a self-contained definition of one aspect of a job, a dataset, or a run at the time the event happened. They make the model extensible. The notion of facets is powerful because it makes it easy to add more information to the model - you just define a new facet. There’s a clear compatibility model when introducing a new facet, since fields that are defined at the same time are grouped together.</p><p>For example, there’s a facet to capture the schema of a dataset. There’s a facet to capture the version of a job in source control. There’s a facet to capture the parameters of a run. Facets are optional and may not apply to every instance of an entity.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"facets-enable-specialization-of-models\">Facets enable specialization of models<a href=\"#facets-enable-specialization-of-models\" class=\"hash-link\" aria-label=\"Direct link to Facets enable specialization of models\" title=\"Direct link to Facets enable specialization of models\">​</a></h2><p>The core entities are fairly generic. A dataset might be a table in a warehouse or a topic in a Kafka broker. A job might be a SQL query or a machine learning training job.</p><p>This generic high level model of lineage can be specialized by adding facets for that particular type of entity. At-rest data might be versioned, enabling transactions at the run level. Streaming data might capture the offsets and partitions where a streaming job started reading. Datasets might have a schema like a warehouse table, or not (for example, in the case of a machine learning model).</p><p>By capturing a generic representation of lineage and allowing progressive specialization of those entities, this approach offers a lot of flexibility. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"facets-allow-expressing-different-point-of-views\">Facets allow expressing different point of views<a href=\"#facets-allow-expressing-different-point-of-views\" class=\"hash-link\" aria-label=\"Direct link to Facets allow expressing different point of views\" title=\"Direct link to Facets allow expressing different point of views\">​</a></h2><p>There can be divergent points of view on how to model a certain aspect of metadata. Facets allow these models to cohabitate in a common framework.</p><p>One example of this is capturing the physical plan of a query execution. Each data warehouse might have its own unique way of describing execution plans. It is very valuable to be able to capture both a precise (but maybe too specific) model as well as a generic (but possibly imprecise or lossy) representation. They can be captured as two different facets. This also gives us opportunities to define several competing models and use the resulting information to collaborate on a more unified and generic representation. This emergent modeling is actually extremely useful in an open source setting, and as a way to make incremental progress.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"custom-facets-make-the-model-decentralized\">Custom facets make the model decentralized<a href=\"#custom-facets-make-the-model-decentralized\" class=\"hash-link\" aria-label=\"Direct link to Custom facets make the model decentralized\" title=\"Direct link to Custom facets make the model decentralized\">​</a></h2><p>Most importantly, the OpenLineage spec allows custom facets that are defined elsewhere, completely outside of the spec. This allows others to extend the spec as-needed without having to coordinate with anyone or ask any permission from a governing body. They can make their own opinionated definition of an aspect of metadata. All that is required is that they publish a <code>JSONSchema</code> that describes their facets, prefixed by a unique namespace. This lowers the barrier to experimentation and encourages incremental progress by making the experimentation of others visible. The facets that become broadly useful can eventually be represented in the core spec.</p><h1>Contribute!</h1><p>As a community, we’ve done our best to minimize friction when experimenting with or contributing to OpenLineage. We’re looking forward to seeing you join us as we make data lineage transparent across the data ecosystem.</p>",
            "url": "https://openlineage.io/blog/extending-with-facets",
            "title": "Extending OpenLineage with Facets",
            "summary": "Facets are a self-contained definition of one aspect of a job, dataset, or run at the time the event happened. They make the OpenLineage model extensible.",
            "date_modified": "2021-07-27T00:00:00.000Z",
            "author": {
                "name": "Julien Le Dem",
                "url": "https://www.github.com/julienledem/"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/joining-lfai",
            "content_html": "<p>Becoming a LF AI &amp; Data project ensures that OpenLineage can never belong to a company, or even a group of developers; it belongs to us all.</p><p>I am pleased to share that the OpenLineage project is joining the <a href=\"https://lfaidata.foundation\" target=\"_blank\" rel=\"noopener noreferrer\">LF AI &amp; Data foundation</a> as a Sandbox Project! This is an important step towards the development of an open ecosystem for lineage metadata collection.</p><p>The LF AI &amp; Data Foundation provides a vendor-neutral governance structure that can help the project grow broad industry collaboration. Even more importantly, becoming a LF AI &amp; Data project ensures that OpenLineage can never belong to a company, or even a group of developers; it belongs to us all. The license can’t be changed to protect the business interests of a subset of the community. That’s important, because in order to succeed we need a whole lot of software projects - open source and proprietary - to adopt this standard and allow their users to begin collecting lineage metadata.</p><p>In the <a href=\"https://lfaidata.foundation/blog/2021/07/22/openlineage-joins-lf-ai-data-as-new-sandbox-project/\" target=\"_blank\" rel=\"noopener noreferrer\">full announcement</a>, Ibrahim Haddad, Executive Director of LF AI &amp; Data, writes:</p><blockquote><p>“We look forward to working with the OpenLineage project to grow the project’s footprint in the ecosystem, expand its community of adopters and contributors, and to foster the creation of collaboration opportunities with our members and other related projects.”</p></blockquote>",
            "url": "https://openlineage.io/blog/joining-lfai",
            "title": "OpenLineage joins the LF AI & Data Foundation",
            "summary": "Becoming a LF AI & Data project ensures that OpenLineage can never belong to a company, or even a group of developers; it belongs to us all.",
            "date_modified": "2021-07-22T00:00:00.000Z",
            "author": {
                "name": "Julien Le Dem",
                "url": "https://www.github.com/julienledem/"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/explore-lineage-api",
            "content_html": "<p>Taking advantage of recent changes to the Marquez API, this post shows how to diagnose job failures and explore the impact of code changes on downstream dependents.</p><p>Managing a data pipeline means tracking changes. Sometimes changes to your code, sometimes changes to\nsomebody else’s schema, sometimes to the contents of the data itself. Sometimes you need to\ntrace the root cause of a problem- somebody changed an int to a string and all the downstream consumers\nbroke.</p><p>Sometimes you want to make a change and see how your consumers were affected- do all the jobs\nrun significantly faster after you filter out <!-- -->“<!-- -->unused<!-- -->”<!-- --> records? Or did somebody <a href=\"https://www.hyrumslaw.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rely on those\n<!-- -->“<!-- -->unused<!-- -->”<!-- --> records</a> to be present in the data?</p><p>Do the recommendation models perform better after you \"improved\" the data cleaning job upstream? Can\nyou be certain it was your change that improved the performance?</p><p>Sometimes the data itself just looks wrong and you need a way to verify that nothing has broken. Why\nwas there a huge drop in traffic to the food delivery site yesterday? Was there an outage you didn't\nhear about? Competitors outbidding your ads? Or did the website developers simply stop logging some\ncritical event, corrupting every table in your data warehouse?</p><p>Typically, we think of data lineage in static terms-</p><blockquote><p>Job A produces Dataset X, which is consumed by Job B which joins it with Dataset Y and produces\nDataset Z, which is consumed by<!-- -->…</p></blockquote><p>It’s a map\nthat we use to get our heads around the dependencies that exist between the datasets we use to make\ngood decisions (how much inventory should I stock in the warehouse to ensure customers get timely\ndeliveries?) or to make technical features our customers will love (how can I compile the perfect\nroad trip playlist given this customer's listening history?).</p><p>But data lineage is much more than a static map of inputs and outputs. <em>Real time</em> lineage and faceted\nmetadata give us visibility into how the map changes over time and even allow us to look back in\nhistory to see how changes in one part of the map cause ripples in other areas. Taking advantage of some\nrecent changes to the Marquez API, we’ll demonstrate how to diagnose job failures and how to explore\nthe impact of code changes on downstream dependents.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getting-started\">Getting Started<a href=\"#getting-started\" class=\"hash-link\" aria-label=\"Direct link to Getting Started\" title=\"Direct link to Getting Started\">​</a></h2><p>To get started, we need a running instance of Marquez with a little bit of seed data. For these\nexercises, we'll assume you have a terminal with the following programs installed</p><ul><li><a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\">docker</a></li><li><a href=\"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git\" target=\"_blank\" rel=\"noopener noreferrer\">git</a></li><li><a href=\"https://curl.se/download.html\" target=\"_blank\" rel=\"noopener noreferrer\">curl</a></li><li><a href=\"https://stedolan.github.io/jq/download/\" target=\"_blank\" rel=\"noopener noreferrer\">jq</a></li><li>less (optional)</li></ul><p>Download and install any dependencies you don't already have. You'll need the docker daemon running\n(see the docs for your platform to get that started). Then check out the Marquez repository\nfrom Github and run the docker image locally:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">git</span><span class=\"token plain\"> clone https://github.com/MarquezProject/marquez</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">cd</span><span class=\"token plain\"> marquez</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">./docker/up.sh --seed</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This script uses <code>docker-compose</code> to spin up a self-contained installation of Marquez, including a\nlocal database container, web frontend, and service instance. Additionally, it populates a set of\nsample data that's useful for exploring the API. You'll know when the seed job is done when you see\nthe following line in the output logs</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">seed-marquez-with-metadata exited with code 0</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Once the seed job is done, we can begin exploring the API.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-jobs\">The Jobs<a href=\"#the-jobs\" class=\"hash-link\" aria-label=\"Direct link to The Jobs\" title=\"Direct link to The Jobs\">​</a></h3><p>In a separate terminal window, type the following command</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/jobs/\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">less</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The output returned should look something like the following</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property\" style=\"color:#36acaa\">\"jobs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"example.delivery_times_7_days\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"type\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"BATCH\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"example.delivery_times_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"createdAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T21:50:39.229759Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"updatedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:45.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"inputs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.delivery_7_days\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"outputs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"location\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://github.com/example/jobs/blob/2294bc15eb49071f38425dc927e48655530a2f2e/delivery_times_7_days.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"context\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"sql\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"INSERT INTO top_delivery_times (order_id, order_placed_on, order_dispatched_on, order_delivered_on, order_delivery_time,\\n    customer_email, restaurant_id, driver_id)\\n  SELECT order_id, order_placed_on, order_delivered_on, DATEDIFF(minute, order_placed_on, order_delivered_on) AS order_delivery_time,\\n    customer_email, restaurant_id, driver_id\\n    FROM delivery_7_days\\nGROUP BY restaurant_id\\nORDER BY order_delivery_time DESC\\n   LIMIT 1;\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"description\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Determine weekly top delivery times by restaurant.\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"latestRun\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"f4fada30-dfcc-400c-9391-2d7a506b9139\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"createdAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T21:50:59.509739Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"updatedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:45.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"nominalStartTime\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:02:00Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"nominalEndTime\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:00Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"FAILED\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"startedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:02:39.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"endedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:45.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"durationMs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">186000</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"args\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"jobVersion\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"example.delivery_times_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"version\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"e9eafa5b-e334-358d-a3b4-61c8d3de75f3\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"inputVersions\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.delivery_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"version\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"a40ec54f-b8e1-35f7-b868-58b27383b5ff\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"outputVersions\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"context\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"sql\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"INSERT INTO top_delivery_times (order_id, order_placed_on, order_dispatched_on, order_delivered_on, order_delivery_time,\\n    customer_email, restaurant_id, driver_id)\\n  SELECT order_id, order_placed_on, order_delivered_on, DATEDIFF(minute, order_placed_on, order_delivered_on) AS order_delivery_time,\\n    customer_email, restaurant_id, driver_id\\n    FROM delivery_7_days\\nGROUP BY restaurant_id\\nORDER BY order_delivery_time DESC\\n   LIMIT 1;\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"facets\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"facets\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>For brevity, I only included a single job- in this case, a job called <code>example.delivery_times_7_days</code>\nin the <code>food_delivery</code> namespace (which we specified in the curl command). Your output will include\nmany more jobs.</p><p>There are a few things in the job output worth noting. The first is the id of the job:</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"example.delivery_times_7_days\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>There is no version information in the id, as this API refers to the unversioned job information. The\njob itself is mutable, in the sense that each time you query the API, the content of the job may\nchange as new versions are created.</p><p>The response includes the set of input and output datasets, as well as the current job source location:</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"inputs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.delivery_7_days\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"outputs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"location\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://github.com/example/jobs/blob/2294bc15eb49071f38425dc927e48655530a2f2e/delivery_times_7_days.py\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>If a new version of the job is created, any or all of these fields can change.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-job-run\">The Job Run<a href=\"#the-job-run\" class=\"hash-link\" aria-label=\"Direct link to The Job Run\" title=\"Direct link to The Job Run\">​</a></h3><p>The next thing to notice is the <code>latestRun</code> field. This includes information about the latest Run\nof this job:</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"latestRun\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"f4fada30-dfcc-400c-9391-2d7a506b9139\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"createdAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T21:50:59.509739Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"updatedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:45.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"nominalStartTime\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:02:00Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"nominalEndTime\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:00Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"FAILED\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"startedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:02:39.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"endedAt\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"2021-06-24T22:05:45.321952Z\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"durationMs\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">186000</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"args\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"jobVersion\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"example.delivery_times_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"version\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"e9eafa5b-e334-358d-a3b4-61c8d3de75f3\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"inputVersions\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.delivery_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"version\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"a40ec54f-b8e1-35f7-b868-58b27383b5ff\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"outputVersions\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"context\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"sql\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"INSERT INTO top_delivery_times (order_id, order_placed_on, order_dispatched_on, order_delivered_on, order_delivery_time,\\n    customer_email, restaurant_id, driver_id)\\n  SELECT order_id, order_placed_on, order_delivered_on, DATEDIFF(minute, order_placed_on, order_delivered_on) AS order_delivery_time,\\n    customer_email, restaurant_id, driver_id\\n    FROM delivery_7_days\\nGROUP BY restaurant_id\\nORDER BY order_delivery_time DESC\\n   LIMIT 1;\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"facets\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Here, we see explicit version information in the <code>jobVersion</code>, the <code>inputVersions</code>, and the\n<code>outputVersions</code> fields. This is included because every Run is tied to exactly one immutable\nversion of a job and one immutable version of each input dataset and each output dataset (it's worth\nnoting that a Run can be tied to one version of a dataset as its input and another version of the\nsame dataset as its output- a SQL <code>MERGE</code> statement is one common use case supported by this).</p><p>The other important field to notice in the Run structure is the <code>state</code></p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"FAILED\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Uh-oh. Looks like the last time this job ran, it failed.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tracing-failures\">Tracing Failures<a href=\"#tracing-failures\" class=\"hash-link\" aria-label=\"Direct link to Tracing Failures\" title=\"Direct link to Tracing Failures\">​</a></h2><p>The first question we have when diagnosing a failure is</p><blockquote><p>Is this the first time it's failed? Or has it been broken a while?</p></blockquote><p>Let's use the API to find out. Checking previous runs is easily accomplished by hitting the job's <code>runs</code>\nAPI. Job runs are returned in descending order by start time, so the latest runs should be at the top.\nSince we only want to check whether (and which) previous runs failed, we can use the following command:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/jobs/example.delivery_times_7_days/runs\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  jq </span><span class=\"token string\" style=\"color:#e3116c\">'.runs | map({\"id\": .id, \"state\": .state})'</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">less</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>I get the following output:</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"cb436906-1c66-4ce4-b7ac-ceebfd1babf8\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"FAILED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"34bd4d60-82a6-4cac-ad76-815e6d95a93c\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"COMPLETED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"352c67c3-c8d7-4b3a-b7da-8532aa9b8335\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"COMPLETED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"0c62b1cc-2e43-44d0-9443-0a1d9768fece\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"COMPLETED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"id\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"5900de19-12f7-4a6e-8118-8e0792d98f65\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property\" style=\"color:#36acaa\">\"state\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"COMPLETED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This is an incomplete list of jobs, but it's obvious from this sampling that this is the first job failure\nin the recent execution history. What we want to see now is what changed between the last successful\nrun and this one. We'll need to grab the <code>id</code> fields of each of the runs we want to compare. The run\nids in the seed data are randomly generated, so they'll be different if you're following along. Grab\nthe run ids with the following shell commands:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token assign-left variable\" style=\"color:#36acaa\">FAILED_RUN_ID</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/jobs/example.delivery_times_7_days/runs\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.runs[0].id'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">SUCCESSFUL_RUN_ID</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/jobs/example.delivery_times_7_days/runs\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.runs[1].id'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>To get a specific run, we call the <code>/jobs/runs</code> API. Since each Run ID is required to be unique, the\nAPI doesn't require a namespace or a job name. We can get the failed job run with</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_RUN_ID</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">less</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The output is the same as the <code>latestRun</code> field of the <code>JobVersions</code> API. Recall the output of that\nAPI includes these three important fields: the <code>jobVersion</code>, the <code>inputVersions</code>\nand the <code>outputVersions</code>.</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"jobVersion\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"example.delivery_times_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token property\" style=\"color:#36acaa\">\"version\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"e9eafa5b-e334-358d-a3b4-61c8d3de75f3\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"inputVersions\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"namespace\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.delivery_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token property\" style=\"color:#36acaa\">\"version\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"a40ec54f-b8e1-35f7-b868-58b27383b5ff\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token property\" style=\"color:#36acaa\">\"outputVersions\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>These fields give us what we need to trace the lineage of the specific job runs we want to compare.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"job-versions\">Job Versions<a href=\"#job-versions\" class=\"hash-link\" aria-label=\"Direct link to Job Versions\" title=\"Direct link to Job Versions\">​</a></h3><p>The first thing to look at is the <code>jobVersion</code>. Nearly 100% of the time, a job failure can be traced\nto a code change. Let's compare the job version of the failed run with the job version of the successful\none:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">diff</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_RUN_ID</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq -r </span><span class=\"token string\" style=\"color:#e3116c\">'.jobVersion.version'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">     </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token string variable\" style=\"color:#36acaa\">$SUCCESSFUL_RUN_ID</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq -r </span><span class=\"token string\" style=\"color:#e3116c\">'.jobVersion.version'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">1c1</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\"> e9eafa5b-e334-358d-a3b4-61c8d3de75f3</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">---</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> 92d801c0-021e-3c3d-ba18-c9e8504b143d</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Right away, we see there is a difference. A number of factors contribute to the job versioning logic\nin Marquez:</p><ul><li>The source code location</li><li>The job context</li><li>The list of input datasets</li><li>The list of output datasets</li></ul><p>The version generation code is a deterministic function of these four inputs, so if any of them change,\nthe version will change. Let's find out what changed between the two job versions. To do the diff,\nwe ought to get rid of anything we expect to differ ahead of time: the <code>version</code>, the <code>createdAt</code>\nand <code>updatedAt</code> timestamps, and the <code>latestRun</code>. The <code>version</code> field is also nested within the job\nversion's <code>id</code> field, so we'll omit that too.</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token assign-left variable\" style=\"color:#36acaa\">FAILED_JOB_VERSION</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$FAILED_RUN_ID</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.jobVersion.version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">SUCCESSFUL_JOB_VERSION</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$SUCCESSFUL_RUN_ID</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.jobVersion.version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">diff</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/jobs/example.delivery_times_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_JOB_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'del(.[\"id\", \"version\", \"createdAt\", \"updatedAt\", \"latestRun\"])'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">     </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/jobs/example.delivery_times_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$SUCCESSFUL_JOB_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'del(.[\"id\", \"version\", \"createdAt\", \"updatedAt\", \"latestRun\"])'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">14c14,23</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">   </span><span class=\"token string\" style=\"color:#e3116c\">\"outputs\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">---</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">   </span><span class=\"token string\" style=\"color:#e3116c\">\"outputs\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">     </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">       </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">       </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.top_delivery_times\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">     </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">     </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">       </span><span class=\"token string\" style=\"color:#e3116c\">\"namespace\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"food_delivery\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">       </span><span class=\"token string\" style=\"color:#e3116c\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"public.discounts\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">     </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">   </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Oh, interesting! The two job versions only differ because of the output datasets. This is an\ninteresting point that should be addressed in the Marquez API- the version generation is constructed\nwhen the run completes, <em>even if the job run failed</em>. Sometimes this has no impact on the versioning,\nas the output datasets can be determined before the job run executes. But sometimes we see impacts\nlike this where a job run failed before we had a chance to discover the output datasets.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tracing-upstream-lineage\">Tracing Upstream Lineage<a href=\"#tracing-upstream-lineage\" class=\"hash-link\" aria-label=\"Direct link to Tracing Upstream Lineage\" title=\"Direct link to Tracing Upstream Lineage\">​</a></h2><p>So what gives? The job code didn't actually change! So what caused the failure?</p><p>Here's where the lineage tracking becomes useful. Recall again, the run output gave us\n3 interesting fields: the <code>jobVersion</code>, the <code>inputVersions</code>, and the <code>outputVersions</code>.\nWe already know that the <code>outputVersions</code> is empty because the latest failed run didn't have\na chance to determine the outputs. But we can take a look at the input datasets.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"dataset-versions\">Dataset Versions<a href=\"#dataset-versions\" class=\"hash-link\" aria-label=\"Direct link to Dataset Versions\" title=\"Direct link to Dataset Versions\">​</a></h3><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">diff</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_RUN_ID</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq -r </span><span class=\"token string\" style=\"color:#e3116c\">'.inputVersions'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">     </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token string variable\" style=\"color:#36acaa\">$SUCCESSFUL_RUN_ID</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq -r </span><span class=\"token string\" style=\"color:#e3116c\">'.inputVersions'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">5c5</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">     </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"a40ec54f-b8e1-35f7-b868-58b27383b5ff\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">---</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">     </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"5e439f1f-1a44-3700-961f-60c79c75a1ec\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Dataset versions work differently from job versions. They don't only change when the structure changes.\nEvery time a job run <em>modifies or writes to</em> a dataset, the dataset version changes. Unless a job schedule is more\nfrequent than its upstream job's schedule (e.g., an hourly job consuming a daily generated dataset),\nit is expected that each job run consumes a different version of a dataset. To find out if there is\na significant difference, we have to compare the two versions with the dataset's <code>versions</code> API.</p><p>We know there's only a single input dataset, so we'll keep this simple, but you could also write a loop to\ncheck multiple input datasets if needed.</p><p>In this post, we omit the structure of the <code>datasetVersion</code>, but you can explore it yourself with the following:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token assign-left variable\" style=\"color:#36acaa\">FAILED_DATASET_VERSION</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$FAILED_RUN_ID</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.inputVersions[0].version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_DATASET_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">less</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>As with the job versions, we'll omit some of the data we expect to be different in order to produce\na useful diff:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token assign-left variable\" style=\"color:#36acaa\">FAILED_DATASET_VERSION</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$FAILED_RUN_ID</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.inputVersions[0].version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">SUCCESSFUL_DATASET_VERSION</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/jobs/runs/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$SUCCESSFUL_RUN_ID</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.inputVersions[0].version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">diff</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_DATASET_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'del(.[\"id\", \"version\", \"createdAt\", \"createdByRun\"])'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">     </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$SUCCESSFUL_DATASET_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'del(.[\"id\", \"version\", \"createdAt\", \"createdByRun\"])'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">58c58</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">       </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"VARCHAR\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">---</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">       </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"INTEGER\"</span><span class=\"token plain\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Hey! Somehow one of the fields was converted from a an <code>INT</code> to a <code>VARCHAR</code>! One of the helpful fields\nin the <code>version</code> API is the <code>createdByRun</code>, which is similar to the <code>jobVersion</code>'s <code>latestRun</code>.\nIt provides the job run that last altered the dataset, creating the new version.</p><p>We can quickly compare the job versions of the runs that created these two dataset versions:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">diff</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$FAILED_DATASET_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'.createdByRun.jobVersion'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token string variable\" style=\"color:#36acaa\">$SUCCESSFUL_DATASET_VERSION</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'.createdByRun.jobVersion'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">4c4</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">   </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"c222a72e-92cc-3bb6-b3b7-c174cbc76387\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">---</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">   </span><span class=\"token string\" style=\"color:#e3116c\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"76c375bf-58ac-3d19-b94f-424fe2784601\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>And we can do a quick comparison of the two job versions. Since the job name is different,\nwe'll let jq generate the endpoints for us</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">diff</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$FAILED_DATASET_VERSION</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable punctuation\" style=\"color:#393A34\">\\</span><span class=\"token variable\" style=\"color:#36acaa\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token variable\" style=\"color:#36acaa\">      jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.createdByRun.jobVersion | \"http://localhost:5000/api/v1/namespaces/\" + .namespace + \"/jobs/\" + .name + \"/versions/\" + .version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'del(.[\"id\", \"version\", \"createdAt\", \"updatedAt\", \"latestRun\"])'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1/namespaces/food_delivery/datasets/public.delivery_7_days/versions/</span><span class=\"token variable string variable\" style=\"color:#36acaa\">$SUCCESSFUL_DATASET_VERSION</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable punctuation\" style=\"color:#393A34\">\\</span><span class=\"token variable\" style=\"color:#36acaa\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token variable\" style=\"color:#36acaa\">      jq -r </span><span class=\"token variable string\" style=\"color:#e3116c\">'.createdByRun.jobVersion | \"http://localhost:5000/api/v1/namespaces/\" + .namespace + \"/jobs/\" + .name + \"/versions/\" + .version'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      jq </span><span class=\"token string\" style=\"color:#e3116c\">'del(.[\"id\", \"version\", \"createdAt\", \"updatedAt\", \"latestRun\"])'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">4c4</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\">   </span><span class=\"token string\" style=\"color:#e3116c\">\"location\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://github.com/example/jobs/blob/c87f2a40553cfa4ae7178083a068bf1d0c6ca3a8/etl_delivery_7_days.py\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">---</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">   </span><span class=\"token string\" style=\"color:#e3116c\">\"location\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://github.com/example/jobs/blob/4d0b5d374261fdaf60a1fc588dd8f0d124b0e87f/etl_delivery_7_days.py\"</span><span class=\"token plain\">,</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>And there it is. Because nearly 100% of the time, a job failure can be traced to a code change. In\nthis example, the job immediately upstream decided to change the output schema of its dataset. In\nreality, it's not always so straightforward. Sometimes the upstream job is just a passthrough- maybe\nit applies some filters to a subset of the columns and writes out whatever schema it's given.\nIn that case, the job immediately upstream would have succeeded without a change in the job version.\nOr the code change in the upstream job could be innocuous. Maybe someone added a comment or fixed an\nunrelated bug. We might do some follow up and discover we have to continue our search upstream.</p><p>But the Marquez API actually gives us that ability. Using the <code>/lineage</code> API, we can even explore the\ndownsteam impact of changes. So if you owned the <code>etl_delivery_7_days</code> job and wanted to see what the\nimpact of changing the varchar to an int was on running jobs, the following jq recursive script\nwill let you walk the downstream jobs and show the state of the last run:</p><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># For readability, the jq filter is in a file broken into multiple lines</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">cat</span><span class=\"token plain\"> recurse.jq</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  .graph as </span><span class=\"token variable\" style=\"color:#36acaa\">$graph</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> .graph</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> select</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">.id </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"job:food_delivery:example.etl_delivery_7_days\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> recurse</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">.outEdges</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> .destination as </span><span class=\"token variable\" style=\"color:#36acaa\">$nodeId</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token variable\" style=\"color:#36acaa\">$graph</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> select</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">.id </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> </span><span class=\"token variable\" style=\"color:#36acaa\">$nodeId</span><span class=\"token punctuation\" style=\"color:#393A34\">))</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> select</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">.type </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"JOB\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> .id, </span><span class=\"token string\" style=\"color:#e3116c\">\"state\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> .data.latestRun.state</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">curl</span><span class=\"token plain\"> -s </span><span class=\"token string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1-beta/lineage?nodeId=job:food_delivery:example.etl_delivery_7_days\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"> jq -f recurse.jq </span><span class=\"token function\" style=\"color:#d73a49\">less</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"job:food_delivery:example.etl_delivery_7_days\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"state\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"COMPLETED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"job:food_delivery:example.delivery_times_7_days\"</span><span class=\"token plain\">,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:#e3116c\">\"state\"</span><span class=\"token builtin class-name\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"FAILED\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>In this post, we did everything manually with bash (because the shell is your most powerful tool when\ndebugging a live outage you've never encountered before; and let's be honest- how many outages <em>aren't</em>\nsomething you've never encountered before), but this could easily have been done in Java or Go or Python.\nThe <a href=\"https://github.com/MarquezProject/marquez/blob/main/spec/openapi.yml\" target=\"_blank\" rel=\"noopener noreferrer\">openapi spec</a>\nin the Marquez repo can be used to generate a client in whatever language you want to write your ops\ntool in. So build some tooling and help your next debugging session run a little more smoothly.</p><blockquote><p>But wait! What about the times when the job isn't <em>failing</em>, but the data is wrong!</p></blockquote><p>Ah, the data quality checks! This is where the extensibility of the OpenLineage model comes to our\nrescue with a field in the responses that we completely glossed over</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">\"facets\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>But I think that's a topic for another post.</p>",
            "url": "https://openlineage.io/blog/explore-lineage-api",
            "title": "Exploring Lineage History via the Marquez API",
            "summary": "Taking advantage of recent changes to the Marquez API, this post shows how to diagnose job failures and explore the impact of code changes on downstream dependents.",
            "date_modified": "2021-07-08T00:00:00.000Z",
            "author": {
                "name": "Michael Collado",
                "url": "https://www.github.com/collado-mike"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/backfilling-airflow-dags-using-marquez",
            "content_html": "<p>In this blog post, we'll discuss how lineage metadata can be used to automatically backfill DAGs with complex upstream and downstream dependencies.</p><p>You've just deployed an Airflow <a href=\"https://airflow.apache.org/docs/apache-airflow/stable/concepts/dags.html#dags\" target=\"_blank\" rel=\"noopener noreferrer\">DAG</a> that calculates the total sum of weekly food orders. You were able to identify what input tables to query, the frequency in which your DAG would run, and made sure analysts knew the resulting output table to use in their weekly food order trends report. The DAG only needs to run once a week, and with the DAG managed and scheduled via <a href=\"https://airflow.apache.org\" target=\"_blank\" rel=\"noopener noreferrer\">Airflow</a>, you feel confident that the aggregated food order data will be available every Sunday morning for the weekly report.</p><p>As a developer, you're monitoring your DAG for errors and after only a few DAG runs, you're alerted that your DAG suddenly started to fail! Before you begin troubleshooting the root cause of the DAG failure, you notify the analytics team that the food order data will be incorrect for the week. After viewing the DAG error logs and a few email exchanges, you eventually discover that an upstream DAG had failed to write food order data for certain daily table partitions. Now, backfilling the missing data can be a manual and tedious task. As you sip your morning coffee, you think to yourself, <em>there must be a better way</em>. Yes, there is and collecting DAG lineage metadata would be a great start.</p><p>In this blog post, we'll briefly introduce you to how backfills are handled in Airflow, then discuss how lineage metadata can be used to backfill DAGs with more complex upstream and downstream dependencies.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-brief-intro-to-backfilling-airflow-dags\">1. Brief Intro to Backfilling Airflow DAGs<a href=\"#1-brief-intro-to-backfilling-airflow-dags\" class=\"hash-link\" aria-label=\"Direct link to 1. Brief Intro to Backfilling Airflow DAGs\" title=\"Direct link to 1. Brief Intro to Backfilling Airflow DAGs\">​</a></h2><p>Airflow supports <a href=\"https://airflow.apache.org/docs/apache-airflow/stable/dag-run.html#backfill\" target=\"_blank\" rel=\"noopener noreferrer\">backfilling</a> DAG runs for a historical time window given a <em>start</em> and <em>end</em> date. Let's say our <code>example.etl_orders_7_days</code> DAG started failing on <code>2021-06-06</code>, and we wanted to reprocess the daily table partitions for that week (assuming all partitions have been backfilled upstream). In order to run the backfill for <code>example.etl_orders_7_days</code>, using the Airflow <a href=\"https://airflow.apache.org/docs/apache-airflow/stable/cli-and-env-variables-ref.html\" target=\"_blank\" rel=\"noopener noreferrer\">CLI</a>, you open up a terminal and execute the following <code>backfill</code> <a href=\"https://airflow.apache.org/docs/apache-airflow/stable/cli-and-env-variables-ref.html#backfill\" target=\"_blank\" rel=\"noopener noreferrer\">command</a>:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># Backfill weekly food orders</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ airflow dags backfill \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    --start-date 2021-06-06 \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    --end-date 2021-06-06 \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    example.etl_orders_7_days</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Now, the backfill was fairly straightforward but they're not always trivial. That is, we still have the following open questions: </p><ul><li>How quickly can data quality issues be identified and explored?</li><li>What alerting rules should be in place to notify downstream DAGs of possible upstream processing issues or failures?</li><li>What effects (if any) would upstream DAGs have on downstream DAGs if dataset consumption was delayed?</li></ul><p>Next, we'll demonstrate how lineage metadata managed with <a href=\"https://marquezproject.ai\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a> can help answer some of these questions (and more!) by maintaining inter-DAG dependencies and cataloging historical runs of DAGs.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2-exploring-lineage-metadata-using-marquez\">2. Exploring Lineage Metadata using Marquez<a href=\"#2-exploring-lineage-metadata-using-marquez\" class=\"hash-link\" aria-label=\"Direct link to 2. Exploring Lineage Metadata using Marquez\" title=\"Direct link to 2. Exploring Lineage Metadata using Marquez\">​</a></h2><blockquote><p><strong>Note:</strong> To seed the Marquez HTTP API server with the sample lineage metadata used in this blog post, see the <a href=\"https://marquezproject.github.io/marquez/quickstart.html#write-sample-lineage-metadata-to-marquez\" target=\"_blank\" rel=\"noopener noreferrer\">Write Sample Lineage Metadata to Marquez</a> section in Marquez's <a href=\"https://marquezproject.github.io/marquez/quickstart.html\" target=\"_blank\" rel=\"noopener noreferrer\">quickstart</a> guide.</p></blockquote><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"21-collect-dag-lineage-metadata\">2.1 COLLECT DAG LINEAGE METADATA<a href=\"#21-collect-dag-lineage-metadata\" class=\"hash-link\" aria-label=\"Direct link to 2.1 COLLECT DAG LINEAGE METADATA\" title=\"Direct link to 2.1 COLLECT DAG LINEAGE METADATA\">​</a></h4><p><img loading=\"lazy\" src=\"/assets/images/lineage-graph-47b55cf38f6030ddd58cf8b5079506cf.png\" width=\"639\" height=\"501\" class=\"img_ev3q\"></p><blockquote><p><strong>Figure 1:</strong> DAG lineage metadata.</p></blockquote><p><a href=\"https://marquezproject.ai\" target=\"_blank\" rel=\"noopener noreferrer\">Marquez</a> is an open source metadata service for the collection, aggregation, and visualization of a data ecosystem’s metadata. Marquez has integration support for Airflow with minimal configuration. Using the <a href=\"https://github.com/MarquezProject/marquez/tree/main/integrations/airflow\" target=\"_blank\" rel=\"noopener noreferrer\"><code>marquez-airflow</code></a> library, DAG lineage metadata will be collected automatically during DAG execution using the <a href=\"https://openlineage.io\" target=\"_blank\" rel=\"noopener noreferrer\">OpenLineage</a> standard, then stored in Marquez’s centralized data model. To learn more about how lineage metadata is stored and versioned in Marquez, see the <a href=\"https://marquezproject.github.io/marquez/quickstart.html#marquez-data-model\" target=\"_blank\" rel=\"noopener noreferrer\">Data Model</a> section in Marquez's <a href=\"https://marquezproject.github.io/marquez/quickstart.html\" target=\"_blank\" rel=\"noopener noreferrer\">quickstart</a> guide.</p><p>The Airflow integration gives us two important benefits:</p><ul><li><strong>DAG Metadata:</strong> Each DAG has a code version, inputs and outputs, run args, and run state transitions. Keeping a global historical log of DAG runs linked to code will quickly highlight upstream dependencies errors and minimize downstream impact.</li><li><strong>Lineage Metadata:</strong> Each DAG may have one or more upstream dependency. Keeping track of inter-DAG dependencies will allow for teams within an organization to safely depend on one another’s datasets, while also understanding which DAGs will be impacted downstream of a DAG failure.</li></ul><p>In this blog, we won't go into how to enable lineage metadata collection for Airflow DAGs. But, we encourage you to take a look at Marquez's Airflow <a href=\"https://github.com/MarquezProject/marquez/tree/main/examples/airflow\" target=\"_blank\" rel=\"noopener noreferrer\">example</a> to learn how to troubleshoot DAG failures using Marquez.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"22-get-lineage-metadata-via-rest-api\">2.2 GET LINEAGE METADATA VIA REST API<a href=\"#22-get-lineage-metadata-via-rest-api\" class=\"hash-link\" aria-label=\"Direct link to 2.2 GET LINEAGE METADATA VIA REST API\" title=\"Direct link to 2.2 GET LINEAGE METADATA VIA REST API\">​</a></h4><p>In Marquez, each dataset and job has its own globally unique node ID that can be used to query the lineage graph. The <a href=\"https://marquezproject.github.io/marquez/openapi.html#tag/Lineage/paths/~1lineage/get\" target=\"_blank\" rel=\"noopener noreferrer\">LineageAPI</a> returns a set of <strong>nodes</strong> consisting of <strong>edges</strong>. An edge is <strong>directed</strong> and has a defined <strong>origin</strong> and <strong>destination</strong>. A lineage graph may contain the following node types: <code>dataset:&lt;namespace&gt;:&lt;dataset&gt;</code>, <code>job:&lt;namespace&gt;:&lt;job&gt;</code>.</p><p>So, let's start by querying the lineage graph for our <code>example.etl_orders_7_days</code> DAG using the node ID <code>job:food_delivery:example.etl_orders_7_days</code>. You'll notice in the returned lineage graph that the DAG <em>input</em> datasets are <code>public.categories</code>, <code>public.orders</code>, and <code>public.menus</code> with <code>public.orders_7_days</code> as the <em>output</em> dataset:</p><h5 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"request\">REQUEST<a href=\"#request\" class=\"hash-link\" aria-label=\"Direct link to REQUEST\" title=\"Direct link to REQUEST\">​</a></h5><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ curl -X GET \"http://localhost:5000/api/v1-beta/lineage?nodeId=job:food_delivery:example.etl_orders_7_days\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h5 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"response\">RESPONSE<a href=\"#response\" class=\"hash-link\" aria-label=\"Direct link to RESPONSE\" title=\"Direct link to RESPONSE\">​</a></h5><p><code>200 OK</code></p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"graph\": [{</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"id\": \"job:food_delivery:example.etl_orders_7_days\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"type\": \"JOB\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"data\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"type\": \"BATCH\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"id\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"name\": \"example.etl_orders_7_days\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"name\": \"example.etl_orders_7_days\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"createdAt\": \"2021-06-06T14:50:13.931946Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"updatedAt\": \"2021-06-06T14:57:54.037399Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"namespace\": \"food_delivery\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"inputs\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"namespace\": \"food_delivery\", \"name\": \"public.categories\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"namespace\": \"food_delivery\", \"name\": \"public.menu_items\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"namespace\": \"food_delivery\", \"name\": \"public.orders\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"namespace\": \"food_delivery\", \"name\": \"public.menus\"}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"outputs\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"namespace\": \"food_delivery\", \"name\": \"public.orders_7_days\"}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"location\": \"https://github.com/example/jobs/blob/2294bc15eb49071f38425dc927e48655530a2f2e/etl_orders_7_days.py\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"context\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"sql\": \"INSERT INTO orders_7_days (order_id, placed_on, discount_id, menu_id, restaurant_id, menu_item_id, category_id)\\n  SELECT o.id AS order_id, o.placed_on, o.discount_id, m.id AS menu_id, m.restaurant_id, mi.id AS menu_item_id, c.id AS category_id\\n    FROM orders AS o\\n   INNER JOIN menu_items AS mi\\n      ON menu_items.id = o.menu_item_id\\n   INNER JOIN categories AS c\\n      ON c.id = mi.category_id\\n   INNER JOIN menu AS m\\n      ON m.id = c.menu_id\\n   WHERE o.placed_on &gt;= NOW() - interval '7 days';\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"description\": \"Loads newly placed orders weekly.\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        \"latestRun\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"id\": \"5c7f0dc4-d3c1-4f16-9ac3-dc86c5da37cc\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"createdAt\": \"2021-06-06T14:50:36.853459Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"updatedAt\": \"2021-06-06T14:57:54.037399Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"nominalStartTime\": \"2021-06-06T14:54:00Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"nominalEndTime\": \"2021-06-06T14:57:00Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"state\": \"FAILED\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"startedAt\": \"2021-06-06T14:54:14.037399Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"endedAt\": \"2021-06-06T14:57:54.037399Z\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"durationMs\": 220000,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"args\": {},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"location\": \"https://github.com/example/jobs/blob/2294bc15eb49071f38425dc927e48655530a2f2e/etl_orders_7_days.py\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"context\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            \"sql\": \"INSERT INTO orders_7_days (order_id, placed_on, discount_id, menu_id, restaurant_id, menu_item_id, category_id)\\n  SELECT o.id AS order_id, o.placed_on, o.discount_id, m.id AS menu_id, m.restaurant_id, mi.id AS menu_item_id, c.id AS category_id\\n    FROM orders AS o\\n   INNER JOIN menu_items AS mi\\n      ON menu_items.id = o.menu_item_id\\n   INNER JOIN categories AS c\\n      ON c.id = mi.category_id\\n   INNER JOIN menu AS m\\n      ON m.id = c.menu_id\\n   WHERE o.placed_on &gt;= NOW() - interval '7 days';\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          \"facets\": {}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      },</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"inEdges\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"origin\": \"dataset:food_delivery:public.categories\", \"destination\": \"job:food_delivery:example.etl_orders_7_days\"}, \"destination\": \"job:food_delivery:example.etl_orders_7_days\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"origin\": \"dataset:food_delivery:public.orders\", \"destination\": \"job:food_delivery:example.etl_orders_7_days\"},</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"origin\": \"dataset:food_delivery:public.menus\", \"destination\": \"job:food_delivery:example.etl_orders_7_days\"}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ],</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"outEdges\": [</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        {\"origin\": \"job:food_delivery:example.etl_orders_7_days\", \"destination\": \"dataset:food_delivery:public.orders_7_days\"}</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      ]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  }, ...]</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"3-using-lineage-metadata-to-backfill-airflow-dags\">3. Using Lineage Metadata to Backfill Airflow DAGs<a href=\"#3-using-lineage-metadata-to-backfill-airflow-dags\" class=\"hash-link\" aria-label=\"Direct link to 3. Using Lineage Metadata to Backfill Airflow DAGs\" title=\"Direct link to 3. Using Lineage Metadata to Backfill Airflow DAGs\">​</a></h2><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"31-backfilling\">3.1 BACKFILLING<a href=\"#31-backfilling\" class=\"hash-link\" aria-label=\"Direct link to 3.1 BACKFILLING\" title=\"Direct link to 3.1 BACKFILLING\">​</a></h4><p><img loading=\"lazy\" src=\"/assets/images/backfill-d6459ce4e9a65760a7b441987c74b772.png\" width=\"843\" height=\"532\" class=\"img_ev3q\"></p><blockquote><p><strong>Figure 2:</strong> Backfilled daily table partitions.</p></blockquote><p>To run a backfill for <code>example.etl_orders_7_days</code> using the DAG lineage metadata stored in Marquez, we'll need to query the lineage graph for the upstream DAG where the error originated. Now, let's assume the <code>example.etl_orders</code> DAG upstream of <code>example.etl_orders_7_days</code> failed to write some of the daily table partitions needed for the weekly food order trends report (see <strong>Figure 2</strong>). To fix the weekly trends report, we'll first need to backfill the missing daily table partitions <code>public.orders_2021_06_04</code>, <code>public.orders_2021_06_05</code>, and <code>public.orders_2021_06_06</code>:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># Backfill daily food orders</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ airflow dags backfill \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    --start-date 2021-06-04 \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    --end-date 2021-06-06 \\</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    example.etl_orders</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p><img loading=\"lazy\" src=\"/assets/images/inter-dag-deps-c39c00c0fa8120b6aabdd7fa849bb15d.png\" width=\"958\" height=\"373\" class=\"img_ev3q\"></p><blockquote><p><strong>Figure 3:</strong> Airflow inter-DAG dependencies.</p></blockquote><p>Then, using the script <code>backfill.sh</code> defined below, we can easily backfill all DAGs downstream of <code>example.etl_orders</code>:</p><h5 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"backfillsh\"><code>backfill.sh</code><a href=\"#backfillsh\" class=\"hash-link\" aria-label=\"Direct link to backfillsh\" title=\"Direct link to backfillsh\">​</a></h5><blockquote><p><strong>Note:</strong> Make sure you have <a href=\"https://stedolan.github.io/jq/download\" target=\"_blank\" rel=\"noopener noreferrer\"><code>jq</code></a> installed before running <code>backfill.sh</code>. </p></blockquote><div class=\"language-bash codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-bash codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token shebang important\">#!/bin/bash</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">#</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Backfill DAGs automatically using lineage metadata stored in Marquez.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">#</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Usage: $ ./backfill.sh &lt;start-date&gt; &lt;end-date&gt; &lt;dag-id&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">set</span><span class=\"token plain\"> -e</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Backfills DAGs downstream of the given node ID, recursively.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function-name function\" style=\"color:#d73a49\">backfill_downstream_of</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">node_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${1}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Get out edges for node ID</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">out_edges</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable builtin class-name\" style=\"color:#36acaa\">echo</span><span class=\"token variable\" style=\"color:#36acaa\"> $lineage_graph </span><span class=\"token variable punctuation\" style=\"color:#393A34\">\\</span><span class=\"token variable\" style=\"color:#36acaa\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token variable\" style=\"color:#36acaa\">    </span><span class=\"token variable operator\" style=\"color:#393A34\">|</span><span class=\"token variable\" style=\"color:#36acaa\"> jq -r --arg NODE_ID </span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable string variable\" style=\"color:#36acaa\">${node_id}</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\"> </span><span class=\"token variable string\" style=\"color:#e3116c\">'.graph[] | select(.id==$NODE_ID) | .outEdges[].destination'</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> </span><span class=\"token for-or-select variable\" style=\"color:#36acaa\">out_edge</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${out_edges</span><span class=\"token string variable punctuation\" style=\"color:#393A34\">[</span><span class=\"token string variable\" style=\"color:#36acaa\">@</span><span class=\"token string variable punctuation\" style=\"color:#393A34\">]</span><span class=\"token string variable\" style=\"color:#36acaa\">}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">do</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Run backfill if out edge is a job node (i.e. &lt;dataset&gt; =&gt; &lt;job&gt;)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${out_edge}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> job:* </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">then</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token assign-left variable\" style=\"color:#36acaa\">dag_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${out_edge</span><span class=\"token string variable operator\" style=\"color:#393A34\">##</span><span class=\"token string variable\" style=\"color:#36acaa\">*</span><span class=\"token string variable operator\" style=\"color:#393A34\">:</span><span class=\"token string variable\" style=\"color:#36acaa\">}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"backfilling </span><span class=\"token string variable\" style=\"color:#36acaa\">${dag_id}</span><span class=\"token string\" style=\"color:#e3116c\">...\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      airflow backfill --start_date </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${start_date}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> --end_date </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${start_date}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${dag_id}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">fi</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Follow out edges downstream, recursively</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    backfill_downstream_of </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${out_edge}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:#00009f\">done</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">start_date</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${1}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">end_date</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${2}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">dag_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${3}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># (1) Build job node ID (format: 'job:&lt;namespace&gt;:&lt;job&gt;')</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">node_id</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"job:food_delivery:</span><span class=\"token string variable\" style=\"color:#36acaa\">${dag_id}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># (2) Get lineage graph</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token assign-left variable\" style=\"color:#36acaa\">lineage_graph</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable function\" style=\"color:#d73a49\">curl</span><span class=\"token variable\" style=\"color:#36acaa\"> -s -X GET </span><span class=\"token variable string\" style=\"color:#e3116c\">\"http://localhost:5000/api/v1-beta/lineage?nodeId=</span><span class=\"token variable string variable\" style=\"color:#36acaa\">${node_id}</span><span class=\"token variable string\" style=\"color:#e3116c\">\"</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># (3) Run backfill</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">backfill_downstream_of </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${node_id}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>When you run the script <code>backfill.sh</code>, it will output all backfilled DAGs to the console:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">$ ./backfill.sh 2021-06-06 2021-06-06 example.etl_orders</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">backfilling example.etl_orders_7_days...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">backfilling example.etl_delivery_7_days...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">backfilling example.delivery_times_7_days...</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"4-conclusion\">4. Conclusion<a href=\"#4-conclusion\" class=\"hash-link\" aria-label=\"Direct link to 4. Conclusion\" title=\"Direct link to 4. Conclusion\">​</a></h2><p>In this blog post, we showed how easy it can be to automate backfilling DAGs downstream of a data quality issue using lineage metadata stored in Marquez. With only two steps, we were able to backfill missing daily table partitions, then automatically re-run failed DAGs downstream of the upstream DAG where the error originated. But, what measures can we put in place to detect low-quality data issues faster, therefore avoiding backfills altogether? Since Marquez collects DAG run metadata that can be viewed using the <a href=\"https://marquezproject.github.io/marquez/openapi.html#tag/Jobs/paths/~1jobs~1runs~1%7Bid%7D/get\" target=\"_blank\" rel=\"noopener noreferrer\">Runs API</a>, building automated processes that periodically check DAG run states and quickly notifying teams of upstream data quality issue (or missed SLAs) in a timely fashion is just one possible preventive measure.</p><p>We encourge you to explore Marquez's opinionated <a href=\"https://marquezproject.github.io/marquez/openapi.html\" target=\"_blank\" rel=\"noopener noreferrer\">Metadata API</a> and define your own automated process(es) for analyzing lineage metadata! If you need help or have any questions, you can always join our <a href=\"http://bit.ly/MarquezSlack\" target=\"_blank\" rel=\"noopener noreferrer\">Slack</a> channel or reach out to us on <a href=\"https://twitter.com/MarquezProject\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>.</p>",
            "url": "https://openlineage.io/blog/backfilling-airflow-dags-using-marquez",
            "title": "Backfilling Airflow DAGs using Marquez",
            "summary": "In this blog post, we'll discuss how lineage metadata can be used to automatically backfill DAGs with complex upstream and downstream dependencies.",
            "date_modified": "2021-06-30T00:00:00.000Z",
            "author": {
                "name": "Willy Lulciuc",
                "url": "https://www.github.com/wslulciuc"
            },
            "tags": []
        },
        {
            "id": "https://openlineage.io/blog/openlineage-takes-inspiration-from-opentelemetry",
            "content_html": "<p>The data world and the service world have many similarities but also a few crucial differences. </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"data-vs-services\">Data vs Services<a href=\"#data-vs-services\" class=\"hash-link\" aria-label=\"Direct link to Data vs Services\" title=\"Direct link to Data vs Services\">​</a></h2><p>The data world and the service world have many similarities but also a few crucial differences.\nLet’s start by drawing the similarities:</p><ul><li>The contract for services is the API, in the data world the contract is the dataset schema. </li><li>Properly tracked Data lineage is as powerful as distributed request tracing for services.</li><li>Data Quality checks are the data pipelines equivalent of services’ circuit breakers.</li><li>The Data catalog is data’s service discovery</li><li>Data quality metrics are similar to service metrics and both can define SLOs.</li></ul><table><thead><tr><th align=\"left\"></th><th align=\"left\"><strong>Data</strong></th><th align=\"left\"><strong>Services</strong></th></tr></thead><tbody><tr><td align=\"left\"><strong>Contract</strong></td><td align=\"left\">Dataset schema</td><td align=\"left\">Service API</td></tr><tr><td align=\"left\"><strong>Tracking Dependencies</strong></td><td align=\"left\">Data lineage</td><td align=\"left\">Distributed traces</td></tr><tr><td align=\"left\"><strong>Preventing cascading failures</strong></td><td align=\"left\">Data Quality checks</td><td align=\"left\">Circuit breakers</td></tr><tr><td align=\"left\"><strong>Discovery</strong></td><td align=\"left\">Data catalog</td><td align=\"left\">Service Discovery</td></tr><tr><td align=\"left\"><strong>SLOs</strong></td><td align=\"left\">Freshness, data quality</td><td align=\"left\">Availability, latency</td></tr></tbody></table><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"observability-in-the-services-world\">Observability in the Services world<a href=\"#observability-in-the-services-world\" class=\"hash-link\" aria-label=\"Direct link to Observability in the Services world\" title=\"Direct link to Observability in the Services world\">​</a></h2><p>In many ways, observability is a lot more mature in the services world than it is in the data world.\nService telemetry data is usually described as traces, metrics and logs that allow us to observe how services behave and interact with each other. Recognizing how telemetry data is connected across service layers is key to understanding and mitigating complex distributed failures in today’s environments.\nOpenTelemetry is the standard that allows collection of telemetry data in a uniform, vendor-agnostic way across services and databases. For example, it enables the understanding of dependencies between microservices, facilitating investigation into how a single failure might impact services several layers removed.\nThe creation of OpenTelemetry removed the need for every monitoring, tracing analysis and log indexing platform to create unique integrations to collect that information from the environment.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"observability-in-the-data-world\">Observability in the Data world<a href=\"#observability-in-the-data-world\" class=\"hash-link\" aria-label=\"Direct link to Observability in the Data world\" title=\"Direct link to Observability in the Data world\">​</a></h2><p>The data world is organized in a slightly different manner. Services strive for high availability  and expose a contract to be requested from. Data pipelines consume datasets and produce datasets. They could be executed as batch processes or using streaming engines but their fundamental contract is to consume data from given inputs and produce data to given outputs. The contract is now the schema of the dataset and an expectation of a rate of update. </p><p>In this world observability cares about a few things:</p><ul><li><strong>Is the data being delivered?</strong> We might be happy with data being delivered at an hourly or daily rate but we want to know if the job responsible for this is failing and won’t be updating it at all. As a consequence all the datasets depending on this will also not be updated. Correlated SLA misses likes this must be identified to avoid many teams investigating the same problem independently.</li><li><strong>Is the data being delivered on time?</strong> Batch processing for example is relatively forgiving and can still deliver outputs according to a time SLA even when it failed and had to retry or was slower than usual because of disruptions in its environment. However critical data will need to be delivered according to pre-defined SLA. We want to be able to understand where in the data pipeline dependencies, a bottleneck caused a delay and resolve the issue.</li><li><strong>Is the data correct?</strong> Now the worst thing that can happen is not a data pipeline failing. This case is relatively easy to recover from. Once the issue is fixed and the pipeline restarted, it will typically catch up and get back to normal operation after the delay induced by the failure. The worst case scenario for a data engineer or data scientist, is the pipeline carrying through and producing bad data. This usually propagates to downstream consumers and all over the place. Recovering requires understanding that the data is incorrect (usually using a data quality library like Great Expectations or Deequ), identifying the upstream dataset where the problem originated, identifying the downstream datasets where the problem propagated, and restating all those datasets to the correct result.</li><li><strong>Auditing what happened:</strong> Another common need whether it’s for compliance or governance reasons is being able to know if specific sensitive datasets are used according to a defined set of rules. This can be used to protect user privacy, comply with financial regulation, or ensure that key metrics are derived from trusted data sources.</li></ul><p>The key common element in all those use cases is understanding dependencies through <strong>data lineage</strong>, just like services care about understanding dependencies through service traces.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"differences-between-the-data-world-and-the-service-world\">Differences Between the Data world and the service world<a href=\"#differences-between-the-data-world-and-the-service-world\" class=\"hash-link\" aria-label=\"Direct link to Differences Between the Data world and the service world\" title=\"Direct link to Differences Between the Data world and the service world\">​</a></h2><p>If the data world has exactly the same needs for observability than the service world, there are key differences between the two that create the need for a different API to instrument data pipelines.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"overall-dependency-structure\">Overall dependency structure:<a href=\"#overall-dependency-structure\" class=\"hash-link\" aria-label=\"Direct link to Overall dependency structure:\" title=\"Direct link to Overall dependency structure:\">​</a></h3><ul><li><strong>Services</strong> dependencies can vary at the request level. Different requests to the same service may trigger very different downstream requests to other services. Service logic may create very different dependency patterns depending on input, timing and context. Services depend on other services that can be persistent or stateless.</li><li><strong>Data</strong> pipelines tend to be expressed in terms of a transformation from a defined set of input datasets to one or several output datasets. Their input/output structure tends to be a lot more stable and not vary much from record to record in the dataset. It’s effectively a bigraph: jobs consume datasets and datasets are produced by jobs.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"push-vs-pull\">Push vs Pull:<a href=\"#push-vs-pull\" class=\"hash-link\" aria-label=\"Direct link to Push vs Pull:\" title=\"Direct link to Push vs Pull:\">​</a></h3><ul><li><strong>Services</strong> send or push requests to downstream services. Whether it’s synchronous or asynchronous, they can add a traceid to their request that will be propagated downstream. An upstream request spawns one or more downstream requests in a tree structure.</li><li><strong>Data</strong> pipelines pull data from the datasets they consume from. They aggregate and join datasets together. The structure of dependencies is typically a Directed Acyclic Graph at the dataset level instead of a tree at the request level. This means that the granularity of updates does not match one to one in a lot of cases. The frequency of updates can be different from one pipeline to the next and does not neatly align with a trace flowing down the dependencies.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"granularity-of-data-updates\">Granularity of data updates<a href=\"#granularity-of-data-updates\" class=\"hash-link\" aria-label=\"Direct link to Granularity of data updates\" title=\"Direct link to Granularity of data updates\">​</a></h3><ul><li><strong>Services</strong> treat one request at a time and tend to optimize for latency of the request being processed.</li><li><strong>Data</strong> pipelines consume entire datasets and tend to prioritize throughput over latency. The result output can be combining many records from various inputs. When a service request spawns multiple requests downstream a data pipeline tends to do the opposite at the record level while producing multiple derived datasets.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"parallels-between-openlineage-and-opentelemetry\">Parallels between OpenLineage and <a href=\"https://opentelemetry.io/docs/concepts/what-is-opentelemetry/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenTelemetry</a><a href=\"#parallels-between-openlineage-and-opentelemetry\" class=\"hash-link\" aria-label=\"Direct link to parallels-between-openlineage-and-opentelemetry\" title=\"Direct link to parallels-between-openlineage-and-opentelemetry\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"an-api-first\">An API first<a href=\"#an-api-first\" class=\"hash-link\" aria-label=\"Direct link to An API first\" title=\"Direct link to An API first\">​</a></h3><p>Like OpenTelemetry is an API to collect traces, logs and metrics, OpenLineage is first an API to collect lineage. It is agnostic to the backend collecting the data and aspires to be integrated in every data processing engine.\nData lineage is the equivalent of traces for services. It keeps track of dependencies between datasets and data pipelines and how they change over time. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"broad-language-support\">Broad language support<a href=\"#broad-language-support\" class=\"hash-link\" aria-label=\"Direct link to Broad language support\" title=\"Direct link to Broad language support\">​</a></h3><p>Like OpenTelemetry, OpenLineage has broad language support through the definition of its API in the standard JSONSchema representation. It also has dedicated clients to simplify using its semantics in the languages most commonly used for data processing (Java and Python).</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"backend-agnostic\">Backend agnostic<a href=\"#backend-agnostic\" class=\"hash-link\" aria-label=\"Direct link to Backend agnostic\" title=\"Direct link to Backend agnostic\">​</a></h3><p>Like OpenTelemetry, OpenLineage allows the implementation of multiple backends to consume lineage events for a variety of use cases. For example Marquez is an Open Source reference implementation that keeps track of all the changes in your environment and will help you understand what happened if something goes wrong.\nOther metadata projects like Egeria, DataHub, Atlas or Amundsen can also benefit from OpenLineage. Egeria in particular is committed to support OpenLineage as a Metadata bus.\nLike OpenTelemetry, anybody can consume and leverage OpenLineage events.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"integrates-with-popular-frameworks-and-libraries\">Integrates with popular frameworks and libraries<a href=\"#integrates-with-popular-frameworks-and-libraries\" class=\"hash-link\" aria-label=\"Direct link to Integrates with popular frameworks and libraries\" title=\"Direct link to Integrates with popular frameworks and libraries\">​</a></h3><p>Like OpenTelemetry, OpenLineage aspires to be integrated in every data processing tool in the ecosystem. It also provides integration with popular tools that are not integrated yet. For example today you can cover Apache Spark, BigQuery, Snowflake, Redshift, Apache Airflow and others.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"openlineage-specific-capabilities\">OpenLineage specific capabilities<a href=\"#openlineage-specific-capabilities\" class=\"hash-link\" aria-label=\"Direct link to OpenLineage specific capabilities\" title=\"Direct link to OpenLineage specific capabilities\">​</a></h3><p>In addition to those, OpenLineage is extensible to cover various aspects of metadata that are specific to the data world. OpenLineage defines a notion of facet that lets attach well defined pieces of metadata to the OpenLineage entities (Jobs, Runs and Datasets). Facets can be either part of the core spec or be defined as custom facets by third parties. This flexible mechanism lets define independent specs for dataset schema, query profiles or data quality metrics for example. But this is a topic for another post.</p>",
            "url": "https://openlineage.io/blog/openlineage-takes-inspiration-from-opentelemetry",
            "title": "How OpenLineage takes inspiration from OpenTelemetry",
            "summary": "The data world and the service world have many similarities but also a few crucial differences.",
            "date_modified": "2021-06-20T00:00:00.000Z",
            "author": {
                "name": "Julien Le Dem",
                "url": "https://www.github.com/julienledem/"
            },
            "tags": []
        }
    ]
}